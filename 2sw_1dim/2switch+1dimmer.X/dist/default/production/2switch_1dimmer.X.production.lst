

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Jul 07 16:21:31 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1526
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	swtext1,local,class=CONST,delta=2
    40                           	psect	swtext2,local,class=CONST,delta=2
    41                           	psect	swtext3,local,class=CONST,delta=2
    42                           	psect	swtext4,local,class=CONST,delta=2
    43                           	psect	swtext5,local,class=CONST,delta=2
    44                           	psect	swtext6,local,class=CONST,delta=2
    45                           	psect	swtext7,local,class=CONST,delta=2
    46                           	psect	swtext8,local,class=CONST,delta=2
    47                           	psect	swtext9,local,class=CONST,delta=2
    48                           	psect	swtext10,local,class=CONST,delta=2
    49                           	psect	swtext11,local,class=CONST,delta=2
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 1.45
    53                           ; Generated 16/11/2017 GMT
    54                           ; 
    55                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F1526 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0110                     	;# 
   140  0116                     	;# 
   141  0117                     	;# 
   142  011D                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  018F                     	;# 
   146  0190                     	;# 
   147  0191                     	;# 
   148  0191                     	;# 
   149  0192                     	;# 
   150  0193                     	;# 
   151  0193                     	;# 
   152  0194                     	;# 
   153  0195                     	;# 
   154  0196                     	;# 
   155  0197                     	;# 
   156  0199                     	;# 
   157  0199                     	;# 
   158  0199                     	;# 
   159  019A                     	;# 
   160  019A                     	;# 
   161  019A                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019C                     	;# 
   168  019C                     	;# 
   169  019C                     	;# 
   170  019D                     	;# 
   171  019D                     	;# 
   172  019D                     	;# 
   173  019E                     	;# 
   174  019E                     	;# 
   175  019E                     	;# 
   176  019F                     	;# 
   177  019F                     	;# 
   178  019F                     	;# 
   179  020D                     	;# 
   180  020F                     	;# 
   181  0210                     	;# 
   182  0211                     	;# 
   183  0211                     	;# 
   184  0212                     	;# 
   185  0212                     	;# 
   186  0213                     	;# 
   187  0213                     	;# 
   188  0214                     	;# 
   189  0214                     	;# 
   190  0215                     	;# 
   191  0215                     	;# 
   192  0215                     	;# 
   193  0216                     	;# 
   194  0216                     	;# 
   195  0217                     	;# 
   196  0217                     	;# 
   197  0219                     	;# 
   198  021A                     	;# 
   199  021B                     	;# 
   200  021C                     	;# 
   201  021D                     	;# 
   202  021E                     	;# 
   203  021F                     	;# 
   204  028C                     	;# 
   205  028D                     	;# 
   206  0291                     	;# 
   207  0291                     	;# 
   208  0292                     	;# 
   209  0293                     	;# 
   210  0298                     	;# 
   211  0298                     	;# 
   212  0299                     	;# 
   213  029A                     	;# 
   214  029D                     	;# 
   215  029E                     	;# 
   216  029F                     	;# 
   217  030C                     	;# 
   218  030D                     	;# 
   219  0311                     	;# 
   220  0311                     	;# 
   221  0312                     	;# 
   222  0313                     	;# 
   223  0318                     	;# 
   224  0318                     	;# 
   225  0319                     	;# 
   226  031A                     	;# 
   227  031C                     	;# 
   228  031C                     	;# 
   229  031D                     	;# 
   230  031E                     	;# 
   231  038C                     	;# 
   232  038D                     	;# 
   233  0394                     	;# 
   234  0395                     	;# 
   235  0396                     	;# 
   236  040C                     	;# 
   237  040D                     	;# 
   238  0411                     	;# 
   239  0411                     	;# 
   240  0412                     	;# 
   241  0413                     	;# 
   242  0414                     	;# 
   243  0415                     	;# 
   244  0416                     	;# 
   245  0417                     	;# 
   246  0418                     	;# 
   247  0418                     	;# 
   248  0419                     	;# 
   249  041A                     	;# 
   250  041B                     	;# 
   251  041C                     	;# 
   252  041D                     	;# 
   253  041E                     	;# 
   254  048D                     	;# 
   255  0491                     	;# 
   256  0491                     	;# 
   257  0492                     	;# 
   258  0492                     	;# 
   259  0493                     	;# 
   260  0493                     	;# 
   261  0493                     	;# 
   262  0494                     	;# 
   263  0494                     	;# 
   264  0495                     	;# 
   265  0495                     	;# 
   266  0496                     	;# 
   267  0496                     	;# 
   268  0497                     	;# 
   269  0497                     	;# 
   270  0595                     	;# 
   271  0596                     	;# 
   272  0597                     	;# 
   273  059C                     	;# 
   274  059D                     	;# 
   275  059E                     	;# 
   276  0611                     	;# 
   277  0611                     	;# 
   278  0612                     	;# 
   279  0613                     	;# 
   280  0614                     	;# 
   281  0614                     	;# 
   282  0615                     	;# 
   283  0616                     	;# 
   284  0617                     	;# 
   285  0617                     	;# 
   286  0618                     	;# 
   287  0619                     	;# 
   288  061A                     	;# 
   289  061A                     	;# 
   290  061B                     	;# 
   291  061C                     	;# 
   292  061D                     	;# 
   293  061D                     	;# 
   294  061E                     	;# 
   295  061F                     	;# 
   296  0FE4                     	;# 
   297  0FE5                     	;# 
   298  0FE6                     	;# 
   299  0FE7                     	;# 
   300  0FE8                     	;# 
   301  0FE9                     	;# 
   302  0FEA                     	;# 
   303  0FEB                     	;# 
   304  0FED                     	;# 
   305  0FEE                     	;# 
   306  0FEF                     	;# 
   307                           
   308                           	psect	idataBANK0
   309  0002                     __pidataBANK0:	
   310                           
   311                           ;initializer for _man
   312  0002  3401               	retlw	1
   313  0003  3400               	retlw	0
   314                           
   315                           	psect	idataBANK1
   316  0711                     __pidataBANK1:	
   317                           
   318                           ;initializer for _name
   319  0711  3461               	retlw	97
   320  0712  3400               	retlw	0
   321  0713  3400               	retlw	0
   322  0714  3400               	retlw	0
   323  0715  3400               	retlw	0
   324  0716  3400               	retlw	0
   325  0717  3400               	retlw	0
   326  0718  3400               	retlw	0
   327  0719  3400               	retlw	0
   328  071A  3400               	retlw	0
   329  071B  3400               	retlw	0
   330  071C  3400               	retlw	0
   331  071D  3400               	retlw	0
   332  071E  3400               	retlw	0
   333  071F  3400               	retlw	0
   334  0720  3400               	retlw	0
   335  0721  3400               	retlw	0
   336  0722  3400               	retlw	0
   337  0723  3400               	retlw	0
   338  0724  3400               	retlw	0
   339  0725  3400               	retlw	0
   340  0726  3400               	retlw	0
   341  0727  3400               	retlw	0
   342  0728  3400               	retlw	0
   343  0729  3400               	retlw	0
   344  072A  3400               	retlw	0
   345  072B  3400               	retlw	0
   346  072C  3400               	retlw	0
   347  072D  3400               	retlw	0
   348  072E  3400               	retlw	0
   349  072F  3400               	retlw	0
   350  0730  3400               	retlw	0
   351  0731  3400               	retlw	0
   352  0732  3400               	retlw	0
   353  0733  3400               	retlw	0
   354  0734  3400               	retlw	0
   355                           
   356                           ;initializer for _st
   357  0735  3454               	retlw	84
   358  0736  3430               	retlw	48
   359  0737  3430               	retlw	48
   360  0738  3430               	retlw	48
   361  0739  3430               	retlw	48
   362  073A  3430               	retlw	48
   363  073B  3430               	retlw	48
   364  073C  3430               	retlw	48
   365  073D  3430               	retlw	48
   366  073E  3430               	retlw	48
   367  073F  3430               	retlw	48
   368  0740  3430               	retlw	48
   369  0741  3430               	retlw	48
   370  0742  3430               	retlw	48
   371  0743  3430               	retlw	48
   372  0744  3430               	retlw	48
   373  0745  3430               	retlw	48
   374  0746  3430               	retlw	48
   375  0747  3430               	retlw	48
   376  0748  3430               	retlw	48
   377  0749  3430               	retlw	48
   378  074A  3430               	retlw	48
   379  074B  3400               	retlw	0
   380  074C  3400               	retlw	0
   381  074D  3400               	retlw	0
   382  074E  3400               	retlw	0
   383                           
   384                           	psect	idataBANK2
   385  06CD                     __pidataBANK2:	
   386                           
   387                           ;initializer for _copy
   388  06CD  3424               	retlw	36
   389  06CE  3400               	retlw	0
   390  06CF  3400               	retlw	0
   391  06D0  3400               	retlw	0
   392  06D1  3400               	retlw	0
   393  06D2  3400               	retlw	0
   394  06D3  3400               	retlw	0
   395  06D4  3400               	retlw	0
   396  06D5  3400               	retlw	0
   397  06D6  3400               	retlw	0
   398  06D7  3400               	retlw	0
   399  06D8  3400               	retlw	0
   400  06D9  3400               	retlw	0
   401  06DA  3400               	retlw	0
   402  06DB  3400               	retlw	0
   403  06DC  3400               	retlw	0
   404  06DD  3400               	retlw	0
   405  06DE  3400               	retlw	0
   406  06DF  3400               	retlw	0
   407  06E0  3400               	retlw	0
   408  06E1  3400               	retlw	0
   409  06E2  3400               	retlw	0
   410  06E3  3400               	retlw	0
   411  06E4  3400               	retlw	0
   412  06E5  3400               	retlw	0
   413  06E6  3400               	retlw	0
   414  06E7  3400               	retlw	0
   415  06E8  3400               	retlw	0
   416  06E9  3400               	retlw	0
   417  06EA  3400               	retlw	0
   418  06EB  3400               	retlw	0
   419  06EC  3400               	retlw	0
   420  06ED  3400               	retlw	0
   421  06EE  3400               	retlw	0
   422  06EF  3400               	retlw	0
   423  06F0  3400               	retlw	0
   424                           
   425                           ;initializer for _child_LOCK
   426  06F1  3470               	retlw	112
   427  06F2  3400               	retlw	0
   428  06F3  3400               	retlw	0
   429  06F4  3400               	retlw	0
   430  06F5  3400               	retlw	0
   431  06F6  3400               	retlw	0
   432  06F7  3400               	retlw	0
   433  06F8  3400               	retlw	0
   434  06F9  3400               	retlw	0
   435  06FA  3400               	retlw	0
   436  06FB  3400               	retlw	0
   437  06FC  3400               	retlw	0
   438  06FD  3400               	retlw	0
   439  06FE  3400               	retlw	0
   440  06FF  3400               	retlw	0
   441  0700  3400               	retlw	0
   442  0701  3400               	retlw	0
   443  0702  3400               	retlw	0
   444  0703  3400               	retlw	0
   445  0704  3400               	retlw	0
   446  0705  3400               	retlw	0
   447  0706  3400               	retlw	0
   448  0707  3400               	retlw	0
   449  0708  3400               	retlw	0
   450  0709  3400               	retlw	0
   451  070A  3400               	retlw	0
   452  070B  3400               	retlw	0
   453  070C  3400               	retlw	0
   454  070D  3400               	retlw	0
   455  070E  3400               	retlw	0
   456  070F  3400               	retlw	0
   457  0710  3400               	retlw	0
   458  0014                     _PIR4bits	set	20
   459  001A                     _TMR2	set	26
   460  001C                     _T2CON	set	28
   461  0013                     _PIR3bits	set	19
   462  0019                     _T1GCON	set	25
   463  0018                     _T1CON	set	24
   464  0016                     _TMR1L	set	22
   465  0017                     _TMR1H	set	23
   466  001B                     _PR2	set	27
   467  0018                     _T1CONbits	set	24
   468  001C                     _T2CONbits	set	28
   469  0011                     _PIR1bits	set	17
   470  005E                     _PEIE	set	94
   471  005F                     _GIE	set	95
   472  0065                     _RA5	set	101
   473  0063                     _RA3	set	99
   474  0085                     _RE5	set	133
   475  0062                     _RA2	set	98
   476  008D                     _RCIF	set	141
   477  008E                     _TRISCbits	set	142
   478  008C                     _TRISAbits	set	140
   479  0090                     _TRISEbits	set	144
   480  0094                     _PIE4bits	set	148
   481  0093                     _PIE3bits	set	147
   482  0091                     _PIE1bits	set	145
   483  018C                     _ANSELA	set	396
   484  0190                     _ANSELE	set	400
   485  019C                     _SP1BRGH	set	412
   486  019B                     _SP1BRGL	set	411
   487  019E                     _TX1STA	set	414
   488  019D                     _RC1STA	set	413
   489  019F                     _BAUD1CON	set	415
   490  019E                     _TX1STAbits	set	414
   491  0199                     _RC1REG	set	409
   492  019A                     _TX1REG	set	410
   493  019D                     _RC1STAbits	set	413
   494  0210                     _WPUE	set	528
   495  0291                     _CCPR1L	set	657
   496  0292                     _CCPR1H	set	658
   497  0293                     _CCP1CON	set	659
   498  1463                     _RF3	set	5219
   499  1462                     _RF2	set	5218
   500  1461                     _RF1	set	5217
   501  1460                     _RF0	set	5216
   502  030C                     _TRISFbits	set	780
   503  030D                     _TRISGbits	set	781
   504  0312                     _CCPR3H	set	786
   505  0311                     _CCPR3L	set	785
   506  0313                     _CCP3CON	set	787
   507  040C                     _ANSELF	set	1036
   508  040D                     _ANSELG	set	1037
   509  041C                     _TMR6	set	1052
   510  041E                     _T6CON	set	1054
   511  0415                     _TMR4	set	1045
   512  0417                     _T4CON	set	1047
   513  0418                     _TMR5L	set	1048
   514  0419                     _TMR5H	set	1049
   515  041B                     _T5GCON	set	1051
   516  041A                     _T5CON	set	1050
   517  0411                     _TMR3L	set	1041
   518  0412                     _TMR3H	set	1042
   519  0414                     _T3GCON	set	1044
   520  0413                     _T3CON	set	1043
   521  048D                     _WPUG	set	1165
   522  061A                     _CCPR9L	set	1562
   523  061B                     _CCPR9H	set	1563
   524  061C                     _CCP9CON	set	1564
   525                           
   526                           ; #config settings
   527  0000                     
   528                           	psect	cinit
   529  025B                     start_initialization:	
   530  025B                     __initialization:	
   531                           
   532                           ; Initialize objects allocated to BANK0
   533  025B  3180  2002  3182   	fcall	__pidataBANK0	;fetch initializer
   534  025E  00E0               	movwf	__pdataBANK0& (0+127)
   535  025F  3180  2003  3182   	fcall	__pidataBANK0+1	;fetch initializer
   536  0262  00E1               	movwf	(__pdataBANK0+1)& (0+127)
   537                           
   538                           ; Initialize objects allocated to BANK1
   539  0263  3011               	movlw	low __pidataBANK1
   540  0264  0084               	movwf	4
   541  0265  3087               	movlw	(high __pidataBANK1)| (0+128)
   542  0266  0085               	movwf	5
   543  0267  30A0               	movlw	low __pdataBANK1
   544  0268  0086               	movwf	6
   545  0269  3000               	movlw	high __pdataBANK1
   546  026A  0087               	movwf	7
   547  026B  303E               	movlw	62
   548  026C  3187  27F9  3182   	fcall	init_ram
   549                           
   550                           ; Initialize objects allocated to BANK2
   551  026F  30CD               	movlw	low __pidataBANK2
   552  0270  0084               	movwf	4
   553  0271  3086               	movlw	(high __pidataBANK2)| (0+128)
   554  0272  0085               	movwf	5
   555  0273  3020               	movlw	low __pdataBANK2
   556  0274  0086               	movwf	6
   557  0275  3001               	movlw	high __pdataBANK2
   558  0276  0087               	movwf	7
   559  0277  3044               	movlw	68
   560  0278  3187  27F9  3182   	fcall	init_ram
   561                           
   562                           ; Clear objects allocated to COMMON
   563  027B  01FA               	clrf	__pbssCOMMON& (0+127)
   564  027C  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   565                           
   566                           ; Clear objects allocated to BANK0
   567  027D  3045               	movlw	low __pbssBANK0
   568  027E  0084               	movwf	4
   569  027F  3000               	movlw	high __pbssBANK0
   570  0280  0085               	movwf	5
   571  0281  301B               	movlw	27
   572  0282  318F  277B  3182   	fcall	clear_ram0
   573                           
   574                           ; Clear objects allocated to BANK1
   575  0285  30DE               	movlw	low __pbssBANK1
   576  0286  0084               	movwf	4
   577  0287  3000               	movlw	high __pbssBANK1
   578  0288  0085               	movwf	5
   579  0289  300E               	movlw	14
   580  028A  318F  277B         	fcall	clear_ram0
   581  028C                     end_of_initialization:	
   582                           ;End of C runtime variable initialization code
   583                           
   584  028C                     __end_of__initialization:	
   585  028C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   586  028D  0020               	movlb	0
   587  028E  3182  2A90         	ljmp	_main	;jump to C main() function
   588                           
   589                           	psect	bssCOMMON
   590  007A                     __pbssCOMMON:	
   591  007A                     _dimmer3:	
   592  007A                     	ds	1
   593  007B                     _dimmer2:	
   594  007B                     	ds	1
   595                           
   596                           	psect	bssBANK0
   597  0045                     __pbssBANK0:	
   598  0045                     _M3:	
   599  0045                     	ds	2
   600  0047                     _M2:	
   601  0047                     	ds	2
   602  0049                     _M1:	
   603  0049                     	ds	2
   604  004B                     _COPY_FLAG:	
   605  004B                     	ds	2
   606  004D                     _FAN_FLAG1:	
   607  004D                     	ds	2
   608  004F                     _TX_FLAG:	
   609  004F                     	ds	2
   610  0051                     _FAN_SPEED2_10s:	
   611  0051                     	ds	2
   612  0053                     _FAN_SPEED1_1s:	
   613  0053                     	ds	2
   614  0055                     _FAN_SPEED1_10s:	
   615  0055                     	ds	2
   616  0057                     _tk:	
   617  0057                     	ds	2
   618  0059                     _ak:	
   619  0059                     	ds	2
   620  005B                     _pk:	
   621  005B                     	ds	2
   622  005D                     _i:	
   623  005D                     	ds	2
   624  005F                     _dimmer1:	
   625  005F                     	ds	1
   626                           
   627                           	psect	dataBANK0
   628  0060                     __pdataBANK0:	
   629  0060                     _man:	
   630  0060                     	ds	2
   631                           
   632                           	psect	bssBANK1
   633  00DE                     __pbssBANK1:	
   634  00DE                     _M5:	
   635  00DE                     	ds	2
   636  00E0                     _M4:	
   637  00E0                     	ds	2
   638  00E2                     _FAN_FLAG3:	
   639  00E2                     	ds	2
   640  00E4                     _FAN_FLAG2:	
   641  00E4                     	ds	2
   642  00E6                     _FAN_SPEED3_1s:	
   643  00E6                     	ds	2
   644  00E8                     _FAN_SPEED3_10s:	
   645  00E8                     	ds	2
   646  00EA                     _FAN_SPEED2_1s:	
   647  00EA                     	ds	2
   648                           
   649                           	psect	dataBANK1
   650  00A0                     __pdataBANK1:	
   651  00A0                     _name:	
   652  00A0                     	ds	36
   653  00C4                     _st:	
   654  00C4                     	ds	26
   655                           
   656                           	psect	dataBANK2
   657  0120                     __pdataBANK2:	
   658  0120                     _copy:	
   659  0120                     	ds	36
   660  0144                     _child_LOCK:	
   661  0144                     	ds	32
   662                           
   663                           	psect	inittext
   664  07F9                     init_ram:	
   665  07F9  00FE               	movwf	126
   666  07FA                     initloop:	
   667  07FA  0012               	moviw fsr0++
   668  07FB  001E               	movwi fsr1++
   669  07FC  0BFE               	decfsz	126,f
   670  07FD  2FFA               	goto	initloop
   671  07FE  3400               	retlw	0
   672                           
   673                           	psect	clrtext
   674  0F7B                     clear_ram0:	
   675                           ;	Called with FSR0 containing the base address, and
   676                           ;	WREG with the size to clear
   677                           
   678  0F7B  0064               	clrwdt	;clear the watchdog before getting into this loop
   679  0F7C                     clrloop0:	
   680  0F7C  0180               	clrf	0	;clear RAM location pointed to by FSR
   681  0F7D  3101               	addfsr 0,1
   682  0F7E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   683  0F7F  2F7C               	goto	clrloop0	;have we reached the end yet?
   684  0F80  3400               	retlw	0	;all done for this memory range, return
   685                           
   686                           	psect	cstackBANK3
   687  01A0                     __pcstackBANK3:	
   688  01A0                     main@RX_CHK_FLAG_start1:	
   689                           
   690                           ; 2 bytes @ 0x0
   691  01A0                     	ds	2
   692  01A2                     main@RX_CHK_FLAG_start2:	
   693                           
   694                           ; 2 bytes @ 0x2
   695  01A2                     	ds	2
   696  01A4                     main@RX_CHK_FLAG_end1:	
   697                           
   698                           ; 2 bytes @ 0x4
   699  01A4                     	ds	2
   700  01A6                     main@RX_CHK_FLAG_end2:	
   701                           
   702                           ; 2 bytes @ 0x6
   703  01A6                     	ds	2
   704  01A8                     main@start_flag:	
   705                           
   706                           ; 2 bytes @ 0x8
   707  01A8                     	ds	2
   708  01AA                     main@end_flag:	
   709                           
   710                           ; 2 bytes @ 0xA
   711  01AA                     	ds	2
   712  01AC                     main@k_582:	
   713                           
   714                           ; 2 bytes @ 0xC
   715  01AC                     	ds	2
   716  01AE                     main@k:	
   717                           
   718                           ; 2 bytes @ 0xE
   719  01AE                     	ds	2
   720                           
   721                           	psect	cstackCOMMON
   722  0070                     __pcstackCOMMON:	
   723  0070                     ?_isdigit:	
   724  0070                     ?_EUSART_Initialize:	
   725                           ; 1 bit 
   726                           
   727  0070                     ?_CCP1_Initialize:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ?_CCP3_Initialize:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?_CCP9_Initialize:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ?_TMR1_Initialize:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?_TMR3_Initialize:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?_TMR2_Initialize:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?_TMR4_Initialize:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?_TMR5_Initialize:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ?_TMR6_Initialize:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ?_pin_manager:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?_writeUART:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ?_isr:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ??_isr:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?_periperal_init:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?_main:	
   770                           ; 1 bytes @ 0x0
   771                           
   772                           
   773                           ; 1 bytes @ 0x0
   774  0070                     	ds	2
   775  0072                     ??_EUSART_Initialize:	
   776  0072                     ??_CCP1_Initialize:	
   777                           ; 1 bytes @ 0x2
   778                           
   779  0072                     ??_CCP3_Initialize:	
   780                           ; 1 bytes @ 0x2
   781                           
   782  0072                     ??_CCP9_Initialize:	
   783                           ; 1 bytes @ 0x2
   784                           
   785  0072                     ??_TMR1_Initialize:	
   786                           ; 1 bytes @ 0x2
   787                           
   788  0072                     ??_TMR3_Initialize:	
   789                           ; 1 bytes @ 0x2
   790                           
   791  0072                     ??_TMR2_Initialize:	
   792                           ; 1 bytes @ 0x2
   793                           
   794  0072                     ??_TMR4_Initialize:	
   795                           ; 1 bytes @ 0x2
   796                           
   797  0072                     ??_TMR5_Initialize:	
   798                           ; 1 bytes @ 0x2
   799                           
   800  0072                     ??_TMR6_Initialize:	
   801                           ; 1 bytes @ 0x2
   802                           
   803  0072                     ??_pin_manager:	
   804                           ; 1 bytes @ 0x2
   805                           
   806  0072                     ?_copy_frame:	
   807                           ; 1 bytes @ 0x2
   808                           
   809  0072                     ??_writeUART:	
   810                           ; 1 bytes @ 0x2
   811                           
   812  0072                     ??_isdigit:	
   813                           ; 1 bytes @ 0x2
   814                           
   815  0072                     ??_periperal_init:	
   816                           ; 1 bytes @ 0x2
   817                           
   818  0072                     ?___wmul:	
   819                           ; 1 bytes @ 0x2
   820                           
   821  0072                     _isdigit$832:	
   822                           ; 2 bytes @ 0x2
   823                           
   824  0072                     copy_frame@start:	
   825                           ; 1 bytes @ 0x2
   826                           
   827  0072                     ___wmul@multiplier:	
   828                           ; 2 bytes @ 0x2
   829                           
   830                           
   831                           ; 2 bytes @ 0x2
   832  0072                     	ds	1
   833  0073                     isdigit@c:	
   834  0073                     writeUART@Tx_count:	
   835                           ; 1 bytes @ 0x3
   836                           
   837                           
   838                           ; 2 bytes @ 0x3
   839  0073                     	ds	1
   840  0074                     copy_frame@end:	
   841  0074                     ___wmul@multiplicand:	
   842                           ; 2 bytes @ 0x4
   843                           
   844                           
   845                           ; 2 bytes @ 0x4
   846  0074                     	ds	1
   847  0075                     writeUART@str2Write:	
   848                           
   849                           ; 1 bytes @ 0x5
   850  0075                     	ds	1
   851  0076                     ??_copy_frame:	
   852  0076                     ??___wmul:	
   853                           ; 1 bytes @ 0x6
   854                           
   855  0076                     ___wmul@product:	
   856                           ; 1 bytes @ 0x6
   857                           
   858                           
   859                           ; 2 bytes @ 0x6
   860  0076                     	ds	2
   861  0078                     ?_atoi:	
   862                           
   863                           ; 2 bytes @ 0x8
   864  0078                     	ds	2
   865                           
   866                           	psect	cstackBANK0
   867  0020                     __pcstackBANK0:	
   868  0020                     ??_atoi:	
   869  0020                     copy_frame@sw:	
   870                           ; 1 bytes @ 0x0
   871                           
   872                           
   873                           ; 2 bytes @ 0x0
   874  0020                     	ds	2
   875  0022                     atoi@sign:	
   876  0022                     copy_frame@k:	
   877                           ; 1 bytes @ 0x2
   878                           
   879                           
   880                           ; 2 bytes @ 0x2
   881  0022                     	ds	1
   882  0023                     atoi@a:	
   883                           
   884                           ; 2 bytes @ 0x3
   885  0023                     	ds	2
   886  0025                     atoi@s:	
   887                           
   888                           ; 1 bytes @ 0x5
   889  0025                     	ds	1
   890  0026                     ?_ACTION:	
   891  0026                     ACTION@Switch_Num_1s:	
   892                           ; 1 bytes @ 0x6
   893                           
   894                           
   895                           ; 1 bytes @ 0x6
   896  0026                     	ds	1
   897  0027                     ACTION@sw_status:	
   898                           
   899                           ; 1 bytes @ 0x7
   900  0027                     	ds	1
   901  0028                     ACTION@speed_bitHigh:	
   902                           
   903                           ; 1 bytes @ 0x8
   904  0028                     	ds	1
   905  0029                     ACTION@speed_bitLow:	
   906                           
   907                           ; 1 bytes @ 0x9
   908  0029                     	ds	1
   909  002A                     ACTION@parent:	
   910                           
   911                           ; 1 bytes @ 0xA
   912  002A                     	ds	1
   913  002B                     ACTION@finalFrameStat:	
   914                           
   915                           ; 1 bytes @ 0xB
   916  002B                     	ds	1
   917  002C                     ??_ACTION:	
   918                           
   919                           ; 1 bytes @ 0xC
   920  002C                     	ds	2
   921  002E                     ACTION@FanSpeed:	
   922                           
   923                           ; 2 bytes @ 0xE
   924  002E                     	ds	2
   925  0030                     ACTION@children:	
   926                           
   927                           ; 2 bytes @ 0x10
   928  0030                     	ds	2
   929  0032                     ACTION@child_lock_num:	
   930                           
   931                           ; 2 bytes @ 0x12
   932  0032                     	ds	2
   933  0034                     ACTION@Switch_Num_10s:	
   934                           
   935                           ; 1 bytes @ 0x14
   936  0034                     	ds	1
   937  0035                     ACTION@FanSpeedString:	
   938                           
   939                           ; 2 bytes @ 0x15
   940  0035                     	ds	2
   941  0037                     ACTION@SwNumString:	
   942                           
   943                           ; 2 bytes @ 0x17
   944  0037                     	ds	2
   945  0039                     ACTION@SwNum:	
   946                           
   947                           ; 2 bytes @ 0x19
   948  0039                     	ds	2
   949  003B                     ACTION@response_starts:	
   950                           
   951                           ; 2 bytes @ 0x1B
   952  003B                     	ds	2
   953  003D                     ACTION@switch_status:	
   954                           
   955                           ; 2 bytes @ 0x1D
   956  003D                     	ds	2
   957  003F                     ??_main:	
   958                           
   959                           ; 1 bytes @ 0x1F
   960  003F                     	ds	6
   961                           
   962                           	psect	maintext
   963  0290                     __pmaintext:	
   964 ;;
   965 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   966 ;;
   967 ;; *************** function _main *****************
   968 ;; Defined at:
   969 ;;		line 1102 in file "2+1dimmmer.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;  k               2   12[BANK3 ] int 
   974 ;;  k               2   14[BANK3 ] int 
   975 ;;  end_flag        2   10[BANK3 ] int 
   976 ;;  start_flag      2    8[BANK3 ] int 
   977 ;;  RX_CHK_FLAG_    2    6[BANK3 ] int 
   978 ;;  RX_CHK_FLAG_    2    4[BANK3 ] int 
   979 ;;  RX_CHK_FLAG_    2    2[BANK3 ] int 
   980 ;;  RX_CHK_FLAG_    2    0[BANK3 ] int 
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : B1F/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
   990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
   991 ;;      Locals:         0       0       0       0      16       0       0       0       0       0       0
   992 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0
   993 ;;      Totals:         0       6       0       0      16       0       0       0       0       0       0
   994 ;;Total ram usage:       22 bytes
   995 ;; Hardware stack levels required when called:    4
   996 ;; This function calls:
   997 ;;		_ACTION
   998 ;;		_copy_frame
   999 ;;		_periperal_init
  1000 ;;		_pin_manager
  1001 ;;		_writeUART
  1002 ;; This function is called by:
  1003 ;;		Startup code after reset
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           
  1008                           ;psect for function _main
  1009  0290                     _main:	
  1010                           
  1011                           ;2+1dimmmer.c: 1103: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1012                           
  1013                           ;incstack = 0
  1014                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1015  0290  3029               	movlw	41
  1016  0291  0020               	movlb	0	; select bank0
  1017  0292  00C0               	movwf	??_main+1
  1018  0293  3096               	movlw	150
  1019  0294  00BF               	movwf	??_main
  1020  0295  307F               	movlw	127
  1021  0296                     u2517:	
  1022  0296  0B89               	decfsz	9,f
  1023  0297  2A96               	goto	u2517
  1024  0298  0BBF               	decfsz	??_main,f
  1025  0299  2A96               	goto	u2517
  1026  029A  0BC0               	decfsz	??_main+1,f
  1027  029B  2A96               	goto	u2517
  1028                           
  1029                           ;2+1dimmmer.c: 1105: int RX_CHK_FLAG_start1 = 0 ,RX_CHK_FLAG_start2 = 0, start_flag=0;
  1030  029C  0023               	movlb	3	; select bank3
  1031  029D  01A0               	clrf	main@RX_CHK_FLAG_start1^(0+384)
  1032  029E  01A1               	clrf	(main@RX_CHK_FLAG_start1+1)^(0+384)
  1033  029F  01A2               	clrf	main@RX_CHK_FLAG_start2^(0+384)
  1034  02A0  01A3               	clrf	(main@RX_CHK_FLAG_start2+1)^(0+384)
  1035  02A1  01A8               	clrf	main@start_flag^(0+384)
  1036  02A2  01A9               	clrf	(main@start_flag+1)^(0+384)
  1037                           
  1038                           ;2+1dimmmer.c: 1106: int RX_CHK_FLAG_end1 = 0, RX_CHK_FLAG_end2 = 0, end_flag=0;
  1039  02A3  01A4               	clrf	main@RX_CHK_FLAG_end1^(0+384)
  1040  02A4  01A5               	clrf	(main@RX_CHK_FLAG_end1+1)^(0+384)
  1041  02A5  01A6               	clrf	main@RX_CHK_FLAG_end2^(0+384)
  1042  02A6  01A7               	clrf	(main@RX_CHK_FLAG_end2+1)^(0+384)
  1043  02A7  01AA               	clrf	main@end_flag^(0+384)
  1044  02A8  01AB               	clrf	(main@end_flag+1)^(0+384)
  1045                           
  1046                           ;2+1dimmmer.c: 1108: pin_manager();
  1047  02A9  3187  2787  3182   	fcall	_pin_manager
  1048                           
  1049                           ;2+1dimmmer.c: 1109: periperal_init();
  1050  02AC  3187  27A7  3182   	fcall	_periperal_init
  1051                           
  1052                           ;2+1dimmmer.c: 1111: RF0 = 0; RF1 = 0; RE5 = 1; RA3 = 1; RA2 = 1;
  1053  02AF  0025               	movlb	5	; select bank5
  1054  02B0  100C               	bcf	12,0	;volatile
  1055  02B1  108C               	bcf	12,1	;volatile
  1056  02B2  0020               	movlb	0	; select bank0
  1057  02B3  1690               	bsf	16,5	;volatile
  1058  02B4  158C               	bsf	12,3	;volatile
  1059  02B5  150C               	bsf	12,2	;volatile
  1060                           
  1061                           ;2+1dimmmer.c: 1112: M1=1; M2=1; M3=1; M4=1; M5=1;
  1062  02B6  3001               	movlw	1
  1063  02B7  00C9               	movwf	_M1
  1064  02B8  3000               	movlw	0
  1065  02B9  00CA               	movwf	_M1+1
  1066  02BA  3001               	movlw	1
  1067  02BB  00C7               	movwf	_M2
  1068  02BC  3000               	movlw	0
  1069  02BD  00C8               	movwf	_M2+1
  1070  02BE  3001               	movlw	1
  1071  02BF  00C5               	movwf	_M3
  1072  02C0  3000               	movlw	0
  1073  02C1  00C6               	movwf	_M3+1
  1074  02C2  3001               	movlw	1
  1075  02C3  0021               	movlb	1	; select bank1
  1076  02C4  00E0               	movwf	_M4^(0+128)
  1077  02C5  3000               	movlw	0
  1078  02C6  00E1               	movwf	(_M4^(0+128)+1)
  1079  02C7  3001               	movlw	1
  1080  02C8  00DE               	movwf	_M5^(0+128)
  1081  02C9  3000               	movlw	0
  1082  02CA  00DF               	movwf	(_M5^(0+128)+1)
  1083                           
  1084                           ;2+1dimmmer.c: 1114: st[0]='%';
  1085  02CB  3025               	movlw	37
  1086  02CC  0020               	movlb	0	; select bank0
  1087  02CD  00BF               	movwf	??_main
  1088  02CE  083F               	movf	??_main,w
  1089  02CF  0021               	movlb	1	; select bank1
  1090  02D0  00C4               	movwf	_st^(0+128)
  1091                           
  1092                           ;2+1dimmmer.c: 1115: st[21]='@';
  1093  02D1  3040               	movlw	64
  1094  02D2  0020               	movlb	0	; select bank0
  1095  02D3  00BF               	movwf	??_main
  1096  02D4  083F               	movf	??_main,w
  1097  02D5  0021               	movlb	1	; select bank1
  1098  02D6  00D9               	movwf	(_st^(0+128)+21)
  1099  02D7                     l4418:	
  1100                           ;2+1dimmmer.c: 1117: while(1){
  1101                           
  1102                           
  1103                           ;2+1dimmmer.c: 1119: if(TX_FLAG==1)
  1104  02D7  0020               	movlb	0	; select bank0
  1105  02D8  034F               	decf	_TX_FLAG,w
  1106  02D9  0450               	iorwf	_TX_FLAG+1,w
  1107  02DA  1D03               	btfss	3,2
  1108  02DB  2C21               	goto	l4504
  1109                           
  1110                           ;2+1dimmmer.c: 1120: {
  1111                           ;2+1dimmmer.c: 1122: TX_FLAG=0; start_flag = 0; end_flag = 0;
  1112  02DC  01CF               	clrf	_TX_FLAG
  1113  02DD  01D0               	clrf	_TX_FLAG+1
  1114  02DE  0023               	movlb	3	; select bank3
  1115  02DF  01A8               	clrf	main@start_flag^(0+384)
  1116  02E0  01A9               	clrf	(main@start_flag+1)^(0+384)
  1117  02E1  01AA               	clrf	main@end_flag^(0+384)
  1118  02E2  01AB               	clrf	(main@end_flag+1)^(0+384)
  1119                           
  1120                           ;2+1dimmmer.c: 1124: if(name[0]=='%' && name[1]=='%' && name[14]=='@' && name[15]=='@')
  1121  02E3  3025               	movlw	37
  1122  02E4  0021               	movlb	1	; select bank1
  1123  02E5  0620               	xorwf	_name^(0+128),w
  1124  02E6  1D03               	btfss	3,2
  1125  02E7  2B82               	goto	l4472
  1126  02E8  3025               	movlw	37
  1127  02E9  0621               	xorwf	(_name^(0+128)+1),w
  1128  02EA  1D03               	btfss	3,2
  1129  02EB  2B82               	goto	l4472
  1130  02EC  3040               	movlw	64
  1131  02ED  062E               	xorwf	(_name^(0+128)+14),w
  1132  02EE  1D03               	btfss	3,2
  1133  02EF  2B82               	goto	l4472
  1134  02F0  3040               	movlw	64
  1135  02F1  062F               	xorwf	(_name^(0+128)+15),w
  1136  02F2  1D03               	btfss	3,2
  1137  02F3  2B82               	goto	l4472
  1138                           
  1139                           ;2+1dimmmer.c: 1125: {
  1140                           ;2+1dimmmer.c: 1126: for(int k=0;k<16;k++)
  1141  02F4  0023               	movlb	3	; select bank3
  1142  02F5  01AE               	clrf	main@k^(0+384)
  1143  02F6  01AF               	clrf	(main@k+1)^(0+384)
  1144  02F7                     L3:	
  1145  02F7  082F               	movf	(main@k+1)^(0+384),w
  1146  02F8  3A80               	xorlw	128
  1147  02F9  0020               	movlb	0	; select bank0
  1148  02FA  00BF               	movwf	??_main
  1149  02FB  3080               	movlw	128
  1150  02FC  023F               	subwf	??_main,w
  1151  02FD  1D03               	skipz
  1152  02FE  2B02               	goto	u2095
  1153  02FF  3010               	movlw	16
  1154  0300  0023               	movlb	3	; select bank3
  1155  0301  022E               	subwf	main@k^(0+384),w
  1156  0302                     u2095:	
  1157  0302  1803               	btfsc	3,0
  1158  0303  2BD8               	goto	l4492
  1159                           
  1160                           ;2+1dimmmer.c: 1127: {
  1161                           ;2+1dimmmer.c: 1128: if(name[k] == '%' && name[k+1] == '%' && start_flag == 0)
  1162  0304  0023               	movlb	3	; select bank3
  1163  0305  082E               	movf	main@k^(0+384),w
  1164  0306  3EA0               	addlw	(low (_name| 0))& (0+255)
  1165  0307  0086               	movwf	6
  1166  0308  0187               	clrf	7
  1167  0309  3025               	movlw	37
  1168  030A  0601               	xorwf	1,w
  1169  030B  1D03               	btfss	3,2
  1170  030C  2B23               	goto	l4444
  1171  030D  082E               	movf	main@k^(0+384),w
  1172  030E  3E01               	addlw	1
  1173  030F  3EA0               	addlw	(low (_name| 0))& (0+255)
  1174  0310  0086               	movwf	6
  1175  0311  0187               	clrf	7
  1176  0312  3025               	movlw	37
  1177  0313  0601               	xorwf	1,w
  1178  0314  1D03               	btfss	3,2
  1179  0315  2B23               	goto	l4444
  1180  0316  0828               	movf	main@start_flag^(0+384),w
  1181  0317  0429               	iorwf	(main@start_flag+1)^(0+384),w
  1182  0318  1D03               	btfss	3,2
  1183  0319  2B23               	goto	l4444
  1184                           
  1185                           ;2+1dimmmer.c: 1129: {
  1186                           ;2+1dimmmer.c: 1130: RX_CHK_FLAG_start1 = k;
  1187  031A  082F               	movf	(main@k+1)^(0+384),w
  1188  031B  00A1               	movwf	(main@RX_CHK_FLAG_start1+1)^(0+384)
  1189  031C  082E               	movf	main@k^(0+384),w
  1190  031D  00A0               	movwf	main@RX_CHK_FLAG_start1^(0+384)
  1191                           
  1192                           ;2+1dimmmer.c: 1131: start_flag = 1;
  1193  031E  3001               	movlw	1
  1194  031F  00A8               	movwf	main@start_flag^(0+384)
  1195  0320  3000               	movlw	0
  1196  0321  00A9               	movwf	(main@start_flag^(0+384)+1)
  1197                           
  1198                           ;2+1dimmmer.c: 1132: }
  1199  0322  2B7C               	goto	l4470
  1200  0323                     l4444:	
  1201                           
  1202                           ;2+1dimmmer.c: 1133: else if(name[k] == '%' && name[k+1] == '%' && start_flag == 1)
  1203  0323  082E               	movf	main@k^(0+384),w
  1204  0324  3EA0               	addlw	(low (_name| 0))& (0+255)
  1205  0325  0086               	movwf	6
  1206  0326  0187               	clrf	7
  1207  0327  3025               	movlw	37
  1208  0328  0601               	xorwf	1,w
  1209  0329  1D03               	btfss	3,2
  1210  032A  2B3D               	goto	l4452
  1211  032B  082E               	movf	main@k^(0+384),w
  1212  032C  3E01               	addlw	1
  1213  032D  3EA0               	addlw	(low (_name| 0))& (0+255)
  1214  032E  0086               	movwf	6
  1215  032F  0187               	clrf	7
  1216  0330  3025               	movlw	37
  1217  0331  0601               	xorwf	1,w
  1218  0332  1D03               	btfss	3,2
  1219  0333  2B3D               	goto	l4452
  1220  0334  0328               	decf	main@start_flag^(0+384),w
  1221  0335  0429               	iorwf	(main@start_flag+1)^(0+384),w
  1222  0336  1D03               	btfss	3,2
  1223  0337  2B3D               	goto	l4452
  1224                           
  1225                           ;2+1dimmmer.c: 1134: {
  1226                           ;2+1dimmmer.c: 1135: RX_CHK_FLAG_start2 = k;
  1227  0338  082F               	movf	(main@k+1)^(0+384),w
  1228  0339  00A3               	movwf	(main@RX_CHK_FLAG_start2+1)^(0+384)
  1229  033A  082E               	movf	main@k^(0+384),w
  1230  033B  00A2               	movwf	main@RX_CHK_FLAG_start2^(0+384)
  1231                           
  1232                           ;2+1dimmmer.c: 1136: }
  1233  033C  2B7C               	goto	l4470
  1234  033D                     l4452:	
  1235                           
  1236                           ;2+1dimmmer.c: 1137: else if(name[k] == '@' && name[k+1] == '@' && end_flag == 0)
  1237  033D  082E               	movf	main@k^(0+384),w
  1238  033E  3EA0               	addlw	(low (_name| 0))& (0+255)
  1239  033F  0086               	movwf	6
  1240  0340  0187               	clrf	7
  1241  0341  3040               	movlw	64
  1242  0342  0601               	xorwf	1,w
  1243  0343  1D03               	btfss	3,2
  1244  0344  2B5C               	goto	l4462
  1245  0345  082E               	movf	main@k^(0+384),w
  1246  0346  3E01               	addlw	1
  1247  0347  3EA0               	addlw	(low (_name| 0))& (0+255)
  1248  0348  0086               	movwf	6
  1249  0349  0187               	clrf	7
  1250  034A  3040               	movlw	64
  1251  034B  0601               	xorwf	1,w
  1252  034C  1D03               	btfss	3,2
  1253  034D  2B5C               	goto	l4462
  1254  034E  082A               	movf	main@end_flag^(0+384),w
  1255  034F  042B               	iorwf	(main@end_flag+1)^(0+384),w
  1256  0350  1D03               	btfss	3,2
  1257  0351  2B5C               	goto	l4462
  1258                           
  1259                           ;2+1dimmmer.c: 1138: {
  1260                           ;2+1dimmmer.c: 1139: RX_CHK_FLAG_end1 = k;
  1261  0352  082F               	movf	(main@k+1)^(0+384),w
  1262  0353  00A5               	movwf	(main@RX_CHK_FLAG_end1+1)^(0+384)
  1263  0354  082E               	movf	main@k^(0+384),w
  1264  0355  00A4               	movwf	main@RX_CHK_FLAG_end1^(0+384)
  1265                           
  1266                           ;2+1dimmmer.c: 1140: end_flag = 1;
  1267  0356  3001               	movlw	1
  1268  0357  00AA               	movwf	main@end_flag^(0+384)
  1269  0358  3000               	movlw	0
  1270  0359  00AB               	movwf	(main@end_flag^(0+384)+1)
  1271                           
  1272                           ;2+1dimmmer.c: 1141: COPY_FLAG=1;
  1273  035A  3001               	movlw	1
  1274  035B  2B77               	goto	L1
  1275  035C                     l4462:	
  1276                           ;2+1dimmmer.c: 1143: }
  1277                           
  1278                           ;2+1dimmmer.c: 1142: break;
  1279                           
  1280                           
  1281                           ;2+1dimmmer.c: 1144: else if(name[k] == '@' && name[k+1] == '@' && end_flag == 1)
  1282  035C  0023               	movlb	3	; select bank3
  1283  035D  082E               	movf	main@k^(0+384),w
  1284  035E  3EA0               	addlw	(low (_name| 0))& (0+255)
  1285  035F  0086               	movwf	6
  1286  0360  0187               	clrf	7
  1287  0361  3040               	movlw	64
  1288  0362  0601               	xorwf	1,w
  1289  0363  1D03               	btfss	3,2
  1290  0364  2B7C               	goto	l4470
  1291  0365  082E               	movf	main@k^(0+384),w
  1292  0366  3E01               	addlw	1
  1293  0367  3EA0               	addlw	(low (_name| 0))& (0+255)
  1294  0368  0086               	movwf	6
  1295  0369  0187               	clrf	7
  1296  036A  3040               	movlw	64
  1297  036B  0601               	xorwf	1,w
  1298  036C  1D03               	btfss	3,2
  1299  036D  2B7C               	goto	l4470
  1300  036E  032A               	decf	main@end_flag^(0+384),w
  1301  036F  042B               	iorwf	(main@end_flag+1)^(0+384),w
  1302  0370  1D03               	btfss	3,2
  1303  0371  2B7C               	goto	l4470
  1304                           
  1305                           ;2+1dimmmer.c: 1145: {
  1306                           ;2+1dimmmer.c: 1146: RX_CHK_FLAG_end2 = k;
  1307  0372  082F               	movf	(main@k+1)^(0+384),w
  1308  0373  00A7               	movwf	(main@RX_CHK_FLAG_end2+1)^(0+384)
  1309  0374  082E               	movf	main@k^(0+384),w
  1310  0375  00A6               	movwf	main@RX_CHK_FLAG_end2^(0+384)
  1311                           
  1312                           ;2+1dimmmer.c: 1147: COPY_FLAG=2;
  1313  0376  3002               	movlw	2
  1314  0377                     L1:	
  1315  0377  0020               	movlb	0	; select bank0
  1316  0378  00CB               	movwf	_COPY_FLAG
  1317  0379  3000               	movlw	0
  1318  037A  00CC               	movwf	_COPY_FLAG+1
  1319                           
  1320                           ;2+1dimmmer.c: 1148: break;
  1321  037B  2BD8               	goto	l4492
  1322  037C                     l4470:	
  1323  037C  3001               	movlw	1
  1324  037D  0023               	movlb	3	; select bank3
  1325  037E  07AE               	addwf	main@k^(0+384),f
  1326  037F  3000               	movlw	0
  1327  0380  3DAF               	addwfc	(main@k+1)^(0+384),f
  1328  0381  2AF7               	goto	L3
  1329  0382                     l4472:	
  1330                           ;2+1dimmmer.c: 1149: }
  1331                           ;2+1dimmmer.c: 1150: }
  1332                           ;2+1dimmmer.c: 1151: }
  1333                           
  1334                           
  1335                           ;2+1dimmmer.c: 1152: else
  1336                           ;2+1dimmmer.c: 1153: {
  1337                           ;2+1dimmmer.c: 1154: _delay((unsigned long)((10)*(16000000/4000.0))); TX1REG='P'; _delay
      +                          ((unsigned long)((1)*(16000000/4000.0))); TX1REG='K'; _delay((unsigned long)((1)*(160000
      +                          00/4000.0)));
  1338  0382  3034               	movlw	52
  1339  0383  0020               	movlb	0	; select bank0
  1340  0384  00BF               	movwf	??_main
  1341  0385  30F1               	movlw	241
  1342  0386                     u2527:	
  1343  0386  0B89               	decfsz	9,f
  1344  0387  2B86               	goto	u2527
  1345  0388  0BBF               	decfsz	??_main,f
  1346  0389  2B86               	goto	u2527
  1347  038A  3200               	nop2
  1348  038B  3050               	movlw	80
  1349  038C  0023               	movlb	3	; select bank3
  1350  038D  009A               	movwf	26	;volatile
  1351  038E  3006               	movlw	6
  1352  038F  0020               	movlb	0	; select bank0
  1353  0390  00BF               	movwf	??_main
  1354  0391  3030               	movlw	48
  1355  0392                     u2537:	
  1356  0392  0B89               	decfsz	9,f
  1357  0393  2B92               	goto	u2537
  1358  0394  0BBF               	decfsz	??_main,f
  1359  0395  2B92               	goto	u2537
  1360  0396  0000               	nop
  1361  0397  304B               	movlw	75
  1362  0398  0023               	movlb	3	; select bank3
  1363  0399  009A               	movwf	26	;volatile
  1364  039A  3006               	movlw	6
  1365  039B  0020               	movlb	0	; select bank0
  1366  039C  00BF               	movwf	??_main
  1367  039D  3030               	movlw	48
  1368  039E                     u2547:	
  1369  039E  0B89               	decfsz	9,f
  1370  039F  2B9E               	goto	u2547
  1371  03A0  0BBF               	decfsz	??_main,f
  1372  03A1  2B9E               	goto	u2547
  1373  03A2  0000               	nop
  1374                           
  1375                           ;2+1dimmmer.c: 1155: i=0; RC1STAbits.SPEN=0; RC1STAbits.SPEN=1;
  1376  03A3  0020               	movlb	0	; select bank0
  1377  03A4  01DD               	clrf	_i
  1378  03A5  01DE               	clrf	_i+1
  1379  03A6  0023               	movlb	3	; select bank3
  1380  03A7  139D               	bcf	29,7	;volatile
  1381  03A8  179D               	bsf	29,7	;volatile
  1382                           
  1383                           ;2+1dimmmer.c: 1156: for(int k = 0; k< 15; k++)
  1384  03A9  01AC               	clrf	main@k_582^(0+384)
  1385  03AA  01AD               	clrf	(main@k_582+1)^(0+384)
  1386  03AB  082D               	movf	(main@k_582+1)^(0+384),w
  1387  03AC  3A80               	xorlw	128
  1388  03AD  0020               	movlb	0	; select bank0
  1389  03AE  00BF               	movwf	??_main
  1390  03AF  3080               	movlw	128
  1391  03B0  023F               	subwf	??_main,w
  1392  03B1  1D03               	skipz
  1393  03B2  2BB6               	goto	u2235
  1394  03B3  300F               	movlw	15
  1395  03B4  0023               	movlb	3	; select bank3
  1396  03B5  022C               	subwf	main@k_582^(0+384),w
  1397  03B6                     u2235:	
  1398  03B6  1803               	btfsc	3,0
  1399  03B7  2BD5               	goto	l4490
  1400  03B8                     l4484:	
  1401                           
  1402                           ;2+1dimmmer.c: 1157: {
  1403                           ;2+1dimmmer.c: 1158: name[k] = '#';
  1404  03B8  3023               	movlw	35
  1405  03B9  0020               	movlb	0	; select bank0
  1406  03BA  00BF               	movwf	??_main
  1407  03BB  0023               	movlb	3	; select bank3
  1408  03BC  082C               	movf	main@k_582^(0+384),w
  1409  03BD  3EA0               	addlw	(low (_name| 0))& (0+255)
  1410  03BE  0086               	movwf	6
  1411  03BF  0187               	clrf	7
  1412  03C0  0020               	movlb	0	; select bank0
  1413  03C1  083F               	movf	??_main,w
  1414  03C2  0081               	movwf	1
  1415  03C3  3001               	movlw	1
  1416  03C4  0023               	movlb	3	; select bank3
  1417  03C5  07AC               	addwf	main@k_582^(0+384),f
  1418  03C6  3000               	movlw	0
  1419  03C7  3DAD               	addwfc	(main@k_582+1)^(0+384),f
  1420  03C8  082D               	movf	(main@k_582+1)^(0+384),w
  1421  03C9  3A80               	xorlw	128
  1422  03CA  0020               	movlb	0	; select bank0
  1423  03CB  00BF               	movwf	??_main
  1424  03CC  3080               	movlw	128
  1425  03CD  023F               	subwf	??_main,w
  1426  03CE  1D03               	skipz
  1427  03CF  2BD3               	goto	u2245
  1428  03D0  300F               	movlw	15
  1429  03D1  0023               	movlb	3	; select bank3
  1430  03D2  022C               	subwf	main@k_582^(0+384),w
  1431  03D3                     u2245:	
  1432  03D3  1C03               	skipc
  1433  03D4  2BB8               	goto	l4484
  1434  03D5                     l4490:	
  1435                           
  1436                           ;2+1dimmmer.c: 1159: }
  1437                           ;2+1dimmmer.c: 1162: COPY_FLAG=0;
  1438  03D5  0020               	movlb	0	; select bank0
  1439  03D6  01CB               	clrf	_COPY_FLAG
  1440  03D7  01CC               	clrf	_COPY_FLAG+1
  1441  03D8                     l4492:	
  1442                           
  1443                           ;2+1dimmmer.c: 1163: }
  1444                           ;2+1dimmmer.c: 1166: if(COPY_FLAG==1)
  1445  03D8  0020               	movlb	0	; select bank0
  1446  03D9  034B               	decf	_COPY_FLAG,w
  1447  03DA  044C               	iorwf	_COPY_FLAG+1,w
  1448  03DB  1D03               	btfss	3,2
  1449  03DC  2BE6               	goto	l4498
  1450                           
  1451                           ;2+1dimmmer.c: 1167: {
  1452                           ;2+1dimmmer.c: 1168: copy_frame(RX_CHK_FLAG_start1,RX_CHK_FLAG_end1);
  1453  03DD  0023               	movlb	3	; select bank3
  1454  03DE  0821               	movf	(main@RX_CHK_FLAG_start1+1)^(0+384),w
  1455  03DF  00F3               	movwf	copy_frame@start+1
  1456  03E0  0820               	movf	main@RX_CHK_FLAG_start1^(0+384),w
  1457  03E1  00F2               	movwf	copy_frame@start
  1458  03E2  0825               	movf	(main@RX_CHK_FLAG_end1+1)^(0+384),w
  1459  03E3  00F5               	movwf	copy_frame@end+1
  1460  03E4  0824               	movf	main@RX_CHK_FLAG_end1^(0+384),w
  1461  03E5  2BF4               	goto	L2
  1462  03E6                     l4498:	
  1463                           ;2+1dimmmer.c: 1171: }
  1464                           
  1465                           ;2+1dimmmer.c: 1170: ACTION(copy[2], copy[3], copy[4], copy[5], copy[6], copy[7],copy[8]
      +                          );
  1466                           
  1467                           
  1468                           ;2+1dimmmer.c: 1172: else if(COPY_FLAG==2)
  1469  03E6  3002               	movlw	2
  1470  03E7  0020               	movlb	0	; select bank0
  1471  03E8  064B               	xorwf	_COPY_FLAG,w
  1472  03E9  044C               	iorwf	_COPY_FLAG+1,w
  1473  03EA  1D03               	btfss	3,2
  1474  03EB  2C21               	goto	l4504
  1475                           
  1476                           ;2+1dimmmer.c: 1173: {
  1477                           ;2+1dimmmer.c: 1174: copy_frame(RX_CHK_FLAG_start2,RX_CHK_FLAG_end2);
  1478  03EC  0023               	movlb	3	; select bank3
  1479  03ED  0823               	movf	(main@RX_CHK_FLAG_start2+1)^(0+384),w
  1480  03EE  00F3               	movwf	copy_frame@start+1
  1481  03EF  0822               	movf	main@RX_CHK_FLAG_start2^(0+384),w
  1482  03F0  00F2               	movwf	copy_frame@start
  1483  03F1  0827               	movf	(main@RX_CHK_FLAG_end2+1)^(0+384),w
  1484  03F2  00F5               	movwf	copy_frame@end+1
  1485  03F3  0826               	movf	main@RX_CHK_FLAG_end2^(0+384),w
  1486  03F4                     L2:	
  1487  03F4  00F4               	movwf	copy_frame@end
  1488  03F5  3187  274F  3182   	fcall	_copy_frame
  1489                           
  1490                           ;2+1dimmmer.c: 1175: ACTION(copy[2], copy[3], copy[4], copy[5], copy[6], copy[7],copy[8]
      +                          );
  1491  03F8  0022               	movlb	2	; select bank2
  1492  03F9  0823               	movf	(_copy^(0+256)+3),w
  1493  03FA  0020               	movlb	0	; select bank0
  1494  03FB  00BF               	movwf	??_main
  1495  03FC  083F               	movf	??_main,w
  1496  03FD  00A6               	movwf	ACTION@Switch_Num_1s
  1497  03FE  0022               	movlb	2	; select bank2
  1498  03FF  0824               	movf	(_copy^(0+256)+4),w
  1499  0400  0020               	movlb	0	; select bank0
  1500  0401  00C0               	movwf	??_main+1
  1501  0402  0840               	movf	??_main+1,w
  1502  0403  00A7               	movwf	ACTION@sw_status
  1503  0404  0022               	movlb	2	; select bank2
  1504  0405  0825               	movf	(_copy^(0+256)+5),w
  1505  0406  0020               	movlb	0	; select bank0
  1506  0407  00C1               	movwf	??_main+2
  1507  0408  0841               	movf	??_main+2,w
  1508  0409  00A8               	movwf	ACTION@speed_bitHigh
  1509  040A  0022               	movlb	2	; select bank2
  1510  040B  0826               	movf	(_copy^(0+256)+6),w
  1511  040C  0020               	movlb	0	; select bank0
  1512  040D  00C2               	movwf	??_main+3
  1513  040E  0842               	movf	??_main+3,w
  1514  040F  00A9               	movwf	ACTION@speed_bitLow
  1515  0410  0022               	movlb	2	; select bank2
  1516  0411  0827               	movf	(_copy^(0+256)+7),w
  1517  0412  0020               	movlb	0	; select bank0
  1518  0413  00C3               	movwf	??_main+4
  1519  0414  0843               	movf	??_main+4,w
  1520  0415  00AA               	movwf	ACTION@parent
  1521  0416  0022               	movlb	2	; select bank2
  1522  0417  0828               	movf	(_copy^(0+256)+8),w
  1523  0418  0020               	movlb	0	; select bank0
  1524  0419  00C4               	movwf	??_main+5
  1525  041A  0844               	movf	??_main+5,w
  1526  041B  00AB               	movwf	ACTION@finalFrameStat
  1527  041C  0022               	movlb	2	; select bank2
  1528  041D  0822               	movf	(_copy^(0+256)+2),w
  1529  041E  3185  2560  3182   	fcall	_ACTION
  1530  0421                     l4504:	
  1531                           
  1532                           ;2+1dimmmer.c: 1176: }
  1533                           ;2+1dimmmer.c: 1177: }
  1534                           ;2+1dimmmer.c: 1182: if(child_LOCK[1]==0 && RA5==0 && M1==0)
  1535  0421  0022               	movlb	2	; select bank2
  1536  0422  0845               	movf	(_child_LOCK^(0+256)+1),w
  1537  0423  1D03               	btfss	3,2
  1538  0424  2C56               	goto	l4522
  1539  0425  0020               	movlb	0	; select bank0
  1540  0426  1A8C               	btfsc	12,5	;volatile
  1541  0427  2C56               	goto	l4522
  1542  0428  0849               	movf	_M1,w
  1543  0429  044A               	iorwf	_M1+1,w
  1544  042A  1D03               	btfss	3,2
  1545  042B  2C56               	goto	l4522
  1546                           
  1547                           ;2+1dimmmer.c: 1183: {
  1548                           ;2+1dimmmer.c: 1184: if(man==1)
  1549  042C  0360               	decf	_man,w
  1550  042D  0461               	iorwf	_man+1,w
  1551  042E  1D03               	btfss	3,2
  1552  042F  2C4D               	goto	l4518
  1553                           
  1554                           ;2+1dimmmer.c: 1185: {
  1555                           ;2+1dimmmer.c: 1186: st[1]='R'; st[2]='0'; st[3]='0'; st[4]='1'; writeUART(st+1); RF0=0;
  1556  0430  3052               	movlw	82
  1557  0431  00BF               	movwf	??_main
  1558  0432  083F               	movf	??_main,w
  1559  0433  0021               	movlb	1	; select bank1
  1560  0434  00C5               	movwf	(_st^(0+128)+1)
  1561  0435  3030               	movlw	48
  1562  0436  0020               	movlb	0	; select bank0
  1563  0437  00BF               	movwf	??_main
  1564  0438  083F               	movf	??_main,w
  1565  0439  0021               	movlb	1	; select bank1
  1566  043A  00C6               	movwf	(_st^(0+128)+2)
  1567  043B  3030               	movlw	48
  1568  043C  0020               	movlb	0	; select bank0
  1569  043D  00BF               	movwf	??_main
  1570  043E  083F               	movf	??_main,w
  1571  043F  0021               	movlb	1	; select bank1
  1572  0440  00C7               	movwf	(_st^(0+128)+3)
  1573  0441  3031               	movlw	49
  1574  0442  0020               	movlb	0	; select bank0
  1575  0443  00BF               	movwf	??_main
  1576  0444  083F               	movf	??_main,w
  1577  0445  0021               	movlb	1	; select bank1
  1578  0446  00C8               	movwf	(_st^(0+128)+4)
  1579  0447  30C5               	movlw	(low ((_st| 0+1)))& (0+255)
  1580  0448  3187  27E0  3182   	fcall	_writeUART
  1581  044B  0025               	movlb	5	; select bank5
  1582  044C  100C               	bcf	12,0	;volatile
  1583  044D                     l4518:	
  1584                           
  1585                           ;2+1dimmmer.c: 1187: }
  1586                           ;2+1dimmmer.c: 1188: M1=1; man=1;
  1587  044D  3001               	movlw	1
  1588  044E  0020               	movlb	0	; select bank0
  1589  044F  00C9               	movwf	_M1
  1590  0450  3000               	movlw	0
  1591  0451  00CA               	movwf	_M1+1
  1592  0452  3001               	movlw	1
  1593  0453  00E0               	movwf	_man
  1594  0454  3000               	movlw	0
  1595  0455  00E1               	movwf	_man+1
  1596  0456                     l4522:	
  1597                           
  1598                           ;2+1dimmmer.c: 1189: }
  1599                           ;2+1dimmmer.c: 1192: if(child_LOCK[1]==0 && RA5==1 && M1==1)
  1600  0456  0022               	movlb	2	; select bank2
  1601  0457  0845               	movf	(_child_LOCK^(0+256)+1),w
  1602  0458  1D03               	btfss	3,2
  1603  0459  2C89               	goto	l4540
  1604  045A  0020               	movlb	0	; select bank0
  1605  045B  1E8C               	btfss	12,5	;volatile
  1606  045C  2C89               	goto	l4540
  1607  045D  0349               	decf	_M1,w
  1608  045E  044A               	iorwf	_M1+1,w
  1609  045F  1D03               	btfss	3,2
  1610  0460  2C89               	goto	l4540
  1611                           
  1612                           ;2+1dimmmer.c: 1193: {
  1613                           ;2+1dimmmer.c: 1194: if(man==1)
  1614  0461  0360               	decf	_man,w
  1615  0462  0461               	iorwf	_man+1,w
  1616  0463  1D03               	btfss	3,2
  1617  0464  2C82               	goto	l4536
  1618                           
  1619                           ;2+1dimmmer.c: 1195: {
  1620                           ;2+1dimmmer.c: 1196: st[1]='R'; st[2]='1'; st[3]='0'; st[4]='1'; writeUART(st+1); RF0=1;
  1621  0465  3052               	movlw	82
  1622  0466  00BF               	movwf	??_main
  1623  0467  083F               	movf	??_main,w
  1624  0468  0021               	movlb	1	; select bank1
  1625  0469  00C5               	movwf	(_st^(0+128)+1)
  1626  046A  3031               	movlw	49
  1627  046B  0020               	movlb	0	; select bank0
  1628  046C  00BF               	movwf	??_main
  1629  046D  083F               	movf	??_main,w
  1630  046E  0021               	movlb	1	; select bank1
  1631  046F  00C6               	movwf	(_st^(0+128)+2)
  1632  0470  3030               	movlw	48
  1633  0471  0020               	movlb	0	; select bank0
  1634  0472  00BF               	movwf	??_main
  1635  0473  083F               	movf	??_main,w
  1636  0474  0021               	movlb	1	; select bank1
  1637  0475  00C7               	movwf	(_st^(0+128)+3)
  1638  0476  3031               	movlw	49
  1639  0477  0020               	movlb	0	; select bank0
  1640  0478  00BF               	movwf	??_main
  1641  0479  083F               	movf	??_main,w
  1642  047A  0021               	movlb	1	; select bank1
  1643  047B  00C8               	movwf	(_st^(0+128)+4)
  1644  047C  30C5               	movlw	(low ((_st| 0+1)))& (0+255)
  1645  047D  3187  27E0  3182   	fcall	_writeUART
  1646  0480  0025               	movlb	5	; select bank5
  1647  0481  140C               	bsf	12,0	;volatile
  1648  0482                     l4536:	
  1649                           
  1650                           ;2+1dimmmer.c: 1197: }
  1651                           ;2+1dimmmer.c: 1198: M1=0; man=1;
  1652  0482  0020               	movlb	0	; select bank0
  1653  0483  01C9               	clrf	_M1
  1654  0484  01CA               	clrf	_M1+1
  1655  0485  3001               	movlw	1
  1656  0486  00E0               	movwf	_man
  1657  0487  3000               	movlw	0
  1658  0488  00E1               	movwf	_man+1
  1659  0489                     l4540:	
  1660                           
  1661                           ;2+1dimmmer.c: 1199: }
  1662                           ;2+1dimmmer.c: 1201: if( child_LOCK[3]==0 && RF2==0 && M2==0)
  1663  0489  0022               	movlb	2	; select bank2
  1664  048A  0847               	movf	(_child_LOCK^(0+256)+3),w
  1665  048B  1D03               	btfss	3,2
  1666  048C  2CBF               	goto	l4558
  1667  048D  0025               	movlb	5	; select bank5
  1668  048E  190C               	btfsc	12,2	;volatile
  1669  048F  2CBF               	goto	l4558
  1670  0490  0020               	movlb	0	; select bank0
  1671  0491  0847               	movf	_M2,w
  1672  0492  0448               	iorwf	_M2+1,w
  1673  0493  1D03               	btfss	3,2
  1674  0494  2CBF               	goto	l4558
  1675                           
  1676                           ;2+1dimmmer.c: 1202: {
  1677                           ;2+1dimmmer.c: 1203: if(man==1)
  1678  0495  0360               	decf	_man,w
  1679  0496  0461               	iorwf	_man+1,w
  1680  0497  1D03               	btfss	3,2
  1681  0498  2CB6               	goto	l4554
  1682                           
  1683                           ;2+1dimmmer.c: 1204: {
  1684                           ;2+1dimmmer.c: 1205: st[5]='R'; st[6]='0'; st[7]='0'; st[8]='2'; writeUART(st+5); RF1=0;
  1685  0499  3052               	movlw	82
  1686  049A  00BF               	movwf	??_main
  1687  049B  083F               	movf	??_main,w
  1688  049C  0021               	movlb	1	; select bank1
  1689  049D  00C9               	movwf	(_st^(0+128)+5)
  1690  049E  3030               	movlw	48
  1691  049F  0020               	movlb	0	; select bank0
  1692  04A0  00BF               	movwf	??_main
  1693  04A1  083F               	movf	??_main,w
  1694  04A2  0021               	movlb	1	; select bank1
  1695  04A3  00CA               	movwf	(_st^(0+128)+6)
  1696  04A4  3030               	movlw	48
  1697  04A5  0020               	movlb	0	; select bank0
  1698  04A6  00BF               	movwf	??_main
  1699  04A7  083F               	movf	??_main,w
  1700  04A8  0021               	movlb	1	; select bank1
  1701  04A9  00CB               	movwf	(_st^(0+128)+7)
  1702  04AA  3032               	movlw	50
  1703  04AB  0020               	movlb	0	; select bank0
  1704  04AC  00BF               	movwf	??_main
  1705  04AD  083F               	movf	??_main,w
  1706  04AE  0021               	movlb	1	; select bank1
  1707  04AF  00CC               	movwf	(_st^(0+128)+8)
  1708  04B0  30C9               	movlw	(low ((_st| 0+5)))& (0+255)
  1709  04B1  3187  27E0  3182   	fcall	_writeUART
  1710  04B4  0025               	movlb	5	; select bank5
  1711  04B5  108C               	bcf	12,1	;volatile
  1712  04B6                     l4554:	
  1713                           
  1714                           ;2+1dimmmer.c: 1206: }
  1715                           ;2+1dimmmer.c: 1207: M2=1; man=1;
  1716  04B6  3001               	movlw	1
  1717  04B7  0020               	movlb	0	; select bank0
  1718  04B8  00C7               	movwf	_M2
  1719  04B9  3000               	movlw	0
  1720  04BA  00C8               	movwf	_M2+1
  1721  04BB  3001               	movlw	1
  1722  04BC  00E0               	movwf	_man
  1723  04BD  3000               	movlw	0
  1724  04BE  00E1               	movwf	_man+1
  1725  04BF                     l4558:	
  1726                           
  1727                           ;2+1dimmmer.c: 1208: }
  1728                           ;2+1dimmmer.c: 1210: if(child_LOCK[3]==0 && RF2==1 && M2==1)
  1729  04BF  0022               	movlb	2	; select bank2
  1730  04C0  0847               	movf	(_child_LOCK^(0+256)+3),w
  1731  04C1  1D03               	btfss	3,2
  1732  04C2  2CF3               	goto	l4576
  1733  04C3  0025               	movlb	5	; select bank5
  1734  04C4  1D0C               	btfss	12,2	;volatile
  1735  04C5  2CF3               	goto	l4576
  1736  04C6  0020               	movlb	0	; select bank0
  1737  04C7  0347               	decf	_M2,w
  1738  04C8  0448               	iorwf	_M2+1,w
  1739  04C9  1D03               	btfss	3,2
  1740  04CA  2CF3               	goto	l4576
  1741                           
  1742                           ;2+1dimmmer.c: 1211: {
  1743                           ;2+1dimmmer.c: 1212: if(man==1)
  1744  04CB  0360               	decf	_man,w
  1745  04CC  0461               	iorwf	_man+1,w
  1746  04CD  1D03               	btfss	3,2
  1747  04CE  2CEC               	goto	l4572
  1748                           
  1749                           ;2+1dimmmer.c: 1213: {
  1750                           ;2+1dimmmer.c: 1214: st[5]='R'; st[6]='1'; st[7]='0'; st[8]='2'; writeUART(st+5); RF1=1;
  1751  04CF  3052               	movlw	82
  1752  04D0  00BF               	movwf	??_main
  1753  04D1  083F               	movf	??_main,w
  1754  04D2  0021               	movlb	1	; select bank1
  1755  04D3  00C9               	movwf	(_st^(0+128)+5)
  1756  04D4  3031               	movlw	49
  1757  04D5  0020               	movlb	0	; select bank0
  1758  04D6  00BF               	movwf	??_main
  1759  04D7  083F               	movf	??_main,w
  1760  04D8  0021               	movlb	1	; select bank1
  1761  04D9  00CA               	movwf	(_st^(0+128)+6)
  1762  04DA  3030               	movlw	48
  1763  04DB  0020               	movlb	0	; select bank0
  1764  04DC  00BF               	movwf	??_main
  1765  04DD  083F               	movf	??_main,w
  1766  04DE  0021               	movlb	1	; select bank1
  1767  04DF  00CB               	movwf	(_st^(0+128)+7)
  1768  04E0  3032               	movlw	50
  1769  04E1  0020               	movlb	0	; select bank0
  1770  04E2  00BF               	movwf	??_main
  1771  04E3  083F               	movf	??_main,w
  1772  04E4  0021               	movlb	1	; select bank1
  1773  04E5  00CC               	movwf	(_st^(0+128)+8)
  1774  04E6  30C9               	movlw	(low ((_st| 0+5)))& (0+255)
  1775  04E7  3187  27E0  3182   	fcall	_writeUART
  1776  04EA  0025               	movlb	5	; select bank5
  1777  04EB  148C               	bsf	12,1	;volatile
  1778  04EC                     l4572:	
  1779                           
  1780                           ;2+1dimmmer.c: 1215: }
  1781                           ;2+1dimmmer.c: 1216: M2=0; man=1;
  1782  04EC  0020               	movlb	0	; select bank0
  1783  04ED  01C7               	clrf	_M2
  1784  04EE  01C8               	clrf	_M2+1
  1785  04EF  3001               	movlw	1
  1786  04F0  00E0               	movwf	_man
  1787  04F1  3000               	movlw	0
  1788  04F2  00E1               	movwf	_man+1
  1789  04F3                     l4576:	
  1790                           
  1791                           ;2+1dimmmer.c: 1217: }
  1792                           ;2+1dimmmer.c: 1219: if(child_LOCK[5]==0 && RF3==0 && M3==0)
  1793  04F3  0022               	movlb	2	; select bank2
  1794  04F4  0849               	movf	(_child_LOCK^(0+256)+5),w
  1795  04F5  1D03               	btfss	3,2
  1796  04F6  2D2A               	goto	l4596
  1797  04F7  0025               	movlb	5	; select bank5
  1798  04F8  198C               	btfsc	12,3	;volatile
  1799  04F9  2D2A               	goto	l4596
  1800  04FA  0020               	movlb	0	; select bank0
  1801  04FB  0845               	movf	_M3,w
  1802  04FC  0446               	iorwf	_M3+1,w
  1803  04FD  1D03               	btfss	3,2
  1804  04FE  2D2A               	goto	l4596
  1805                           
  1806                           ;2+1dimmmer.c: 1220: {
  1807                           ;2+1dimmmer.c: 1221: if(man==1)
  1808  04FF  0360               	decf	_man,w
  1809  0500  0461               	iorwf	_man+1,w
  1810  0501  1D03               	btfss	3,2
  1811  0502  2D22               	goto	l4592
  1812                           
  1813                           ;2+1dimmmer.c: 1222: {
  1814                           ;2+1dimmmer.c: 1223: st[9]='R'; st[10]='0'; st[11]='0'; st[12]='3'; writeUART(st+9);
  1815  0503  3052               	movlw	82
  1816  0504  00BF               	movwf	??_main
  1817  0505  083F               	movf	??_main,w
  1818  0506  0021               	movlb	1	; select bank1
  1819  0507  00CD               	movwf	(_st^(0+128)+9)
  1820  0508  3030               	movlw	48
  1821  0509  0020               	movlb	0	; select bank0
  1822  050A  00BF               	movwf	??_main
  1823  050B  083F               	movf	??_main,w
  1824  050C  0021               	movlb	1	; select bank1
  1825  050D  00CE               	movwf	(_st^(0+128)+10)
  1826  050E  3030               	movlw	48
  1827  050F  0020               	movlb	0	; select bank0
  1828  0510  00BF               	movwf	??_main
  1829  0511  083F               	movf	??_main,w
  1830  0512  0021               	movlb	1	; select bank1
  1831  0513  00CF               	movwf	(_st^(0+128)+11)
  1832  0514  3033               	movlw	51
  1833  0515  0020               	movlb	0	; select bank0
  1834  0516  00BF               	movwf	??_main
  1835  0517  083F               	movf	??_main,w
  1836  0518  0021               	movlb	1	; select bank1
  1837  0519  00D0               	movwf	(_st^(0+128)+12)
  1838  051A  30CD               	movlw	(low ((_st| 0+9)))& (0+255)
  1839  051B  3187  27E0  3182   	fcall	_writeUART
  1840                           
  1841                           ;2+1dimmmer.c: 1224: RA2=1;
  1842  051E  0020               	movlb	0	; select bank0
  1843  051F  150C               	bsf	12,2	;volatile
  1844                           
  1845                           ;2+1dimmmer.c: 1225: FAN_FLAG1=0;
  1846  0520  01CD               	clrf	_FAN_FLAG1
  1847  0521  01CE               	clrf	_FAN_FLAG1+1
  1848  0522                     l4592:	
  1849                           
  1850                           ;2+1dimmmer.c: 1226: }
  1851                           ;2+1dimmmer.c: 1227: M3=1;
  1852  0522  3001               	movlw	1
  1853  0523  00C5               	movwf	_M3
  1854  0524  3000               	movlw	0
  1855  0525  00C6               	movwf	_M3+1
  1856                           
  1857                           ;2+1dimmmer.c: 1228: man=1;
  1858  0526  3001               	movlw	1
  1859  0527  00E0               	movwf	_man
  1860  0528  3000               	movlw	0
  1861  0529  00E1               	movwf	_man+1
  1862  052A                     l4596:	
  1863                           
  1864                           ;2+1dimmmer.c: 1229: }
  1865                           ;2+1dimmmer.c: 1231: if( child_LOCK[5]==0 && RF3==1 && M3==1)
  1866  052A  0022               	movlb	2	; select bank2
  1867  052B  0849               	movf	(_child_LOCK^(0+256)+5),w
  1868  052C  1D03               	btfss	3,2
  1869  052D  2AD7               	goto	l4418
  1870  052E  0025               	movlb	5	; select bank5
  1871  052F  1D8C               	btfss	12,3	;volatile
  1872  0530  2AD7               	goto	l4418
  1873  0531  0020               	movlb	0	; select bank0
  1874  0532  0345               	decf	_M3,w
  1875  0533  0446               	iorwf	_M3+1,w
  1876  0534  1D03               	btfss	3,2
  1877  0535  2AD7               	goto	l4418
  1878                           
  1879                           ;2+1dimmmer.c: 1232: {
  1880                           ;2+1dimmmer.c: 1233: if(man==1)
  1881  0536  0360               	decf	_man,w
  1882  0537  0461               	iorwf	_man+1,w
  1883  0538  1D03               	btfss	3,2
  1884  0539  2D59               	goto	l4612
  1885                           
  1886                           ;2+1dimmmer.c: 1234: {
  1887                           ;2+1dimmmer.c: 1235: st[9]='R'; st[10]='1'; st[11]='0'; st[12]='3'; writeUART(st+9);
  1888  053A  3052               	movlw	82
  1889  053B  00BF               	movwf	??_main
  1890  053C  083F               	movf	??_main,w
  1891  053D  0021               	movlb	1	; select bank1
  1892  053E  00CD               	movwf	(_st^(0+128)+9)
  1893  053F  3031               	movlw	49
  1894  0540  0020               	movlb	0	; select bank0
  1895  0541  00BF               	movwf	??_main
  1896  0542  083F               	movf	??_main,w
  1897  0543  0021               	movlb	1	; select bank1
  1898  0544  00CE               	movwf	(_st^(0+128)+10)
  1899  0545  3030               	movlw	48
  1900  0546  0020               	movlb	0	; select bank0
  1901  0547  00BF               	movwf	??_main
  1902  0548  083F               	movf	??_main,w
  1903  0549  0021               	movlb	1	; select bank1
  1904  054A  00CF               	movwf	(_st^(0+128)+11)
  1905  054B  3033               	movlw	51
  1906  054C  0020               	movlb	0	; select bank0
  1907  054D  00BF               	movwf	??_main
  1908  054E  083F               	movf	??_main,w
  1909  054F  0021               	movlb	1	; select bank1
  1910  0550  00D0               	movwf	(_st^(0+128)+12)
  1911  0551  30CD               	movlw	(low ((_st| 0+9)))& (0+255)
  1912  0552  3187  27E0  3182   	fcall	_writeUART
  1913                           
  1914                           ;2+1dimmmer.c: 1236: RA2=0;
  1915  0555  0020               	movlb	0	; select bank0
  1916  0556  110C               	bcf	12,2	;volatile
  1917                           
  1918                           ;2+1dimmmer.c: 1237: FAN_FLAG1=0;
  1919  0557  01CD               	clrf	_FAN_FLAG1
  1920  0558  01CE               	clrf	_FAN_FLAG1+1
  1921  0559                     l4612:	
  1922                           
  1923                           ;2+1dimmmer.c: 1238: }
  1924                           ;2+1dimmmer.c: 1239: M3=0;
  1925  0559  01C5               	clrf	_M3
  1926  055A  01C6               	clrf	_M3+1
  1927                           
  1928                           ;2+1dimmmer.c: 1240: man=1;
  1929  055B  3001               	movlw	1
  1930  055C  00E0               	movwf	_man
  1931  055D  3000               	movlw	0
  1932  055E  00E1               	movwf	_man+1
  1933  055F  2AD7               	goto	l4418
  1934  0560                     __end_of_main:	
  1935                           
  1936                           	psect	text1
  1937  0787                     __ptext1:	
  1938 ;; *************** function _pin_manager *****************
  1939 ;; Defined at:
  1940 ;;		line 1653 in file "2+1dimmmer.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;		None
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;		None
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      void 
  1947 ;; Registers used:
  1948 ;;		status,2
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  1954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  1955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  1956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  1957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  1958 ;;Total ram usage:        0 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:    1
  1961 ;; This function calls:
  1962 ;;		Nothing
  1963 ;; This function is called by:
  1964 ;;		_main
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           
  1969                           ;psect for function _pin_manager
  1970  0787                     _pin_manager:	
  1971                           
  1972                           ;2+1dimmmer.c: 1658: ANSELG=0x00;
  1973                           
  1974                           ;incstack = 0
  1975                           ; Regs used in _pin_manager: [status,2]
  1976  0787  0028               	movlb	8	; select bank8
  1977  0788  018D               	clrf	13	;volatile
  1978                           
  1979                           ;2+1dimmmer.c: 1659: TRISGbits.TRISG0=1;
  1980  0789  0026               	movlb	6	; select bank6
  1981  078A  140D               	bsf	13,0	;volatile
  1982                           
  1983                           ;2+1dimmmer.c: 1661: WPUG = 0;
  1984  078B  0029               	movlb	9	; select bank9
  1985  078C  018D               	clrf	13	;volatile
  1986                           
  1987                           ;2+1dimmmer.c: 1664: ANSELF=0x00;
  1988  078D  0028               	movlb	8	; select bank8
  1989  078E  018C               	clrf	12	;volatile
  1990                           
  1991                           ;2+1dimmmer.c: 1665: TRISFbits.TRISF0=0;
  1992  078F  0026               	movlb	6	; select bank6
  1993  0790  100C               	bcf	12,0	;volatile
  1994                           
  1995                           ;2+1dimmmer.c: 1666: TRISFbits.TRISF1=0;
  1996  0791  108C               	bcf	12,1	;volatile
  1997                           
  1998                           ;2+1dimmmer.c: 1667: TRISFbits.TRISF2=1;
  1999  0792  150C               	bsf	12,2	;volatile
  2000                           
  2001                           ;2+1dimmmer.c: 1668: TRISFbits.TRISF3=1;
  2002  0793  158C               	bsf	12,3	;volatile
  2003                           
  2004                           ;2+1dimmmer.c: 1670: TRISFbits.TRISF5=1;
  2005  0794  168C               	bsf	12,5	;volatile
  2006                           
  2007                           ;2+1dimmmer.c: 1672: TRISFbits.TRISF7=1;
  2008  0795  178C               	bsf	12,7	;volatile
  2009                           
  2010                           ;2+1dimmmer.c: 1675: WPUE=0x00;
  2011  0796  0024               	movlb	4	; select bank4
  2012  0797  0190               	clrf	16	;volatile
  2013                           
  2014                           ;2+1dimmmer.c: 1676: ANSELE=0x00;
  2015  0798  0023               	movlb	3	; select bank3
  2016  0799  0190               	clrf	16	;volatile
  2017                           
  2018                           ;2+1dimmmer.c: 1677: TRISEbits.TRISE3=1;
  2019  079A  0021               	movlb	1	; select bank1
  2020  079B  1590               	bsf	16,3	;volatile
  2021                           
  2022                           ;2+1dimmmer.c: 1678: TRISEbits.TRISE5=0;
  2023  079C  1290               	bcf	16,5	;volatile
  2024                           
  2025                           ;2+1dimmmer.c: 1696: ANSELA = 0x00;
  2026  079D  0023               	movlb	3	; select bank3
  2027  079E  018C               	clrf	12	;volatile
  2028                           
  2029                           ;2+1dimmmer.c: 1699: TRISAbits.TRISA2=0;
  2030  079F  0021               	movlb	1	; select bank1
  2031  07A0  110C               	bcf	12,2	;volatile
  2032                           
  2033                           ;2+1dimmmer.c: 1700: TRISAbits.TRISA3=0;
  2034  07A1  118C               	bcf	12,3	;volatile
  2035                           
  2036                           ;2+1dimmmer.c: 1702: TRISAbits.TRISA5=1;
  2037  07A2  168C               	bsf	12,5	;volatile
  2038                           
  2039                           ;2+1dimmmer.c: 1707: TRISCbits.TRISC2 = 1;
  2040  07A3  150E               	bsf	14,2	;volatile
  2041                           
  2042                           ;2+1dimmmer.c: 1710: TRISCbits.TRISC6 = 0;
  2043  07A4  130E               	bcf	14,6	;volatile
  2044                           
  2045                           ;2+1dimmmer.c: 1711: TRISCbits.TRISC7 = 1;
  2046  07A5  178E               	bsf	14,7	;volatile
  2047  07A6  0008               	return
  2048  07A7                     __end_of_pin_manager:	
  2049                           
  2050                           	psect	text2
  2051  07A7                     __ptext2:	
  2052 ;; *************** function _periperal_init *****************
  2053 ;; Defined at:
  2054 ;;		line 1085 in file "2+1dimmmer.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;		None
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;		None
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0, pclath, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2072 ;;Total ram usage:        0 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    2
  2075 ;; This function calls:
  2076 ;;		_CCP1_Initialize
  2077 ;;		_CCP3_Initialize
  2078 ;;		_CCP9_Initialize
  2079 ;;		_EUSART_Initialize
  2080 ;;		_TMR1_Initialize
  2081 ;;		_TMR2_Initialize
  2082 ;;		_TMR3_Initialize
  2083 ;;		_TMR4_Initialize
  2084 ;;		_TMR5_Initialize
  2085 ;;		_TMR6_Initialize
  2086 ;; This function is called by:
  2087 ;;		_main
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           
  2092                           ;psect for function _periperal_init
  2093  07A7                     _periperal_init:	
  2094                           
  2095                           ;2+1dimmmer.c: 1087: EUSART_Initialize();
  2096                           
  2097                           ;incstack = 0
  2098                           ; Regs used in _periperal_init: [wreg+status,2+status,0+pclath+cstack]
  2099  07A7  318F  27EA  3187   	fcall	_EUSART_Initialize
  2100                           
  2101                           ;2+1dimmmer.c: 1088: CCP1_Initialize();
  2102  07AA  318F  27D0  3187   	fcall	_CCP1_Initialize
  2103                           
  2104                           ;2+1dimmmer.c: 1089: CCP3_Initialize();
  2105  07AD  318F  2793  3187   	fcall	_CCP3_Initialize
  2106                           
  2107                           ;2+1dimmmer.c: 1091: CCP9_Initialize();
  2108  07B0  318F  279D  3187   	fcall	_CCP9_Initialize
  2109                           
  2110                           ;2+1dimmmer.c: 1093: TMR1_Initialize();
  2111  07B3  318F  27C5  3187   	fcall	_TMR1_Initialize
  2112                           
  2113                           ;2+1dimmmer.c: 1094: TMR3_Initialize();
  2114  07B6  318F  27B1  3187   	fcall	_TMR3_Initialize
  2115                           
  2116                           ;2+1dimmmer.c: 1095: TMR2_Initialize();
  2117  07B9  318F  27A7  3187   	fcall	_TMR2_Initialize
  2118                           
  2119                           ;2+1dimmmer.c: 1096: TMR4_Initialize();
  2120  07BC  318F  2781  3187   	fcall	_TMR4_Initialize
  2121                           
  2122                           ;2+1dimmmer.c: 1097: TMR5_Initialize();
  2123  07BF  318F  27BB  3187   	fcall	_TMR5_Initialize
  2124                           
  2125                           ;2+1dimmmer.c: 1098: TMR6_Initialize();
  2126  07C2  318F  278A         	fcall	_TMR6_Initialize
  2127  07C4  0008               	return
  2128  07C5                     __end_of_periperal_init:	
  2129                           
  2130                           	psect	text3
  2131  0F8A                     __ptext3:	
  2132 ;; *************** function _TMR6_Initialize *****************
  2133 ;; Defined at:
  2134 ;;		line 1502 in file "2+1dimmmer.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;		None
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;		None
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  1    wreg      void 
  2141 ;; Registers used:
  2142 ;;		wreg, status,2
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2152 ;;Total ram usage:        0 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; Hardware stack levels required when called:    1
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_periperal_init
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           
  2163                           ;psect for function _TMR6_Initialize
  2164  0F8A                     _TMR6_Initialize:	
  2165                           
  2166                           ;2+1dimmmer.c: 1507: T6CON = 0x08;
  2167                           
  2168                           ;incstack = 0
  2169                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
  2170  0F8A  3008               	movlw	8
  2171  0F8B  0028               	movlb	8	; select bank8
  2172  0F8C  009E               	movwf	30	;volatile
  2173                           
  2174                           ;2+1dimmmer.c: 1513: TMR6 = 0x00;
  2175  0F8D  019C               	clrf	28	;volatile
  2176                           
  2177                           ;2+1dimmmer.c: 1516: PIR3bits.TMR6IF = 0;
  2178  0F8E  0020               	movlb	0	; select bank0
  2179  0F8F  1193               	bcf	19,3	;volatile
  2180                           
  2181                           ;2+1dimmmer.c: 1519: PIE3bits.TMR6IE = 1;
  2182  0F90  0021               	movlb	1	; select bank1
  2183  0F91  1593               	bsf	19,3	;volatile
  2184  0F92  0008               	return
  2185  0F93                     __end_of_TMR6_Initialize:	
  2186                           
  2187                           	psect	text4
  2188  0FBB                     __ptext4:	
  2189 ;; *************** function _TMR5_Initialize *****************
  2190 ;; Defined at:
  2191 ;;		line 1411 in file "2+1dimmmer.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;		None
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;		None
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      void 
  2198 ;; Registers used:
  2199 ;;		status,2
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2209 ;;Total ram usage:        0 bytes
  2210 ;; Hardware stack levels used:    1
  2211 ;; Hardware stack levels required when called:    1
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		_periperal_init
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           
  2220                           ;psect for function _TMR5_Initialize
  2221  0FBB                     _TMR5_Initialize:	
  2222                           
  2223                           ;2+1dimmmer.c: 1416: T5CON = 0x00;
  2224                           
  2225                           ;incstack = 0
  2226                           ; Regs used in _TMR5_Initialize: [status,2]
  2227  0FBB  0028               	movlb	8	; select bank8
  2228  0FBC  019A               	clrf	26	;volatile
  2229                           
  2230                           ;2+1dimmmer.c: 1419: T5GCON = 0x00;
  2231  0FBD  019B               	clrf	27	;volatile
  2232                           
  2233                           ;2+1dimmmer.c: 1422: TMR5H = 0x00;
  2234  0FBE  0199               	clrf	25	;volatile
  2235                           
  2236                           ;2+1dimmmer.c: 1425: TMR5L = 0x00;
  2237  0FBF  0198               	clrf	24	;volatile
  2238                           
  2239                           ;2+1dimmmer.c: 1428: PIR3bits.TMR5IF = 0;
  2240  0FC0  0020               	movlb	0	; select bank0
  2241  0FC1  1113               	bcf	19,2	;volatile
  2242                           
  2243                           ;2+1dimmmer.c: 1431: PIE3bits.TMR5IE = 1;
  2244  0FC2  0021               	movlb	1	; select bank1
  2245  0FC3  1513               	bsf	19,2	;volatile
  2246  0FC4  0008               	return
  2247  0FC5                     __end_of_TMR5_Initialize:	
  2248                           
  2249                           	psect	text5
  2250  0F81                     __ptext5:	
  2251 ;; *************** function _TMR4_Initialize *****************
  2252 ;; Defined at:
  2253 ;;		line 1482 in file "2+1dimmmer.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2271 ;;Total ram usage:        0 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    1
  2274 ;; This function calls:
  2275 ;;		Nothing
  2276 ;; This function is called by:
  2277 ;;		_periperal_init
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           
  2282                           ;psect for function _TMR4_Initialize
  2283  0F81                     _TMR4_Initialize:	
  2284                           
  2285                           ;2+1dimmmer.c: 1487: T4CON = 0x08;
  2286                           
  2287                           ;incstack = 0
  2288                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
  2289  0F81  3008               	movlw	8
  2290  0F82  0028               	movlb	8	; select bank8
  2291  0F83  0097               	movwf	23	;volatile
  2292                           
  2293                           ;2+1dimmmer.c: 1493: TMR4 = 0x00;
  2294  0F84  0195               	clrf	21	;volatile
  2295                           
  2296                           ;2+1dimmmer.c: 1496: PIR3bits.TMR4IF = 0;
  2297  0F85  0020               	movlb	0	; select bank0
  2298  0F86  1093               	bcf	19,1	;volatile
  2299                           
  2300                           ;2+1dimmmer.c: 1499: PIE3bits.TMR4IE = 1;
  2301  0F87  0021               	movlb	1	; select bank1
  2302  0F88  1493               	bsf	19,1	;volatile
  2303  0F89  0008               	return
  2304  0F8A                     __end_of_TMR4_Initialize:	
  2305                           
  2306                           	psect	text6
  2307  0FB1                     __ptext6:	
  2308 ;; *************** function _TMR3_Initialize *****************
  2309 ;; Defined at:
  2310 ;;		line 1379 in file "2+1dimmmer.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;		None
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		status,2
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2328 ;;Total ram usage:        0 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:    1
  2331 ;; This function calls:
  2332 ;;		Nothing
  2333 ;; This function is called by:
  2334 ;;		_periperal_init
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           
  2339                           ;psect for function _TMR3_Initialize
  2340  0FB1                     _TMR3_Initialize:	
  2341                           
  2342                           ;2+1dimmmer.c: 1384: T3CON = 0x00;
  2343                           
  2344                           ;incstack = 0
  2345                           ; Regs used in _TMR3_Initialize: [status,2]
  2346  0FB1  0028               	movlb	8	; select bank8
  2347  0FB2  0193               	clrf	19	;volatile
  2348                           
  2349                           ;2+1dimmmer.c: 1387: T3GCON = 0x00;
  2350  0FB3  0194               	clrf	20	;volatile
  2351                           
  2352                           ;2+1dimmmer.c: 1390: TMR3H = 0x00;
  2353  0FB4  0192               	clrf	18	;volatile
  2354                           
  2355                           ;2+1dimmmer.c: 1393: TMR3L = 0x00;
  2356  0FB5  0191               	clrf	17	;volatile
  2357                           
  2358                           ;2+1dimmmer.c: 1396: PIR3bits.TMR3IF = 0;
  2359  0FB6  0020               	movlb	0	; select bank0
  2360  0FB7  1013               	bcf	19,0	;volatile
  2361                           
  2362                           ;2+1dimmmer.c: 1399: PIE3bits.TMR3IE = 1;
  2363  0FB8  0021               	movlb	1	; select bank1
  2364  0FB9  1413               	bsf	19,0	;volatile
  2365  0FBA  0008               	return
  2366  0FBB                     __end_of_TMR3_Initialize:	
  2367                           
  2368                           	psect	text7
  2369  0FA7                     __ptext7:	
  2370 ;; *************** function _TMR2_Initialize *****************
  2371 ;; Defined at:
  2372 ;;		line 1434 in file "2+1dimmmer.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;		None
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;		None
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      void 
  2379 ;; Registers used:
  2380 ;;		wreg, status,2
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2390 ;;Total ram usage:        0 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    1
  2393 ;; This function calls:
  2394 ;;		Nothing
  2395 ;; This function is called by:
  2396 ;;		_periperal_init
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           
  2401                           ;psect for function _TMR2_Initialize
  2402  0FA7                     _TMR2_Initialize:	
  2403                           
  2404                           ;2+1dimmmer.c: 1439: T2CON = 0x08;
  2405                           
  2406                           ;incstack = 0
  2407                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  2408  0FA7  3008               	movlw	8
  2409  0FA8  0020               	movlb	0	; select bank0
  2410  0FA9  009C               	movwf	28	;volatile
  2411                           
  2412                           ;2+1dimmmer.c: 1445: TMR2 = 0x00;
  2413  0FAA  019A               	clrf	26	;volatile
  2414                           
  2415                           ;2+1dimmmer.c: 1448: PIR1bits.TMR2IF = 0;
  2416  0FAB  1091               	bcf	17,1	;volatile
  2417                           
  2418                           ;2+1dimmmer.c: 1451: PIE1bits.TMR2IE = 1;
  2419  0FAC  0021               	movlb	1	; select bank1
  2420  0FAD  1491               	bsf	17,1	;volatile
  2421                           
  2422                           ;2+1dimmmer.c: 1452: GIE = 1;
  2423  0FAE  178B               	bsf	11,7	;volatile
  2424                           
  2425                           ;2+1dimmmer.c: 1455: PEIE = 1;
  2426  0FAF  170B               	bsf	11,6	;volatile
  2427  0FB0  0008               	return
  2428  0FB1                     __end_of_TMR2_Initialize:	
  2429                           
  2430                           	psect	text8
  2431  0FC5                     __ptext8:	
  2432 ;; *************** function _TMR1_Initialize *****************
  2433 ;; Defined at:
  2434 ;;		line 1347 in file "2+1dimmmer.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;		None
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;		None
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		status,2
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2452 ;;Total ram usage:        0 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; Hardware stack levels required when called:    1
  2455 ;; This function calls:
  2456 ;;		Nothing
  2457 ;; This function is called by:
  2458 ;;		_periperal_init
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           
  2463                           ;psect for function _TMR1_Initialize
  2464  0FC5                     _TMR1_Initialize:	
  2465                           
  2466                           ;2+1dimmmer.c: 1352: T1CON = 0x00;
  2467                           
  2468                           ;incstack = 0
  2469                           ; Regs used in _TMR1_Initialize: [status,2]
  2470  0FC5  0020               	movlb	0	; select bank0
  2471  0FC6  0198               	clrf	24	;volatile
  2472                           
  2473                           ;2+1dimmmer.c: 1355: T1GCON = 0x00;
  2474  0FC7  0199               	clrf	25	;volatile
  2475                           
  2476                           ;2+1dimmmer.c: 1358: TMR1H = 0x00;
  2477  0FC8  0197               	clrf	23	;volatile
  2478                           
  2479                           ;2+1dimmmer.c: 1361: TMR1L = 0x00;
  2480  0FC9  0196               	clrf	22	;volatile
  2481                           
  2482                           ;2+1dimmmer.c: 1364: PIR1bits.TMR1IF = 0;
  2483  0FCA  1011               	bcf	17,0	;volatile
  2484                           
  2485                           ;2+1dimmmer.c: 1367: PIE1bits.TMR1IE = 1;
  2486  0FCB  0021               	movlb	1	; select bank1
  2487  0FCC  1411               	bsf	17,0	;volatile
  2488                           
  2489                           ;2+1dimmmer.c: 1373: GIE = 1;
  2490  0FCD  178B               	bsf	11,7	;volatile
  2491                           
  2492                           ;2+1dimmmer.c: 1376: PEIE = 1;
  2493  0FCE  170B               	bsf	11,6	;volatile
  2494  0FCF  0008               	return
  2495  0FD0                     __end_of_TMR1_Initialize:	
  2496                           
  2497                           	psect	text9
  2498  0FEA                     __ptext9:	
  2499 ;; *************** function _EUSART_Initialize *****************
  2500 ;; Defined at:
  2501 ;;		line 1613 in file "2+1dimmmer.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;		None
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;		None
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      void 
  2508 ;; Registers used:
  2509 ;;		wreg
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2519 ;;Total ram usage:        0 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    1
  2522 ;; This function calls:
  2523 ;;		Nothing
  2524 ;; This function is called by:
  2525 ;;		_periperal_init
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           
  2530                           ;psect for function _EUSART_Initialize
  2531  0FEA                     _EUSART_Initialize:	
  2532                           
  2533                           ;2+1dimmmer.c: 1616: PIE1bits.RC1IE = 0;
  2534                           
  2535                           ;incstack = 0
  2536                           ; Regs used in _EUSART_Initialize: [wreg]
  2537  0FEA  0021               	movlb	1	; select bank1
  2538  0FEB  1291               	bcf	17,5	;volatile
  2539                           
  2540                           ;2+1dimmmer.c: 1617: PIE1bits.TX1IE = 0;
  2541  0FEC  1211               	bcf	17,4	;volatile
  2542                           
  2543                           ;2+1dimmmer.c: 1622: BAUD1CON = 0x0A;
  2544  0FED  300A               	movlw	10
  2545  0FEE  0023               	movlb	3	; select bank3
  2546  0FEF  009F               	movwf	31	;volatile
  2547                           
  2548                           ;2+1dimmmer.c: 1625: RC1STA = 0x90;
  2549  0FF0  3090               	movlw	144
  2550  0FF1  009D               	movwf	29	;volatile
  2551                           
  2552                           ;2+1dimmmer.c: 1628: TX1STA = 0x24;
  2553  0FF2  3024               	movlw	36
  2554  0FF3  009E               	movwf	30	;volatile
  2555                           
  2556                           ;2+1dimmmer.c: 1633: SP1BRGL = 0xA0;
  2557  0FF4  30A0               	movlw	160
  2558  0FF5  009B               	movwf	27	;volatile
  2559                           
  2560                           ;2+1dimmmer.c: 1635: SP1BRGH = 0x01;
  2561  0FF6  3001               	movlw	1
  2562  0FF7  009C               	movwf	28	;volatile
  2563                           
  2564                           ;2+1dimmmer.c: 1638: GIE = 1;
  2565  0FF8  178B               	bsf	11,7	;volatile
  2566                           
  2567                           ;2+1dimmmer.c: 1641: PEIE = 1;
  2568  0FF9  170B               	bsf	11,6	;volatile
  2569                           
  2570                           ;2+1dimmmer.c: 1644: PIE1bits.RC1IE = 1;
  2571  0FFA  0021               	movlb	1	; select bank1
  2572  0FFB  1691               	bsf	17,5	;volatile
  2573                           
  2574                           ;2+1dimmmer.c: 1647: TX1STAbits.TXEN = 1;
  2575  0FFC  0023               	movlb	3	; select bank3
  2576  0FFD  169E               	bsf	30,5	;volatile
  2577                           
  2578                           ;2+1dimmmer.c: 1650: RC1STAbits.SPEN = 1;
  2579  0FFE  179D               	bsf	29,7	;volatile
  2580  0FFF  0008               	return
  2581  1000                     __end_of_EUSART_Initialize:	
  2582                           
  2583                           	psect	text10
  2584  0F9D                     __ptext10:	
  2585 ;; *************** function _CCP9_Initialize *****************
  2586 ;; Defined at:
  2587 ;;		line 1593 in file "2+1dimmmer.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2605 ;;Total ram usage:        0 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:    1
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_periperal_init
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           
  2616                           ;psect for function _CCP9_Initialize
  2617  0F9D                     _CCP9_Initialize:	
  2618                           
  2619                           ;2+1dimmmer.c: 1598: CCP9CON = 0x84;
  2620                           
  2621                           ;incstack = 0
  2622                           ; Regs used in _CCP9_Initialize: [wreg+status,2]
  2623  0F9D  3084               	movlw	132
  2624  0F9E  002C               	movlb	12	; select bank12
  2625  0F9F  009C               	movwf	28	;volatile
  2626                           
  2627                           ;2+1dimmmer.c: 1601: CCPR9H = 0x00;
  2628  0FA0  019B               	clrf	27	;volatile
  2629                           
  2630                           ;2+1dimmmer.c: 1604: CCPR9L = 0x00;
  2631  0FA1  019A               	clrf	26	;volatile
  2632                           
  2633                           ;2+1dimmmer.c: 1607: PIR4bits.CCP9IF = 0;
  2634  0FA2  0020               	movlb	0	; select bank0
  2635  0FA3  1314               	bcf	20,6	;volatile
  2636                           
  2637                           ;2+1dimmmer.c: 1610: PIE4bits.CCP9IE = 0;
  2638  0FA4  0021               	movlb	1	; select bank1
  2639  0FA5  1314               	bcf	20,6	;volatile
  2640  0FA6  0008               	return
  2641  0FA7                     __end_of_CCP9_Initialize:	
  2642                           
  2643                           	psect	text11
  2644  0F93                     __ptext11:	
  2645 ;; *************** function _CCP3_Initialize *****************
  2646 ;; Defined at:
  2647 ;;		line 1547 in file "2+1dimmmer.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg, status,2
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2665 ;;Total ram usage:        0 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; Hardware stack levels required when called:    1
  2668 ;; This function calls:
  2669 ;;		Nothing
  2670 ;; This function is called by:
  2671 ;;		_periperal_init
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           
  2676                           ;psect for function _CCP3_Initialize
  2677  0F93                     _CCP3_Initialize:	
  2678                           
  2679                           ;2+1dimmmer.c: 1552: CCP3CON = 0x84;
  2680                           
  2681                           ;incstack = 0
  2682                           ; Regs used in _CCP3_Initialize: [wreg+status,2]
  2683  0F93  3084               	movlw	132
  2684  0F94  0026               	movlb	6	; select bank6
  2685  0F95  0093               	movwf	19	;volatile
  2686                           
  2687                           ;2+1dimmmer.c: 1555: CCPR3L = 0x00;
  2688  0F96  0191               	clrf	17	;volatile
  2689                           
  2690                           ;2+1dimmmer.c: 1558: CCPR3H = 0x00;
  2691  0F97  0192               	clrf	18	;volatile
  2692                           
  2693                           ;2+1dimmmer.c: 1564: PIR3bits.CCP3IF = 0;
  2694  0F98  0020               	movlb	0	; select bank0
  2695  0F99  1213               	bcf	19,4	;volatile
  2696                           
  2697                           ;2+1dimmmer.c: 1567: PIE3bits.CCP3IE = 0;
  2698  0F9A  0021               	movlb	1	; select bank1
  2699  0F9B  1213               	bcf	19,4	;volatile
  2700  0F9C  0008               	return
  2701  0F9D                     __end_of_CCP3_Initialize:	
  2702                           
  2703                           	psect	text12
  2704  0FD0                     __ptext12:	
  2705 ;; *************** function _CCP1_Initialize *****************
  2706 ;; Defined at:
  2707 ;;		line 1522 in file "2+1dimmmer.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;		None
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;		None
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      void 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2725 ;;Total ram usage:        0 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    1
  2728 ;; This function calls:
  2729 ;;		Nothing
  2730 ;; This function is called by:
  2731 ;;		_periperal_init
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           
  2736                           ;psect for function _CCP1_Initialize
  2737  0FD0                     _CCP1_Initialize:	
  2738                           
  2739                           ;2+1dimmmer.c: 1527: CCP1CON = 0x04;
  2740                           
  2741                           ;incstack = 0
  2742                           ; Regs used in _CCP1_Initialize: [wreg+status,2]
  2743  0FD0  3004               	movlw	4
  2744  0FD1  0025               	movlb	5	; select bank5
  2745  0FD2  0093               	movwf	19	;volatile
  2746                           
  2747                           ;2+1dimmmer.c: 1531: CCPR1H = 0x00;
  2748  0FD3  0192               	clrf	18	;volatile
  2749                           
  2750                           ;2+1dimmmer.c: 1534: CCPR1L = 0x00;
  2751  0FD4  0191               	clrf	17	;volatile
  2752                           
  2753                           ;2+1dimmmer.c: 1537: PIR1bits.CCP1IF = 0;
  2754  0FD5  0020               	movlb	0	; select bank0
  2755  0FD6  1111               	bcf	17,2	;volatile
  2756                           
  2757                           ;2+1dimmmer.c: 1540: PIE1bits.CCP1IE = 1;
  2758  0FD7  0021               	movlb	1	; select bank1
  2759  0FD8  1511               	bsf	17,2	;volatile
  2760                           
  2761                           ;2+1dimmmer.c: 1541: GIE = 1;
  2762  0FD9  178B               	bsf	11,7	;volatile
  2763                           
  2764                           ;2+1dimmmer.c: 1544: PEIE = 1;
  2765  0FDA  170B               	bsf	11,6	;volatile
  2766  0FDB  0008               	return
  2767  0FDC                     __end_of_CCP1_Initialize:	
  2768                           
  2769                           	psect	text13
  2770  074F                     __ptext13:	
  2771 ;; *************** function _copy_frame *****************
  2772 ;; Defined at:
  2773 ;;		line 1246 in file "2+1dimmmer.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;  start           2    2[COMMON] int 
  2776 ;;  end             2    4[COMMON] int 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;  k               2    2[BANK0 ] int 
  2779 ;;  sw              2    0[BANK0 ] int 
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  1    wreg      void 
  2782 ;; Registers used:
  2783 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2789 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0
  2790 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0
  2791 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0
  2792 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0
  2793 ;;Total ram usage:        9 bytes
  2794 ;; Hardware stack levels used:    1
  2795 ;; Hardware stack levels required when called:    1
  2796 ;; This function calls:
  2797 ;;		Nothing
  2798 ;; This function is called by:
  2799 ;;		_main
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           
  2804                           ;psect for function _copy_frame
  2805  074F                     _copy_frame:	
  2806                           
  2807                           ;2+1dimmmer.c: 1247: int k=0,sw=0;
  2808                           
  2809                           ;incstack = 0
  2810                           ; Regs used in _copy_frame: [wreg+fsr1l+fsr1h+status,2+status,0]
  2811  074F  0020               	movlb	0	; select bank0
  2812  0750  01A2               	clrf	copy_frame@k
  2813  0751  01A3               	clrf	copy_frame@k+1
  2814  0752  01A0               	clrf	copy_frame@sw
  2815  0753  01A1               	clrf	copy_frame@sw+1
  2816                           
  2817                           ;2+1dimmmer.c: 1248: for(k = start; k< end; k++)
  2818  0754  0873               	movf	copy_frame@start+1,w
  2819  0755  00A3               	movwf	copy_frame@k+1
  2820  0756  0872               	movf	copy_frame@start,w
  2821  0757  00A2               	movwf	copy_frame@k
  2822  0758                     l438:	
  2823  0758  0823               	movf	copy_frame@k+1,w
  2824  0759  3A80               	xorlw	128
  2825  075A  00F6               	movwf	??_copy_frame
  2826  075B  0875               	movf	copy_frame@end+1,w
  2827  075C  3A80               	xorlw	128
  2828  075D  0276               	subwf	??_copy_frame,w
  2829  075E  1D03               	skipz
  2830  075F  2F62               	goto	u1935
  2831  0760  0874               	movf	copy_frame@end,w
  2832  0761  0222               	subwf	copy_frame@k,w
  2833  0762                     u1935:	
  2834  0762  1803               	btfsc	3,0
  2835  0763  2F83               	goto	l4300
  2836                           
  2837                           ;2+1dimmmer.c: 1249: {
  2838                           ;2+1dimmmer.c: 1250: copy[sw]=name[k];
  2839  0764  0020               	movlb	0	; select bank0
  2840  0765  0822               	movf	copy_frame@k,w
  2841  0766  3EA0               	addlw	(low (_name| 0))& (0+255)
  2842  0767  0086               	movwf	6
  2843  0768  0187               	clrf	7
  2844  0769  0801               	movf	1,w
  2845  076A  00F6               	movwf	??_copy_frame
  2846  076B  0820               	movf	copy_frame@sw,w
  2847  076C  3E20               	addlw	(low (_copy| (0+256)))& (0+255)
  2848  076D  0086               	movwf	6
  2849  076E  3001               	movlw	1	; select bank2/3
  2850  076F  0087               	movwf	7
  2851  0770  0876               	movf	??_copy_frame,w
  2852  0771  0081               	movwf	1
  2853                           
  2854                           ;2+1dimmmer.c: 1251: sw++;
  2855  0772  3001               	movlw	1
  2856  0773  07A0               	addwf	copy_frame@sw,f
  2857  0774  3000               	movlw	0
  2858  0775  3DA1               	addwfc	copy_frame@sw+1,f
  2859                           
  2860                           ;2+1dimmmer.c: 1252: name[k] = '#';
  2861  0776  3023               	movlw	35
  2862  0777  00F6               	movwf	??_copy_frame
  2863  0778  0822               	movf	copy_frame@k,w
  2864  0779  3EA0               	addlw	(low (_name| 0))& (0+255)
  2865  077A  0086               	movwf	6
  2866  077B  0187               	clrf	7
  2867  077C  0876               	movf	??_copy_frame,w
  2868  077D  0081               	movwf	1
  2869  077E  3001               	movlw	1
  2870  077F  07A2               	addwf	copy_frame@k,f
  2871  0780  3000               	movlw	0
  2872  0781  3DA3               	addwfc	copy_frame@k+1,f
  2873  0782  2F58               	goto	l438
  2874  0783                     l4300:	
  2875                           
  2876                           ;2+1dimmmer.c: 1253: }
  2877                           ;2+1dimmmer.c: 1255: COPY_FLAG=0;
  2878  0783  0020               	movlb	0	; select bank0
  2879  0784  01CB               	clrf	_COPY_FLAG
  2880  0785  01CC               	clrf	_COPY_FLAG+1
  2881  0786  0008               	return
  2882  0787                     __end_of_copy_frame:	
  2883                           
  2884                           	psect	text14
  2885  0560                     __ptext14:	
  2886 ;; *************** function _ACTION *****************
  2887 ;; Defined at:
  2888 ;;		line 1258 in file "2+1dimmmer.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  Switch_Num_1    1    wreg     unsigned char 
  2891 ;;  Switch_Num_1    1    6[BANK0 ] unsigned char 
  2892 ;;  sw_status       1    7[BANK0 ] unsigned char 
  2893 ;;  speed_bitHig    1    8[BANK0 ] unsigned char 
  2894 ;;  speed_bitLow    1    9[BANK0 ] unsigned char 
  2895 ;;  parent          1   10[BANK0 ] unsigned char 
  2896 ;;  finalFrameSt    1   11[BANK0 ] unsigned char 
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;  Switch_Num_1    1   20[BANK0 ] unsigned char 
  2899 ;;  SwNumString     2   23[BANK0 ] unsigned char [2]
  2900 ;;  FanSpeedStri    2   21[BANK0 ] unsigned char [2]
  2901 ;;  child_lock_n    2   18[BANK0 ] int 
  2902 ;;  children        2   16[BANK0 ] int 
  2903 ;;  FanSpeed        2   14[BANK0 ] int 
  2904 ;;  switch_statu    2   29[BANK0 ] int 
  2905 ;;  response_sta    2   27[BANK0 ] int 
  2906 ;;  SwNum           2   25[BANK0 ] int 
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      void 
  2909 ;; Registers used:
  2910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2916 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0
  2917 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0
  2918 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  2919 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0
  2920 ;;Total ram usage:       25 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:    3
  2923 ;; This function calls:
  2924 ;;		_atoi
  2925 ;;		_writeUART
  2926 ;; This function is called by:
  2927 ;;		_main
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           
  2932                           ;psect for function _ACTION
  2933  0560                     _ACTION:	
  2934                           
  2935                           ;incstack = 0
  2936                           ; Regs used in _ACTION: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2937                           ;ACTION@Switch_Num_10s stored from wreg
  2938  0560  0020               	movlb	0	; select bank0
  2939  0561  00B4               	movwf	ACTION@Switch_Num_10s
  2940                           
  2941                           ;2+1dimmmer.c: 1260: int response_starts=0;
  2942  0562  01BB               	clrf	ACTION@response_starts
  2943  0563  01BC               	clrf	ACTION@response_starts+1
  2944                           
  2945                           ;2+1dimmmer.c: 1261: int switch_status=0;
  2946  0564  01BD               	clrf	ACTION@switch_status
  2947  0565  01BE               	clrf	ACTION@switch_status+1
  2948                           
  2949                           ;2+1dimmmer.c: 1262: int SwNum=0;
  2950  0566  01B9               	clrf	ACTION@SwNum
  2951  0567  01BA               	clrf	ACTION@SwNum+1
  2952                           
  2953                           ;2+1dimmmer.c: 1264: if(Switch_Num_1s != 'T')
  2954  0568  3054               	movlw	84
  2955  0569  0626               	xorwf	ACTION@Switch_Num_1s,w
  2956  056A  1903               	btfsc	3,2
  2957  056B  2E51               	goto	l4372
  2958                           
  2959                           ;2+1dimmmer.c: 1265: {
  2960                           ;2+1dimmmer.c: 1266: unsigned char FanSpeedString[2], SwNumString[2];
  2961                           ;2+1dimmmer.c: 1267: int FanSpeed=0;
  2962  056C  01AE               	clrf	ACTION@FanSpeed
  2963  056D  01AF               	clrf	ACTION@FanSpeed+1
  2964                           
  2965                           ;2+1dimmmer.c: 1269: switch_status=sw_status - '0';
  2966  056E  0827               	movf	ACTION@sw_status,w
  2967  056F  3ED0               	addlw	208
  2968  0570  00BD               	movwf	ACTION@switch_status
  2969  0571  30FF               	movlw	255
  2970  0572  1803               	skipnc
  2971  0573  3000               	movlw	0
  2972  0574  00BE               	movwf	ACTION@switch_status+1
  2973                           
  2974                           ;2+1dimmmer.c: 1271: SwNumString[0]=Switch_Num_10s;
  2975  0575  0834               	movf	ACTION@Switch_Num_10s,w
  2976  0576  00AC               	movwf	??_ACTION
  2977  0577  082C               	movf	??_ACTION,w
  2978  0578  00B7               	movwf	ACTION@SwNumString
  2979                           
  2980                           ;2+1dimmmer.c: 1272: SwNumString[1]=Switch_Num_1s;
  2981  0579  0826               	movf	ACTION@Switch_Num_1s,w
  2982  057A  00AC               	movwf	??_ACTION
  2983  057B  082C               	movf	??_ACTION,w
  2984  057C  00B8               	movwf	ACTION@SwNumString+1
  2985                           
  2986                           ;2+1dimmmer.c: 1273: SwNum=atoi(SwNumString);
  2987  057D  3037               	movlw	(low (ACTION@SwNumString| 0))& (0+255)
  2988  057E  3186  2662  3185   	fcall	_atoi
  2989  0581  0879               	movf	?_atoi+1,w
  2990  0582  0020               	movlb	0	; select bank0
  2991  0583  00BA               	movwf	ACTION@SwNum+1
  2992  0584  0878               	movf	?_atoi,w
  2993  0585  00B9               	movwf	ACTION@SwNum
  2994                           
  2995                           ;2+1dimmmer.c: 1275: FanSpeedString[0] = speed_bitHigh;
  2996  0586  0828               	movf	ACTION@speed_bitHigh,w
  2997  0587  00AC               	movwf	??_ACTION
  2998  0588  082C               	movf	??_ACTION,w
  2999  0589  00B5               	movwf	ACTION@FanSpeedString
  3000                           
  3001                           ;2+1dimmmer.c: 1276: FanSpeedString[1] = speed_bitLow;
  3002  058A  0829               	movf	ACTION@speed_bitLow,w
  3003  058B  00AC               	movwf	??_ACTION
  3004  058C  082C               	movf	??_ACTION,w
  3005  058D  00B6               	movwf	ACTION@FanSpeedString+1
  3006                           
  3007                           ;2+1dimmmer.c: 1277: FanSpeed = atoi(FanSpeedString);
  3008  058E  3035               	movlw	(low (ACTION@FanSpeedString| 0))& (0+255)
  3009  058F  3186  2662  3185   	fcall	_atoi
  3010  0592  0879               	movf	?_atoi+1,w
  3011  0593  0020               	movlb	0	; select bank0
  3012  0594  00AF               	movwf	ACTION@FanSpeed+1
  3013  0595  0878               	movf	?_atoi,w
  3014  0596  00AE               	movwf	ACTION@FanSpeed
  3015                           
  3016                           ;2+1dimmmer.c: 1279: int children=parent - '0';
  3017  0597  082A               	movf	ACTION@parent,w
  3018  0598  3ED0               	addlw	208
  3019  0599  00B0               	movwf	ACTION@children
  3020  059A  30FF               	movlw	255
  3021  059B  1803               	skipnc
  3022  059C  3000               	movlw	0
  3023  059D  00B1               	movwf	ACTION@children+1
  3024                           
  3025                           ;2+1dimmmer.c: 1280: int child_lock_num=(2*(SwNum)-1);
  3026  059E  083A               	movf	ACTION@SwNum+1,w
  3027  059F  00AD               	movwf	??_ACTION+1
  3028  05A0  0839               	movf	ACTION@SwNum,w
  3029  05A1  00AC               	movwf	??_ACTION
  3030  05A2  35AC               	lslf	??_ACTION,f
  3031  05A3  0DAD               	rlf	??_ACTION+1,f
  3032  05A4  082C               	movf	??_ACTION,w
  3033  05A5  3EFF               	addlw	255
  3034  05A6  00B2               	movwf	ACTION@child_lock_num
  3035  05A7  30FF               	movlw	255
  3036  05A8  3D2D               	addwfc	??_ACTION+1,w
  3037  05A9  00B3               	movwf	ACTION@child_lock_num+1
  3038                           
  3039                           ;2+1dimmmer.c: 1281: child_LOCK[child_lock_num]=children;
  3040  05AA  0830               	movf	ACTION@children,w
  3041  05AB  00AC               	movwf	??_ACTION
  3042  05AC  0832               	movf	ACTION@child_lock_num,w
  3043  05AD  3E44               	addlw	(low (_child_LOCK| (0+256)))& (0+255)
  3044  05AE  0086               	movwf	6
  3045  05AF  3001               	movlw	1	; select bank2/3
  3046  05B0  0087               	movwf	7
  3047  05B1  082C               	movf	??_ACTION,w
  3048  05B2  0081               	movwf	1
  3049                           
  3050                           ;2+1dimmmer.c: 1283: response_starts=((1+4*(SwNum))-4);
  3051  05B3  083A               	movf	ACTION@SwNum+1,w
  3052  05B4  00AD               	movwf	??_ACTION+1
  3053  05B5  0839               	movf	ACTION@SwNum,w
  3054  05B6  00AC               	movwf	??_ACTION
  3055  05B7  35AC               	lslf	??_ACTION,f
  3056  05B8  0DAD               	rlf	??_ACTION+1,f
  3057  05B9  35AC               	lslf	??_ACTION,f
  3058  05BA  0DAD               	rlf	??_ACTION+1,f
  3059  05BB  082C               	movf	??_ACTION,w
  3060  05BC  3EFD               	addlw	253
  3061  05BD  00BB               	movwf	ACTION@response_starts
  3062  05BE  30FF               	movlw	255
  3063  05BF  3D2D               	addwfc	??_ACTION+1,w
  3064  05C0  00BC               	movwf	ACTION@response_starts+1
  3065                           
  3066                           ;2+1dimmmer.c: 1284: st[response_starts++]='G';
  3067  05C1  3047               	movlw	71
  3068  05C2  00AC               	movwf	??_ACTION
  3069  05C3  083B               	movf	ACTION@response_starts,w
  3070  05C4  3EC4               	addlw	(low (_st| 0))& (0+255)
  3071  05C5  0086               	movwf	6
  3072  05C6  0187               	clrf	7
  3073  05C7  082C               	movf	??_ACTION,w
  3074  05C8  0081               	movwf	1
  3075  05C9  3001               	movlw	1
  3076  05CA  07BB               	addwf	ACTION@response_starts,f
  3077  05CB  3000               	movlw	0
  3078  05CC  3DBC               	addwfc	ACTION@response_starts+1,f
  3079                           
  3080                           ;2+1dimmmer.c: 1285: st[response_starts++]=sw_status;
  3081  05CD  0827               	movf	ACTION@sw_status,w
  3082  05CE  00AC               	movwf	??_ACTION
  3083  05CF  083B               	movf	ACTION@response_starts,w
  3084  05D0  3EC4               	addlw	(low (_st| 0))& (0+255)
  3085  05D1  0086               	movwf	6
  3086  05D2  0187               	clrf	7
  3087  05D3  082C               	movf	??_ACTION,w
  3088  05D4  0081               	movwf	1
  3089  05D5  3001               	movlw	1
  3090  05D6  07BB               	addwf	ACTION@response_starts,f
  3091  05D7  3000               	movlw	0
  3092  05D8  3DBC               	addwfc	ACTION@response_starts+1,f
  3093                           
  3094                           ;2+1dimmmer.c: 1286: st[response_starts++]=Switch_Num_10s;
  3095  05D9  0834               	movf	ACTION@Switch_Num_10s,w
  3096  05DA  00AC               	movwf	??_ACTION
  3097  05DB  083B               	movf	ACTION@response_starts,w
  3098  05DC  3EC4               	addlw	(low (_st| 0))& (0+255)
  3099  05DD  0086               	movwf	6
  3100  05DE  0187               	clrf	7
  3101  05DF  082C               	movf	??_ACTION,w
  3102  05E0  0081               	movwf	1
  3103  05E1  3001               	movlw	1
  3104  05E2  07BB               	addwf	ACTION@response_starts,f
  3105  05E3  3000               	movlw	0
  3106  05E4  3DBC               	addwfc	ACTION@response_starts+1,f
  3107                           
  3108                           ;2+1dimmmer.c: 1287: st[response_starts]=Switch_Num_1s;
  3109  05E5  0826               	movf	ACTION@Switch_Num_1s,w
  3110  05E6  00AC               	movwf	??_ACTION
  3111  05E7  083B               	movf	ACTION@response_starts,w
  3112  05E8  3EC4               	addlw	(low (_st| 0))& (0+255)
  3113  05E9  0086               	movwf	6
  3114  05EA  0187               	clrf	7
  3115  05EB  082C               	movf	??_ACTION,w
  3116  05EC  0081               	movwf	1
  3117                           
  3118                           ;2+1dimmmer.c: 1289: response_starts-=3;
  3119  05ED  30FD               	movlw	253
  3120  05EE  07BB               	addwf	ACTION@response_starts,f
  3121  05EF  30FF               	movlw	255
  3122  05F0  3DBC               	addwfc	ACTION@response_starts+1,f
  3123                           
  3124                           ;2+1dimmmer.c: 1290: if(finalFrameStat=='1')
  3125  05F1  3031               	movlw	49
  3126  05F2  062B               	xorwf	ACTION@finalFrameStat,w
  3127  05F3  1D03               	btfss	3,2
  3128  05F4  2DFA               	goto	l4350
  3129                           
  3130                           ;2+1dimmmer.c: 1291: {
  3131                           ;2+1dimmmer.c: 1292: writeUART(st+response_starts);
  3132  05F5  083B               	movf	ACTION@response_starts,w
  3133  05F6  3EC4               	addlw	(low (_st| 0))& (0+255)
  3134  05F7  3187  27E0  3185   	fcall	_writeUART
  3135  05FA                     l4350:	
  3136                           
  3137                           ;2+1dimmmer.c: 1293: }
  3138                           ;2+1dimmmer.c: 1294: man=0;
  3139  05FA  0020               	movlb	0	; select bank0
  3140  05FB  01E0               	clrf	_man
  3141  05FC  01E1               	clrf	_man+1
  3142                           
  3143                           ;2+1dimmmer.c: 1295: }
  3144                           ;2+1dimmmer.c: 1298: switch(SwNum)
  3145  05FD  2E51               	goto	l4372
  3146  05FE                     l447:	
  3147                           ;2+1dimmmer.c: 1299: {
  3148                           ;2+1dimmmer.c: 1301: case 1:
  3149                           
  3150                           
  3151                           ;2+1dimmmer.c: 1302: RF0=switch_status;
  3152  05FE  1C3D               	btfss	ACTION@switch_status,0
  3153  05FF  2E03               	goto	u1960
  3154  0600  0025               	movlb	5	; select bank5
  3155  0601  140C               	bsf	12,0	;volatile
  3156  0602  2E05               	goto	l4352
  3157  0603                     u1960:	
  3158  0603  0025               	movlb	5	; select bank5
  3159  0604  100C               	bcf	12,0	;volatile
  3160  0605                     l4352:	
  3161                           
  3162                           ;2+1dimmmer.c: 1303: M1=switch_status;
  3163  0605  0020               	movlb	0	; select bank0
  3164  0606  083E               	movf	ACTION@switch_status+1,w
  3165  0607  00CA               	movwf	_M1+1
  3166  0608  083D               	movf	ACTION@switch_status,w
  3167  0609  00C9               	movwf	_M1
  3168                           
  3169                           ;2+1dimmmer.c: 1304: break;
  3170  060A  0008               	return
  3171  060B                     l449:	
  3172                           ;2+1dimmmer.c: 1305: case 2:
  3173                           
  3174                           
  3175                           ;2+1dimmmer.c: 1306: RF1=switch_status;
  3176  060B  1C3D               	btfss	ACTION@switch_status,0
  3177  060C  2E10               	goto	u1980
  3178  060D  0025               	movlb	5	; select bank5
  3179  060E  148C               	bsf	12,1	;volatile
  3180  060F  2E12               	goto	l4354
  3181  0610                     u1980:	
  3182  0610  0025               	movlb	5	; select bank5
  3183  0611  108C               	bcf	12,1	;volatile
  3184  0612                     l4354:	
  3185                           
  3186                           ;2+1dimmmer.c: 1307: M2=switch_status;
  3187  0612  0020               	movlb	0	; select bank0
  3188  0613  083E               	movf	ACTION@switch_status+1,w
  3189  0614  00C8               	movwf	_M2+1
  3190  0615  083D               	movf	ACTION@switch_status,w
  3191  0616  00C7               	movwf	_M2
  3192                           
  3193                           ;2+1dimmmer.c: 1308: break;
  3194  0617  0008               	return
  3195  0618                     l4356:	
  3196                           ;2+1dimmmer.c: 1309: case 3:
  3197                           
  3198                           
  3199                           ;2+1dimmmer.c: 1310: FAN_FLAG1 = switch_status;
  3200  0618  083E               	movf	ACTION@switch_status+1,w
  3201  0619  00CE               	movwf	_FAN_FLAG1+1
  3202  061A  083D               	movf	ACTION@switch_status,w
  3203  061B  00CD               	movwf	_FAN_FLAG1
  3204                           
  3205                           ;2+1dimmmer.c: 1311: if(switch_status==0)
  3206  061C  083D               	movf	ACTION@switch_status,w
  3207  061D  043E               	iorwf	ACTION@switch_status+1,w
  3208  061E  1D03               	btfss	3,2
  3209  061F  2E2F               	goto	l4364
  3210                           
  3211                           ;2+1dimmmer.c: 1312: {
  3212                           ;2+1dimmmer.c: 1313: T2CONbits.TMR2ON=0;
  3213  0620  111C               	bcf	28,2	;volatile
  3214                           
  3215                           ;2+1dimmmer.c: 1314: T1CONbits.TMR1ON = 0;
  3216  0621  1018               	bcf	24,0	;volatile
  3217                           
  3218                           ;2+1dimmmer.c: 1315: PIE1bits.CCP1IE = 0;
  3219  0622  0021               	movlb	1	; select bank1
  3220  0623  1111               	bcf	17,2	;volatile
  3221                           
  3222                           ;2+1dimmmer.c: 1316: RA2 =(switch_status^1);
  3223  0624  0020               	movlb	0	; select bank0
  3224  0625  183D               	btfsc	ACTION@switch_status,0
  3225  0626  2E2A               	goto	u2010
  3226  0627  0020               	movlb	0	; select bank0
  3227  0628  150C               	bsf	12,2	;volatile
  3228  0629  2E2C               	goto	l4362
  3229  062A                     u2010:	
  3230  062A  0020               	movlb	0	; select bank0
  3231  062B  110C               	bcf	12,2	;volatile
  3232  062C                     l4362:	
  3233                           
  3234                           ;2+1dimmmer.c: 1317: pk=0;
  3235  062C  01DB               	clrf	_pk
  3236  062D  01DC               	clrf	_pk+1
  3237                           
  3238                           ;2+1dimmmer.c: 1318: }
  3239  062E  2E4C               	goto	l452
  3240  062F                     l4364:	
  3241                           
  3242                           ;2+1dimmmer.c: 1319: else if(switch_status==1)
  3243  062F  033D               	decf	ACTION@switch_status,w
  3244  0630  043E               	iorwf	ACTION@switch_status+1,w
  3245  0631  1D03               	btfss	3,2
  3246  0632  2E4C               	goto	l452
  3247                           
  3248                           ;2+1dimmmer.c: 1320: {
  3249                           ;2+1dimmmer.c: 1321: PIE1bits.CCP1IE = 1;
  3250  0633  0021               	movlb	1	; select bank1
  3251  0634  1511               	bsf	17,2	;volatile
  3252                           
  3253                           ;2+1dimmmer.c: 1322: dimmer1=speed_bitHigh;
  3254  0635  0020               	movlb	0	; select bank0
  3255  0636  0828               	movf	ACTION@speed_bitHigh,w
  3256  0637  00AC               	movwf	??_ACTION
  3257  0638  082C               	movf	??_ACTION,w
  3258  0639  00DF               	movwf	_dimmer1
  3259                           
  3260                           ;2+1dimmmer.c: 1323: pk=1;
  3261  063A  3001               	movlw	1
  3262  063B  00DB               	movwf	_pk
  3263  063C  3000               	movlw	0
  3264  063D  00DC               	movwf	_pk+1
  3265                           
  3266                           ;2+1dimmmer.c: 1324: FAN_SPEED1_10s = speed_bitHigh;
  3267  063E  0828               	movf	ACTION@speed_bitHigh,w
  3268  063F  00AC               	movwf	??_ACTION
  3269  0640  01AD               	clrf	??_ACTION+1
  3270  0641  082C               	movf	??_ACTION,w
  3271  0642  00D5               	movwf	_FAN_SPEED1_10s
  3272  0643  082D               	movf	??_ACTION+1,w
  3273  0644  00D6               	movwf	_FAN_SPEED1_10s+1
  3274                           
  3275                           ;2+1dimmmer.c: 1325: FAN_SPEED1_1s= speed_bitLow;
  3276  0645  0829               	movf	ACTION@speed_bitLow,w
  3277  0646  00AC               	movwf	??_ACTION
  3278  0647  01AD               	clrf	??_ACTION+1
  3279  0648  082C               	movf	??_ACTION,w
  3280  0649  00D3               	movwf	_FAN_SPEED1_1s
  3281  064A  082D               	movf	??_ACTION+1,w
  3282  064B  00D4               	movwf	_FAN_SPEED1_1s+1
  3283  064C                     l452:	
  3284                           
  3285                           ;2+1dimmmer.c: 1326: }
  3286                           ;2+1dimmmer.c: 1327: M3=switch_status;
  3287  064C  083E               	movf	ACTION@switch_status+1,w
  3288  064D  00C6               	movwf	_M3+1
  3289  064E  083D               	movf	ACTION@switch_status,w
  3290  064F  00C5               	movwf	_M3
  3291                           
  3292                           ;2+1dimmmer.c: 1329: }
  3293                           
  3294                           ;2+1dimmmer.c: 1328: break;
  3295  0650  0008               	return
  3296  0651                     l4372:	
  3297                           
  3298                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3299                           ; Switch size 1, requested type "space"
  3300                           ; Number of cases is 1, Range of values is 0 to 0
  3301                           ; switch strategies available:
  3302                           ; Name         Instructions Cycles
  3303                           ; simple_byte            4     3 (average)
  3304                           ; direct_byte            8     6 (fixed)
  3305                           ; jumptable            260     6 (fixed)
  3306                           ;	Chosen strategy is simple_byte
  3307  0651  083A               	movf	ACTION@SwNum+1,w
  3308  0652  3A00               	xorlw	0	; case 0
  3309  0653  1903               	skipnz
  3310  0654  2E56               	goto	l5076
  3311  0655  2E61               	goto	l454
  3312  0656                     l5076:	
  3313                           
  3314                           ; Switch size 1, requested type "space"
  3315                           ; Number of cases is 3, Range of values is 1 to 3
  3316                           ; switch strategies available:
  3317                           ; Name         Instructions Cycles
  3318                           ; simple_byte           10     6 (average)
  3319                           ; direct_byte           15     9 (fixed)
  3320                           ; jumptable            263     9 (fixed)
  3321                           ;	Chosen strategy is simple_byte
  3322  0656  0839               	movf	ACTION@SwNum,w
  3323  0657  3A01               	xorlw	1	; case 1
  3324  0658  1903               	skipnz
  3325  0659  2DFE               	goto	l447
  3326  065A  3A03               	xorlw	3	; case 2
  3327  065B  1903               	skipnz
  3328  065C  2E0B               	goto	l449
  3329  065D  3A01               	xorlw	1	; case 3
  3330  065E  1903               	skipnz
  3331  065F  2E18               	goto	l4356
  3332  0660  2E61               	goto	l454
  3333  0661                     l454:	
  3334  0661  0008               	return
  3335  0662                     __end_of_ACTION:	
  3336                           
  3337                           	psect	text15
  3338  07E0                     __ptext15:	
  3339 ;; *************** function _writeUART *****************
  3340 ;; Defined at:
  3341 ;;		line 1333 in file "2+1dimmmer.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  str2Write       1    wreg     PTR unsigned char 
  3344 ;;		 -> st(26), 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  str2Write       1    5[COMMON] PTR unsigned char 
  3347 ;;		 -> st(26), 
  3348 ;;  Tx_count        2    3[COMMON] int 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      void 
  3351 ;; Registers used:
  3352 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  3359 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0
  3360 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0
  3361 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0
  3362 ;;Total ram usage:        4 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; Hardware stack levels required when called:    1
  3365 ;; This function calls:
  3366 ;;		Nothing
  3367 ;; This function is called by:
  3368 ;;		_main
  3369 ;;		_ACTION
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           
  3374                           ;psect for function _writeUART
  3375  07E0                     _writeUART:	
  3376                           
  3377                           ;incstack = 0
  3378                           ; Regs used in _writeUART: [wreg+fsr1l+fsr1h+status,2+status,0]
  3379                           ;writeUART@str2Write stored from wreg
  3380  07E0  00F5               	movwf	writeUART@str2Write
  3381                           
  3382                           ;2+1dimmmer.c: 1335: int Tx_count=0;
  3383  07E1  01F3               	clrf	writeUART@Tx_count
  3384  07E2  01F4               	clrf	writeUART@Tx_count+1
  3385  07E3                     l4212:	
  3386                           ;2+1dimmmer.c: 1337: while(Tx_count!=4)
  3387                           
  3388  07E3  3004               	movlw	4
  3389  07E4  0673               	xorwf	writeUART@Tx_count,w
  3390  07E5  0474               	iorwf	writeUART@Tx_count+1,w
  3391  07E6  1903               	btfsc	3,2
  3392  07E7  0008               	return
  3393  07E8                     l459:	
  3394                           ;2+1dimmmer.c: 1338: {
  3395                           ;2+1dimmmer.c: 1340: while (!TX1STAbits.TRMT);
  3396                           
  3397  07E8  0023               	movlb	3	; select bank3
  3398  07E9  1C9E               	btfss	30,1	;volatile
  3399  07EA  2FE8               	goto	l459
  3400                           
  3401                           ;2+1dimmmer.c: 1341: TX1REG = *str2Write;
  3402  07EB  0875               	movf	writeUART@str2Write,w
  3403  07EC  0086               	movwf	6
  3404  07ED  0187               	clrf	7
  3405  07EE  0801               	movf	1,w
  3406  07EF  009A               	movwf	26	;volatile
  3407                           
  3408                           ;2+1dimmmer.c: 1342: *str2Write++;
  3409  07F0  3001               	movlw	1
  3410  07F1  00F2               	movwf	??_writeUART
  3411  07F2  0872               	movf	??_writeUART,w
  3412  07F3  07F5               	addwf	writeUART@str2Write,f
  3413                           
  3414                           ;2+1dimmmer.c: 1343: Tx_count++;
  3415  07F4  3001               	movlw	1
  3416  07F5  07F3               	addwf	writeUART@Tx_count,f
  3417  07F6  3000               	movlw	0
  3418  07F7  3DF4               	addwfc	writeUART@Tx_count+1,f
  3419  07F8  2FE3               	goto	l4212
  3420  07F9                     __end_of_writeUART:	
  3421                           
  3422                           	psect	text16
  3423  0662                     __ptext16:	
  3424 ;; *************** function _atoi *****************
  3425 ;; Defined at:
  3426 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\atoi.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;  s               1    wreg     PTR const unsigned char 
  3429 ;;		 -> ACTION@FanSpeedString(2), ACTION@SwNumString(2), 
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  3432 ;;		 -> ACTION@FanSpeedString(2), ACTION@SwNumString(2), 
  3433 ;;  a               2    3[BANK0 ] int 
  3434 ;;  sign            1    2[BANK0 ] unsigned char 
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  2    8[COMMON] int 
  3437 ;; Registers used:
  3438 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0
  3445 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0
  3446 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  3447 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0
  3448 ;;Total ram usage:        8 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    2
  3451 ;; This function calls:
  3452 ;;		___wmul
  3453 ;;		_isdigit
  3454 ;; This function is called by:
  3455 ;;		_ACTION
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           
  3460                           ;psect for function _atoi
  3461  0662                     _atoi:	
  3462                           
  3463                           ;incstack = 0
  3464                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3465                           ;atoi@s stored from wreg
  3466  0662  0020               	movlb	0	; select bank0
  3467  0663  00A5               	movwf	atoi@s
  3468  0664                     l4218:	
  3469  0664  0825               	movf	atoi@s,w
  3470  0665  0086               	movwf	6
  3471  0666  0187               	clrf	7
  3472  0667  3020               	movlw	32
  3473  0668  0601               	xorwf	1,w
  3474  0669  1D03               	btfss	3,2
  3475  066A  2E70               	goto	l4220
  3476  066B                     l4216:	
  3477  066B  3001               	movlw	1
  3478  066C  00A0               	movwf	??_atoi
  3479  066D  0820               	movf	??_atoi,w
  3480  066E  07A5               	addwf	atoi@s,f
  3481  066F  2E64               	goto	l4218
  3482  0670                     l4220:	
  3483  0670  0825               	movf	atoi@s,w
  3484  0671  0086               	movwf	6
  3485  0672  0187               	clrf	7
  3486  0673  3009               	movlw	9
  3487  0674  0601               	xorwf	1,w
  3488  0675  1903               	btfsc	3,2
  3489  0676  2E6B               	goto	l4216
  3490  0677  01A3               	clrf	atoi@a
  3491  0678  01A4               	clrf	atoi@a+1
  3492  0679  01A2               	clrf	atoi@sign
  3493  067A  0825               	movf	atoi@s,w
  3494  067B  0086               	movwf	6
  3495  067C  0187               	clrf	7
  3496  067D  302D               	movlw	45
  3497  067E  0601               	xorwf	1,w
  3498  067F  1D03               	btfss	3,2
  3499  0680  2E86               	goto	l4228
  3500  0681  3001               	movlw	1
  3501  0682  00A0               	movwf	??_atoi
  3502  0683  0820               	movf	??_atoi,w
  3503  0684  07A2               	addwf	atoi@sign,f
  3504  0685  2E8D               	goto	l4234
  3505  0686                     l4228:	
  3506  0686  0825               	movf	atoi@s,w
  3507  0687  0086               	movwf	6
  3508  0688  0187               	clrf	7
  3509  0689  302B               	movlw	43
  3510  068A  0601               	xorwf	1,w
  3511  068B  1D03               	btfss	3,2
  3512  068C  2E91               	goto	l4236
  3513  068D                     l4234:	
  3514  068D  3001               	movlw	1
  3515  068E  00A0               	movwf	??_atoi
  3516  068F  0820               	movf	??_atoi,w
  3517  0690  07A5               	addwf	atoi@s,f
  3518  0691                     l4236:	
  3519  0691  0825               	movf	atoi@s,w
  3520  0692  0086               	movwf	6
  3521  0693  0187               	clrf	7
  3522  0694  0801               	movf	1,w
  3523  0695  318F  27DC  3186   	fcall	_isdigit
  3524  0698  1C03               	btfss	3,0
  3525  0699  2EB8               	goto	l4238
  3526  069A  0020               	movlb	0	; select bank0
  3527  069B  0824               	movf	atoi@a+1,w
  3528  069C  00F3               	movwf	___wmul@multiplier+1
  3529  069D  0823               	movf	atoi@a,w
  3530  069E  00F2               	movwf	___wmul@multiplier
  3531  069F  300A               	movlw	10
  3532  06A0  00F4               	movwf	___wmul@multiplicand
  3533  06A1  3000               	movlw	0
  3534  06A2  00F5               	movwf	___wmul@multiplicand+1
  3535  06A3  3187  27C5  3186   	fcall	___wmul
  3536  06A6  0020               	movlb	0	; select bank0
  3537  06A7  0825               	movf	atoi@s,w
  3538  06A8  0086               	movwf	6
  3539  06A9  0187               	clrf	7
  3540  06AA  0801               	movf	1,w
  3541  06AB  0772               	addwf	?___wmul,w
  3542  06AC  00A0               	movwf	??_atoi
  3543  06AD  0873               	movf	?___wmul+1,w
  3544  06AE  1803               	skipnc
  3545  06AF  0A73               	incf	?___wmul+1,w
  3546  06B0  00A1               	movwf	??_atoi+1
  3547  06B1  0820               	movf	??_atoi,w
  3548  06B2  3ED0               	addlw	208
  3549  06B3  00A3               	movwf	atoi@a
  3550  06B4  30FF               	movlw	255
  3551  06B5  3D21               	addwfc	??_atoi+1,w
  3552  06B6  00A4               	movwf	atoi@a+1
  3553  06B7  2E8D               	goto	l4234
  3554  06B8                     l4238:	
  3555  06B8  0020               	movlb	0	; select bank0
  3556  06B9  0822               	movf	atoi@sign,w
  3557  06BA  1903               	btfsc	3,2
  3558  06BB  2EC8               	goto	l4244
  3559  06BC  0923               	comf	atoi@a,w
  3560  06BD  00A0               	movwf	??_atoi
  3561  06BE  0924               	comf	atoi@a+1,w
  3562  06BF  00A1               	movwf	??_atoi+1
  3563  06C0  0AA0               	incf	??_atoi,f
  3564  06C1  1903               	skipnz
  3565  06C2  0AA1               	incf	??_atoi+1,f
  3566  06C3  0820               	movf	??_atoi,w
  3567  06C4  00F8               	movwf	?_atoi
  3568  06C5  0821               	movf	??_atoi+1,w
  3569  06C6  00F9               	movwf	?_atoi+1
  3570  06C7  0008               	return
  3571  06C8                     l4244:	
  3572  06C8  0824               	movf	atoi@a+1,w
  3573  06C9  00F9               	movwf	?_atoi+1
  3574  06CA  0823               	movf	atoi@a,w
  3575  06CB  00F8               	movwf	?_atoi
  3576  06CC  0008               	return
  3577  06CD                     __end_of_atoi:	
  3578                           
  3579                           	psect	text17
  3580  0FDC                     __ptext17:	
  3581 ;; *************** function _isdigit *****************
  3582 ;; Defined at:
  3583 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\isdigit.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  c               1    wreg     unsigned char 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  c               1    3[COMMON] unsigned char 
  3588 ;; Return value:  Size  Location     Type
  3589 ;;		None               void
  3590 ;; Registers used:
  3591 ;;		wreg, status,2, status,0
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  3598 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0
  3599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  3600 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0
  3601 ;;Total ram usage:        2 bytes
  3602 ;; Hardware stack levels used:    1
  3603 ;; Hardware stack levels required when called:    1
  3604 ;; This function calls:
  3605 ;;		Nothing
  3606 ;; This function is called by:
  3607 ;;		_atoi
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           
  3612                           ;psect for function _isdigit
  3613  0FDC                     _isdigit:	
  3614                           
  3615                           ;incstack = 0
  3616                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3617                           ;isdigit@c stored from wreg
  3618  0FDC  00F3               	movwf	isdigit@c
  3619  0FDD  01F2               	clrf	_isdigit$832
  3620  0FDE  303A               	movlw	58
  3621  0FDF  0273               	subwf	isdigit@c,w
  3622  0FE0  1803               	skipnc
  3623  0FE1  2FE8               	goto	l4102
  3624  0FE2  3030               	movlw	48
  3625  0FE3  0273               	subwf	isdigit@c,w
  3626  0FE4  1C03               	skipc
  3627  0FE5  2FE8               	goto	l4102
  3628  0FE6  01F2               	clrf	_isdigit$832
  3629  0FE7  0AF2               	incf	_isdigit$832,f
  3630  0FE8                     l4102:	
  3631  0FE8  0C72               	rrf	_isdigit$832,w
  3632  0FE9  0008               	return
  3633  0FEA                     __end_of_isdigit:	
  3634                           
  3635                           	psect	text18
  3636  07C5                     __ptext18:	
  3637 ;; *************** function ___wmul *****************
  3638 ;; Defined at:
  3639 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.45\sources\common\Umul16.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  multiplier      2    2[COMMON] unsigned int 
  3642 ;;  multiplicand    2    4[COMMON] unsigned int 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  product         2    6[COMMON] unsigned int 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  2    2[COMMON] unsigned int 
  3647 ;; Registers used:
  3648 ;;		wreg, status,2, status,0
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3654 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0
  3655 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0
  3656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  3657 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0
  3658 ;;Total ram usage:        6 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:    1
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_atoi
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           
  3669                           ;psect for function ___wmul
  3670  07C5                     ___wmul:	
  3671                           
  3672                           ;incstack = 0
  3673                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3674  07C5  01F6               	clrf	___wmul@product
  3675  07C6  01F7               	clrf	___wmul@product+1
  3676  07C7                     l4082:	
  3677  07C7  1C72               	btfss	___wmul@multiplier,0
  3678  07C8  2FCD               	goto	l500
  3679  07C9  0874               	movf	___wmul@multiplicand,w
  3680  07CA  07F6               	addwf	___wmul@product,f
  3681  07CB  0875               	movf	___wmul@multiplicand+1,w
  3682  07CC  3DF7               	addwfc	___wmul@product+1,f
  3683  07CD                     l500:	
  3684  07CD  3001               	movlw	1
  3685  07CE                     u1805:	
  3686  07CE  35F4               	lslf	___wmul@multiplicand,f
  3687  07CF  0DF5               	rlf	___wmul@multiplicand+1,f
  3688  07D0  0B89               	decfsz	9,f
  3689  07D1  2FCE               	goto	u1805
  3690  07D2  3001               	movlw	1
  3691  07D3                     u1815:	
  3692  07D3  36F3               	lsrf	___wmul@multiplier+1,f
  3693  07D4  0CF2               	rrf	___wmul@multiplier,f
  3694  07D5  0B89               	decfsz	9,f
  3695  07D6  2FD3               	goto	u1815
  3696  07D7  0872               	movf	___wmul@multiplier,w
  3697  07D8  0473               	iorwf	___wmul@multiplier+1,w
  3698  07D9  1D03               	btfss	3,2
  3699  07DA  2FC7               	goto	l4082
  3700  07DB  0877               	movf	___wmul@product+1,w
  3701  07DC  00F3               	movwf	?___wmul+1
  3702  07DD  0876               	movf	___wmul@product,w
  3703  07DE  00F2               	movwf	?___wmul
  3704  07DF  0008               	return
  3705  07E0                     __end_of___wmul:	
  3706                           
  3707                           	psect	intentry
  3708  0004                     __pintentry:	
  3709 ;; *************** function _isr *****************
  3710 ;; Defined at:
  3711 ;;		line 75 in file "2+1dimmmer.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;		None
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;		None
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  1    wreg      void 
  3718 ;; Registers used:
  3719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  3726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  3727 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0
  3728 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0
  3729 ;;Total ram usage:        2 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; This function calls:
  3732 ;;		Nothing
  3733 ;; This function is called by:
  3734 ;;		Interrupt level 1
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738  0004                     _isr:	
  3739                           
  3740                           ;incstack = 0
  3741  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3742                           
  3743                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0]
  3744  0005  3180               	pagesel	$
  3745  0006  0020               	movlb	0	; select bank0
  3746  0007  087F               	movf	127,w
  3747  0008  00F1               	movwf	??_isr+1
  3748                           
  3749                           ;2+1dimmmer.c: 79: if(RCIF == 1)
  3750  0009  1E91               	btfss	17,5	;volatile
  3751  000A  2858               	goto	i1l2814
  3752                           
  3753                           ;2+1dimmmer.c: 80: {
  3754                           ;2+1dimmmer.c: 81: if(RC1STAbits.OERR)
  3755  000B  0023               	movlb	3	; select bank3
  3756  000C  1C9D               	btfss	29,1	;volatile
  3757  000D  2819               	goto	i1l2794
  3758                           
  3759                           ;2+1dimmmer.c: 82: {
  3760                           ;2+1dimmmer.c: 83: RC1STAbits.CREN = 0;
  3761  000E  121D               	bcf	29,4	;volatile
  3762                           
  3763                           ;2+1dimmmer.c: 84: RC1STAbits.CREN = 1;
  3764  000F  161D               	bsf	29,4	;volatile
  3765  0010                     i1l229:	
  3766                           ;2+1dimmmer.c: 86: while(PIR1bits.TXIF==0);
  3767                           
  3768  0010  0020               	movlb	0	; select bank0
  3769  0011  1E11               	btfss	17,4	;volatile
  3770  0012  2810               	goto	i1l229
  3771                           
  3772                           ;2+1dimmmer.c: 87: TX1REG='F';
  3773  0013  3046               	movlw	70
  3774  0014  0023               	movlb	3	; select bank3
  3775  0015  009A               	movwf	26	;volatile
  3776  0016                     i1l232:	
  3777                           ;2+1dimmmer.c: 88: while(PIR1bits.TXIF==0);
  3778                           
  3779  0016  0020               	movlb	0	; select bank0
  3780  0017  1E11               	btfss	17,4	;volatile
  3781  0018  2816               	goto	i1l232
  3782  0019                     i1l2794:	
  3783                           
  3784                           ;2+1dimmmer.c: 90: }
  3785                           ;2+1dimmmer.c: 91: name[i]=RC1REG;
  3786  0019  0023               	movlb	3	; select bank3
  3787  001A  0819               	movf	25,w	;volatile
  3788  001B  00F0               	movwf	??_isr
  3789  001C  0020               	movlb	0	; select bank0
  3790  001D  085D               	movf	_i,w
  3791  001E  3EA0               	addlw	(low (_name| 0))& (0+255)
  3792  001F  0086               	movwf	6
  3793  0020  0187               	clrf	7
  3794  0021  0870               	movf	??_isr,w
  3795  0022  0081               	movwf	1
  3796                           
  3797                           ;2+1dimmmer.c: 92: if(name[0]=='%')
  3798  0023  3025               	movlw	37
  3799  0024  0021               	movlb	1	; select bank1
  3800  0025  0620               	xorwf	_name^(0+128),w
  3801  0026  1D03               	btfss	3,2
  3802  0027  2841               	goto	i1l235
  3803                           
  3804                           ;2+1dimmmer.c: 93: {
  3805                           ;2+1dimmmer.c: 94: i++;
  3806  0028  3001               	movlw	1
  3807  0029  0020               	movlb	0	; select bank0
  3808  002A  07DD               	addwf	_i,f
  3809  002B  3000               	movlw	0
  3810  002C  3DDE               	addwfc	_i+1,f
  3811                           
  3812                           ;2+1dimmmer.c: 95: if(i>15)
  3813  002D  085E               	movf	_i+1,w
  3814  002E  3A80               	xorlw	128
  3815  002F  00F0               	movwf	??_isr
  3816  0030  3080               	movlw	128
  3817  0031  0270               	subwf	??_isr,w
  3818  0032  1D03               	skipz
  3819  0033  2836               	goto	u120_25
  3820  0034  3010               	movlw	16
  3821  0035  025D               	subwf	_i,w
  3822  0036                     u120_25:	
  3823  0036  1C03               	skipc
  3824  0037  2858               	goto	i1l2814
  3825                           
  3826                           ;2+1dimmmer.c: 96: {
  3827                           ;2+1dimmmer.c: 97: i=0;
  3828  0038  0020               	movlb	0	; select bank0
  3829  0039  01DD               	clrf	_i
  3830  003A  01DE               	clrf	_i+1
  3831                           
  3832                           ;2+1dimmmer.c: 98: TX_FLAG = 1;
  3833  003B  3001               	movlw	1
  3834  003C  00CF               	movwf	_TX_FLAG
  3835  003D  3000               	movlw	0
  3836  003E  00D0               	movwf	_TX_FLAG+1
  3837                           
  3838                           ;2+1dimmmer.c: 99: RCIF=0;
  3839  003F  1291               	bcf	17,5	;volatile
  3840                           
  3841                           ;2+1dimmmer.c: 100: }
  3842                           ;2+1dimmmer.c: 101: }
  3843  0040  2858               	goto	i1l2814
  3844  0041                     i1l235:	
  3845                           
  3846                           ;2+1dimmmer.c: 102: else
  3847                           ;2+1dimmmer.c: 103: {
  3848                           ;2+1dimmmer.c: 104: RC1STAbits.CREN = 0;
  3849  0041  0023               	movlb	3	; select bank3
  3850  0042  121D               	bcf	29,4	;volatile
  3851                           
  3852                           ;2+1dimmmer.c: 105: RC1STAbits.CREN = 1;
  3853  0043  161D               	bsf	29,4	;volatile
  3854                           
  3855                           ;2+1dimmmer.c: 107: i=0;
  3856  0044  0020               	movlb	0	; select bank0
  3857  0045  01DD               	clrf	_i
  3858  0046  01DE               	clrf	_i+1
  3859  0047                     i1l238:	
  3860                           ;2+1dimmmer.c: 108: while(PIR1bits.TXIF==0);
  3861                           
  3862  0047  1E11               	btfss	17,4	;volatile
  3863  0048  2847               	goto	i1l238
  3864                           
  3865                           ;2+1dimmmer.c: 109: TX1REG='F';
  3866  0049  3046               	movlw	70
  3867  004A  0023               	movlb	3	; select bank3
  3868  004B  009A               	movwf	26	;volatile
  3869  004C                     i1l241:	
  3870                           ;2+1dimmmer.c: 110: while(PIR1bits.TXIF==0);
  3871                           
  3872  004C  0020               	movlb	0	; select bank0
  3873  004D  1E11               	btfss	17,4	;volatile
  3874  004E  284C               	goto	i1l241
  3875                           
  3876                           ;2+1dimmmer.c: 111: TX1REG='R';
  3877  004F  3052               	movlw	82
  3878  0050  0023               	movlb	3	; select bank3
  3879  0051  009A               	movwf	26	;volatile
  3880  0052                     i1l244:	
  3881                           ;2+1dimmmer.c: 112: while(PIR1bits.TXIF==0);
  3882                           
  3883  0052  0020               	movlb	0	; select bank0
  3884  0053  1E11               	btfss	17,4	;volatile
  3885  0054  2852               	goto	i1l244
  3886                           
  3887                           ;2+1dimmmer.c: 113: TX1REG='R';
  3888  0055  3052               	movlw	82
  3889  0056  0023               	movlb	3	; select bank3
  3890  0057  009A               	movwf	26	;volatile
  3891  0058                     i1l2814:	
  3892                           
  3893                           ;2+1dimmmer.c: 114: }
  3894                           ;2+1dimmmer.c: 115: }
  3895                           ;2+1dimmmer.c: 118: if(PIE1bits.TMR2IE==1 && PIR1bits.TMR2IF==1)
  3896  0058  0021               	movlb	1	; select bank1
  3897  0059  1C91               	btfss	17,1	;volatile
  3898  005A  2861               	goto	i1l247
  3899  005B  0020               	movlb	0	; select bank0
  3900  005C  1C91               	btfss	17,1	;volatile
  3901  005D  2861               	goto	i1l247
  3902                           
  3903                           ;2+1dimmmer.c: 119: {
  3904                           ;2+1dimmmer.c: 120: PIR1bits.TMR2IF=0;
  3905  005E  1091               	bcf	17,1	;volatile
  3906                           
  3907                           ;2+1dimmmer.c: 121: RA2=1;
  3908  005F  150C               	bsf	12,2	;volatile
  3909                           
  3910                           ;2+1dimmmer.c: 122: T2CONbits.TMR2ON=0;
  3911  0060  111C               	bcf	28,2	;volatile
  3912  0061                     i1l247:	
  3913                           
  3914                           ;2+1dimmmer.c: 123: }
  3915                           ;2+1dimmmer.c: 125: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF==1)
  3916  0061  0021               	movlb	1	; select bank1
  3917  0062  1C11               	btfss	17,0	;volatile
  3918  0063  286D               	goto	i1l2828
  3919  0064  0020               	movlb	0	; select bank0
  3920  0065  1C11               	btfss	17,0	;volatile
  3921  0066  286D               	goto	i1l2828
  3922                           
  3923                           ;2+1dimmmer.c: 126: {
  3924                           ;2+1dimmmer.c: 127: PIR1bits.TMR1IF=0;
  3925  0067  1011               	bcf	17,0	;volatile
  3926                           
  3927                           ;2+1dimmmer.c: 128: T1CONbits.TMR1ON = 0;
  3928  0068  1018               	bcf	24,0	;volatile
  3929                           
  3930                           ;2+1dimmmer.c: 129: RA2=0;
  3931  0069  110C               	bcf	12,2	;volatile
  3932                           
  3933                           ;2+1dimmmer.c: 130: PR2=0x9F;
  3934  006A  309F               	movlw	159
  3935  006B  009B               	movwf	27	;volatile
  3936                           
  3937                           ;2+1dimmmer.c: 131: T2CONbits.TMR2ON=1;
  3938  006C  151C               	bsf	28,2	;volatile
  3939  006D                     i1l2828:	
  3940                           
  3941                           ;2+1dimmmer.c: 133: }
  3942                           ;2+1dimmmer.c: 175: if(PIR1bits.CCP1IF==1)
  3943  006D  0020               	movlb	0	; select bank0
  3944  006E  1911               	btfsc	17,2	;volatile
  3945                           
  3946                           ;2+1dimmmer.c: 176: {
  3947                           ;2+1dimmmer.c: 177: if(PIR1bits.CCP1IF == 1)
  3948  006F  1D11               	btfss	17,2	;volatile
  3949  0070  2A55               	goto	i1l395
  3950                           
  3951                           ;2+1dimmmer.c: 178: {
  3952                           ;2+1dimmmer.c: 179: PIR1bits.CCP1IF = 0;
  3953  0071  1111               	bcf	17,2	;volatile
  3954                           
  3955                           ;2+1dimmmer.c: 181: if(FAN_FLAG1==1 && pk==1)
  3956  0072  034D               	decf	_FAN_FLAG1,w
  3957  0073  044E               	iorwf	_FAN_FLAG1+1,w
  3958  0074  1D03               	btfss	3,2
  3959  0075  2A54               	goto	i1l251
  3960  0076  035B               	decf	_pk,w
  3961  0077  045C               	iorwf	_pk+1,w
  3962  0078  1903               	btfsc	3,2
  3963  0079  2A42               	goto	i1l3292
  3964  007A  2A54               	goto	i1l251
  3965  007B                     i1l2840:	
  3966                           ;2+1dimmmer.c: 187: {
  3967                           ;2+1dimmmer.c: 188: case '0':
  3968                           
  3969                           ;2+1dimmmer.c: 186: switch(FAN_SPEED1_1s)
  3970                           
  3971                           ;2+1dimmmer.c: 184: {
  3972                           ;2+1dimmmer.c: 185: case '0':
  3973                           
  3974                           ;2+1dimmmer.c: 182: {
  3975                           ;2+1dimmmer.c: 183: switch(FAN_SPEED1_10s)
  3976                           
  3977                           
  3978                           ;2+1dimmmer.c: 189: TMR1H=0x7B; TMR1L=0x30; T1CONbits.TMR1ON = 1; break;
  3979  007B  307B               	movlw	123
  3980  007C  2A1E               	goto	L48
  3981  007D                     i1l2844:	
  3982                           ;2+1dimmmer.c: 190: case '1':
  3983                           
  3984                           
  3985                           ;2+1dimmmer.c: 191: TMR1H=0x7C; TMR1L=0xC0; T1CONbits.TMR1ON = 1; break;
  3986  007D  307C               	movlw	124
  3987  007E  2A22               	goto	L49
  3988  007F                     i1l2848:	
  3989                           ;2+1dimmmer.c: 192: case '2':
  3990                           
  3991                           
  3992                           ;2+1dimmmer.c: 193: TMR1H=0x7D; TMR1L=0x88; T1CONbits.TMR1ON = 1; break;
  3993  007F  307D               	movlw	125
  3994  0080  0097               	movwf	23	;volatile
  3995  0081  3088               	movlw	136
  3996  0082  2A2C               	goto	L4
  3997  0083                     i1l2852:	
  3998                           ;2+1dimmmer.c: 194: case '3':
  3999                           
  4000                           
  4001                           ;2+1dimmmer.c: 195: TMR1H=0x7F; TMR1L=0x18; T1CONbits.TMR1ON = 1; break;
  4002  0083  307F               	movlw	127
  4003  0084  0097               	movwf	23	;volatile
  4004  0085  3018               	movlw	24
  4005  0086  2A2C               	goto	L4
  4006  0087                     i1l2856:	
  4007                           ;2+1dimmmer.c: 196: case '4':
  4008                           
  4009                           
  4010                           ;2+1dimmmer.c: 197: TMR1H=0x80; TMR1L=0xA8; T1CONbits.TMR1ON = 1; break;
  4011  0087  3080               	movlw	128
  4012  0088  29CF               	goto	L53
  4013  0089                     i1l2860:	
  4014                           ;2+1dimmmer.c: 198: case '5':
  4015                           
  4016                           
  4017                           ;2+1dimmmer.c: 199: TMR1H=0x81; TMR1L=0x70; T1CONbits.TMR1ON = 1; break;
  4018  0089  3081               	movlw	129
  4019  008A  29D3               	goto	L36
  4020  008B                     i1l2864:	
  4021                           ;2+1dimmmer.c: 200: case '6':
  4022                           
  4023                           
  4024                           ;2+1dimmmer.c: 201: TMR1H=0x83; TMR1L=0x00; T1CONbits.TMR1ON = 1; break;
  4025  008B  3083               	movlw	131
  4026  008C  29DB               	goto	L37
  4027  008D                     i1l2870:	
  4028                           ;2+1dimmmer.c: 202: case '7':
  4029                           
  4030                           
  4031                           ;2+1dimmmer.c: 203: TMR1H=0x83; TMR1L=0xC8; T1CONbits.TMR1ON = 1; break;
  4032  008D  3083               	movlw	131
  4033  008E  0097               	movwf	23	;volatile
  4034  008F  30C8               	movlw	200
  4035  0090  2A2C               	goto	L4
  4036  0091                     i1l2874:	
  4037                           ;2+1dimmmer.c: 204: case '8':
  4038                           
  4039  0091  28AF               	goto	i1l2894
  4040  0092                     i1l2878:	
  4041                           ;2+1dimmmer.c: 206: case '9':
  4042                           
  4043                           ;2+1dimmmer.c: 205: TMR1H=0x87; TMR1L=0xB0; T1CONbits.TMR1ON = 1; break;
  4044                           
  4045                           
  4046                           ;2+1dimmmer.c: 207: TMR1H=0x85; TMR1L=0x58; T1CONbits.TMR1ON = 1; break;
  4047  0092  3085               	movlw	133
  4048  0093  0097               	movwf	23	;volatile
  4049  0094  3058               	movlw	88
  4050  0095  2A2C               	goto	L4
  4051  0096                     i1l2884:	
  4052                           ;2+1dimmmer.c: 210: }
  4053                           
  4054                           ;2+1dimmmer.c: 209: break;
  4055                           
  4056                           ;2+1dimmmer.c: 208: default:
  4057                           
  4058                           
  4059                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4060                           ; Switch size 1, requested type "space"
  4061                           ; Number of cases is 1, Range of values is 0 to 0
  4062                           ; switch strategies available:
  4063                           ; Name         Instructions Cycles
  4064                           ; simple_byte            4     3 (average)
  4065                           ; direct_byte            8     6 (fixed)
  4066                           ; jumptable            260     6 (fixed)
  4067                           ;	Chosen strategy is simple_byte
  4068  0096  0854               	movf	_FAN_SPEED1_1s+1,w
  4069  0097  3A00               	xorlw	0	; case 0
  4070  0098  1903               	skipnz
  4071  0099  289B               	goto	i1l5078
  4072  009A  2A54               	goto	i1l251
  4073  009B                     i1l5078:	
  4074                           
  4075                           ; Switch size 1, requested type "space"
  4076                           ; Number of cases is 10, Range of values is 48 to 57
  4077                           ; switch strategies available:
  4078                           ; Name         Instructions Cycles
  4079                           ; direct_byte           29     9 (fixed)
  4080                           ; simple_byte           31    16 (average)
  4081                           ; jumptable            263     9 (fixed)
  4082                           ;	Chosen strategy is direct_byte
  4083  009B  0853               	movf	_FAN_SPEED1_1s,w
  4084  009C  3ED0               	addlw	-48
  4085  009D  1C03               	skipc
  4086  009E  2A54               	goto	i1l251
  4087  009F  0084               	movwf	4
  4088  00A0  300A               	movlw	10
  4089  00A1  0204               	subwf	4,w
  4090  00A2  1803               	skipnc
  4091  00A3  2A54               	goto	i1l251
  4092  00A4  3188               	movlp	high i1S5080
  4093  00A5  3504               	lslf	4,w
  4094  00A6  3E00               	addlw	low i1S5080
  4095  00A7  0082               	movwf	2
  4096                           
  4097                           ;2+1dimmmer.c: 211: break;
  4098  00A8  2A54               	goto	i1l251
  4099  00A9                     i1l2886:	
  4100                           ;2+1dimmmer.c: 215: {
  4101                           ;2+1dimmmer.c: 216: case '0':
  4102                           
  4103                           ;2+1dimmmer.c: 214: switch(FAN_SPEED1_1s)
  4104                           
  4105                           ;2+1dimmmer.c: 212: case '1':
  4106                           
  4107                           
  4108                           ;2+1dimmmer.c: 217: TMR1H=0x86; TMR1L=0x20; T1CONbits.TMR1ON = 1; break;
  4109  00A9  3086               	movlw	134
  4110  00AA  29E3               	goto	L39
  4111  00AB                     i1l2890:	
  4112                           ;2+1dimmmer.c: 218: case '1':
  4113                           
  4114                           
  4115                           ;2+1dimmmer.c: 219: TMR1H=0x86; TMR1L=0xE8; T1CONbits.TMR1ON = 1; break;
  4116  00AB  3086               	movlw	134
  4117  00AC  0097               	movwf	23	;volatile
  4118  00AD  30E8               	movlw	232
  4119  00AE  2A2C               	goto	L4
  4120  00AF                     i1l2894:	
  4121                           ;2+1dimmmer.c: 220: case '2':
  4122                           
  4123                           
  4124                           ;2+1dimmmer.c: 221: TMR1H=0x87; TMR1L=0xB0; T1CONbits.TMR1ON = 1; break;
  4125  00AF  3087               	movlw	135
  4126  00B0  29E7               	goto	L40
  4127  00B1                     i1l2898:	
  4128                           ;2+1dimmmer.c: 222: case '3':
  4129                           
  4130                           
  4131                           ;2+1dimmmer.c: 223: TMR1H=0x88; TMR1L=0x78; T1CONbits.TMR1ON = 1; break;
  4132  00B1  3088               	movlw	136
  4133  00B2  29EB               	goto	L55
  4134  00B3                     i1l2902:	
  4135                           ;2+1dimmmer.c: 224: case '4':
  4136                           
  4137                           
  4138                           ;2+1dimmmer.c: 225: TMR1H=0x89; TMR1L=0x40; T1CONbits.TMR1ON = 1; break;
  4139  00B3  3089               	movlw	137
  4140  00B4  29EF               	goto	L41
  4141  00B5                     i1l2906:	
  4142                           ;2+1dimmmer.c: 226: case '5':
  4143                           
  4144                           
  4145                           ;2+1dimmmer.c: 227: TMR1H=0x8A; TMR1L=0x08; T1CONbits.TMR1ON = 1; break;
  4146  00B5  308A               	movlw	138
  4147  00B6  0097               	movwf	23	;volatile
  4148  00B7  3008               	movlw	8
  4149  00B8  2A2C               	goto	L4
  4150  00B9                     i1l2910:	
  4151                           ;2+1dimmmer.c: 228: case '6':
  4152                           
  4153                           
  4154                           ;2+1dimmmer.c: 229: TMR1H=0x8A; TMR1L=0xD0; T1CONbits.TMR1ON = 1; break;
  4155  00B9  308A               	movlw	138
  4156  00BA  2A06               	goto	L42
  4157  00BB                     i1l2914:	
  4158                           ;2+1dimmmer.c: 230: case '7':
  4159                           
  4160                           
  4161                           ;2+1dimmmer.c: 231: TMR1H=0x8B; TMR1L=0x98; T1CONbits.TMR1ON = 1; break;
  4162  00BB  308B               	movlw	139
  4163  00BC  0097               	movwf	23	;volatile
  4164  00BD  3098               	movlw	152
  4165  00BE  2A2C               	goto	L4
  4166  00BF                     i1l2918:	
  4167                           ;2+1dimmmer.c: 232: case '8':
  4168                           
  4169                           
  4170                           ;2+1dimmmer.c: 233: TMR1H=0x8C; TMR1L=0x60; T1CONbits.TMR1ON = 1; break;
  4171  00BF  308C               	movlw	140
  4172  00C0  2A0A               	goto	L43
  4173  00C1                     i1l2922:	
  4174                           ;2+1dimmmer.c: 234: case '9':
  4175                           
  4176                           
  4177                           ;2+1dimmmer.c: 235: TMR1H=0x8D; TMR1L=0x28; T1CONbits.TMR1ON = 1; break;
  4178  00C1  308D               	movlw	141
  4179  00C2  0097               	movwf	23	;volatile
  4180  00C3  3028               	movlw	40
  4181  00C4  2A2C               	goto	L4
  4182  00C5                     i1l2928:	
  4183                           ;2+1dimmmer.c: 238: }
  4184                           
  4185                           ;2+1dimmmer.c: 237: break;
  4186                           
  4187                           ;2+1dimmmer.c: 236: default:
  4188                           
  4189                           
  4190                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4191                           ; Switch size 1, requested type "space"
  4192                           ; Number of cases is 1, Range of values is 0 to 0
  4193                           ; switch strategies available:
  4194                           ; Name         Instructions Cycles
  4195                           ; simple_byte            4     3 (average)
  4196                           ; direct_byte            8     6 (fixed)
  4197                           ; jumptable            260     6 (fixed)
  4198                           ;	Chosen strategy is simple_byte
  4199  00C5  0854               	movf	_FAN_SPEED1_1s+1,w
  4200  00C6  3A00               	xorlw	0	; case 0
  4201  00C7  1903               	skipnz
  4202  00C8  28CA               	goto	i1l5082
  4203  00C9  2A54               	goto	i1l251
  4204  00CA                     i1l5082:	
  4205                           
  4206                           ; Switch size 1, requested type "space"
  4207                           ; Number of cases is 10, Range of values is 48 to 57
  4208                           ; switch strategies available:
  4209                           ; Name         Instructions Cycles
  4210                           ; direct_byte           29     9 (fixed)
  4211                           ; simple_byte           31    16 (average)
  4212                           ; jumptable            263     9 (fixed)
  4213                           ;	Chosen strategy is direct_byte
  4214  00CA  0853               	movf	_FAN_SPEED1_1s,w
  4215  00CB  3ED0               	addlw	-48
  4216  00CC  1C03               	skipc
  4217  00CD  2A54               	goto	i1l251
  4218  00CE  0084               	movwf	4
  4219  00CF  300A               	movlw	10
  4220  00D0  0204               	subwf	4,w
  4221  00D1  1803               	skipnc
  4222  00D2  2A54               	goto	i1l251
  4223  00D3  3188               	movlp	high i1S5084
  4224  00D4  3504               	lslf	4,w
  4225  00D5  3E14               	addlw	low i1S5084
  4226  00D6  0082               	movwf	2
  4227                           
  4228                           ;2+1dimmmer.c: 239: break;
  4229  00D7  2A54               	goto	i1l251
  4230  00D8                     i1l2930:	
  4231                           ;2+1dimmmer.c: 243: {
  4232                           ;2+1dimmmer.c: 244: case '0':
  4233                           
  4234                           ;2+1dimmmer.c: 242: switch(FAN_SPEED1_1s)
  4235                           
  4236                           ;2+1dimmmer.c: 240: case '2':
  4237                           
  4238                           
  4239                           ;2+1dimmmer.c: 245: TMR1H=0x8D; TMR1L=0xF0; T1CONbits.TMR1ON = 1; break;
  4240  00D8  308D               	movlw	141
  4241  00D9  2A0E               	goto	L44
  4242  00DA                     i1l2934:	
  4243                           ;2+1dimmmer.c: 246: case '1':
  4244                           
  4245                           
  4246                           ;2+1dimmmer.c: 247: TMR1H=0x8E; TMR1L=0xB8; T1CONbits.TMR1ON = 1; break;
  4247  00DA  308E               	movlw	142
  4248  00DB  0097               	movwf	23	;volatile
  4249  00DC  30B8               	movlw	184
  4250  00DD  2A2C               	goto	L4
  4251  00DE                     i1l2938:	
  4252                           ;2+1dimmmer.c: 248: case '2':
  4253                           
  4254                           
  4255                           ;2+1dimmmer.c: 249: TMR1H=0x8F; TMR1L=0x80; T1CONbits.TMR1ON = 1; break;
  4256  00DE  308F               	movlw	143
  4257  00DF  2A12               	goto	L45
  4258  00E0                     i1l2942:	
  4259                           ;2+1dimmmer.c: 250: case '3':
  4260                           
  4261                           
  4262                           ;2+1dimmmer.c: 251: TMR1H=0x90; TMR1L=0x48; T1CONbits.TMR1ON = 1; break;
  4263  00E0  3090               	movlw	144
  4264  00E1  0097               	movwf	23	;volatile
  4265  00E2  3048               	movlw	72
  4266  00E3  2A2C               	goto	L4
  4267  00E4                     i1l2946:	
  4268                           ;2+1dimmmer.c: 252: case '4':
  4269                           
  4270                           
  4271                           ;2+1dimmmer.c: 253: TMR1H=0x91; TMR1L=0x10; T1CONbits.TMR1ON = 1; break;
  4272  00E4  3091               	movlw	145
  4273  00E5  2A16               	goto	L46
  4274  00E6                     i1l2950:	
  4275                           ;2+1dimmmer.c: 254: case '5':
  4276                           
  4277                           
  4278                           ;2+1dimmmer.c: 255: TMR1H=0x91; TMR1L=0xD8; T1CONbits.TMR1ON = 1; break;
  4279  00E6  3091               	movlw	145
  4280  00E7  0097               	movwf	23	;volatile
  4281  00E8  30D8               	movlw	216
  4282  00E9  2A2C               	goto	L4
  4283  00EA                     i1l2954:	
  4284                           ;2+1dimmmer.c: 256: case '6':
  4285                           
  4286                           
  4287                           ;2+1dimmmer.c: 257: TMR1H=0x92; TMR1L=0xA0; T1CONbits.TMR1ON = 1; break;
  4288  00EA  3092               	movlw	146
  4289  00EB  2A1A               	goto	L47
  4290  00EC                     i1l2958:	
  4291                           ;2+1dimmmer.c: 258: case '7':
  4292                           
  4293                           
  4294                           ;2+1dimmmer.c: 259: TMR1H=0x93; TMR1L=0x68; T1CONbits.TMR1ON = 1; break;
  4295  00EC  3093               	movlw	147
  4296  00ED  0097               	movwf	23	;volatile
  4297  00EE  3068               	movlw	104
  4298  00EF  2A2C               	goto	L4
  4299  00F0                     i1l2962:	
  4300                           ;2+1dimmmer.c: 260: case '8':
  4301                           
  4302                           
  4303                           ;2+1dimmmer.c: 261: TMR1H=0x94; TMR1L=0x30; T1CONbits.TMR1ON = 1; break;
  4304  00F0  3094               	movlw	148
  4305  00F1  2A1E               	goto	L48
  4306  00F2                     i1l2966:	
  4307                           ;2+1dimmmer.c: 262: case '9':
  4308                           
  4309                           
  4310                           ;2+1dimmmer.c: 263: TMR1H=0x94; TMR1L=0xF8; T1CONbits.TMR1ON = 1; break;
  4311  00F2  3094               	movlw	148
  4312  00F3  0097               	movwf	23	;volatile
  4313  00F4  30F8               	movlw	248
  4314  00F5  2A2C               	goto	L4
  4315  00F6                     i1l2972:	
  4316                           ;2+1dimmmer.c: 266: }
  4317                           
  4318                           ;2+1dimmmer.c: 265: break;
  4319                           
  4320                           ;2+1dimmmer.c: 264: default:
  4321                           
  4322                           
  4323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4324                           ; Switch size 1, requested type "space"
  4325                           ; Number of cases is 1, Range of values is 0 to 0
  4326                           ; switch strategies available:
  4327                           ; Name         Instructions Cycles
  4328                           ; simple_byte            4     3 (average)
  4329                           ; direct_byte            8     6 (fixed)
  4330                           ; jumptable            260     6 (fixed)
  4331                           ;	Chosen strategy is simple_byte
  4332  00F6  0854               	movf	_FAN_SPEED1_1s+1,w
  4333  00F7  3A00               	xorlw	0	; case 0
  4334  00F8  1903               	skipnz
  4335  00F9  28FB               	goto	i1l5086
  4336  00FA  2A54               	goto	i1l251
  4337  00FB                     i1l5086:	
  4338                           
  4339                           ; Switch size 1, requested type "space"
  4340                           ; Number of cases is 10, Range of values is 48 to 57
  4341                           ; switch strategies available:
  4342                           ; Name         Instructions Cycles
  4343                           ; direct_byte           29     9 (fixed)
  4344                           ; simple_byte           31    16 (average)
  4345                           ; jumptable            263     9 (fixed)
  4346                           ;	Chosen strategy is direct_byte
  4347  00FB  0853               	movf	_FAN_SPEED1_1s,w
  4348  00FC  3ED0               	addlw	-48
  4349  00FD  1C03               	skipc
  4350  00FE  2A54               	goto	i1l251
  4351  00FF  0084               	movwf	4
  4352  0100  300A               	movlw	10
  4353  0101  0204               	subwf	4,w
  4354  0102  1803               	skipnc
  4355  0103  2A54               	goto	i1l251
  4356  0104  3188               	movlp	high i1S5088
  4357  0105  3504               	lslf	4,w
  4358  0106  3E28               	addlw	low i1S5088
  4359  0107  0082               	movwf	2
  4360                           
  4361                           ;2+1dimmmer.c: 267: break;
  4362  0108  2A54               	goto	i1l251
  4363  0109                     i1l2974:	
  4364                           ;2+1dimmmer.c: 271: {
  4365                           ;2+1dimmmer.c: 272: case '0':
  4366                           
  4367                           ;2+1dimmmer.c: 270: switch(FAN_SPEED1_1s)
  4368                           
  4369                           ;2+1dimmmer.c: 268: case '3':
  4370                           
  4371                           
  4372                           ;2+1dimmmer.c: 273: TMR1H=0x95; TMR1L=0xC0; T1CONbits.TMR1ON = 1; break;
  4373  0109  3095               	movlw	149
  4374  010A  2A22               	goto	L49
  4375  010B                     i1l2978:	
  4376                           ;2+1dimmmer.c: 274: case '1':
  4377                           
  4378                           
  4379                           ;2+1dimmmer.c: 275: TMR1H=0x97; TMR1L=0x50; T1CONbits.TMR1ON = 1; break;
  4380  010B  3097               	movlw	151
  4381  010C  2A26               	goto	L50
  4382  010D                     i1l2982:	
  4383                           ;2+1dimmmer.c: 276: case '2':
  4384                           
  4385                           
  4386                           ;2+1dimmmer.c: 277: TMR1H=0x98; TMR1L=0xE0; T1CONbits.TMR1ON = 1; break;
  4387  010D  3098               	movlw	152
  4388  010E  2A2A               	goto	L20
  4389  010F                     i1l2986:	
  4390                           ;2+1dimmmer.c: 278: case '3':
  4391                           
  4392                           
  4393                           ;2+1dimmmer.c: 279: TMR1H=0x9A; TMR1L=0x70; T1CONbits.TMR1ON = 1; break;
  4394  010F  309A               	movlw	154
  4395  0110  29D3               	goto	L36
  4396  0111                     i1l2990:	
  4397                           ;2+1dimmmer.c: 280: case '4':
  4398                           
  4399                           
  4400                           ;2+1dimmmer.c: 281: TMR1H=0x9C; TMR1L=0x00; T1CONbits.TMR1ON = 1; break;
  4401  0111  309C               	movlw	156
  4402  0112  29DB               	goto	L37
  4403  0113                     i1l2996:	
  4404                           ;2+1dimmmer.c: 282: case '5':
  4405                           
  4406                           
  4407                           ;2+1dimmmer.c: 283: TMR1H=0x9D; TMR1L=0x90; T1CONbits.TMR1ON = 1; break;
  4408  0113  309D               	movlw	157
  4409  0114  29DF               	goto	L38
  4410  0115                     i1l3000:	
  4411                           ;2+1dimmmer.c: 284: case '6':
  4412                           
  4413                           
  4414                           ;2+1dimmmer.c: 285: TMR1H=0x9F; TMR1L=0x20; T1CONbits.TMR1ON = 1; break;
  4415  0115  309F               	movlw	159
  4416  0116  29E3               	goto	L39
  4417  0117                     i1l3004:	
  4418                           ;2+1dimmmer.c: 286: case '7':
  4419                           
  4420                           
  4421                           ;2+1dimmmer.c: 287: TMR1H=0xA0; TMR1L=0xB0; T1CONbits.TMR1ON = 1; break;
  4422  0117  30A0               	movlw	160
  4423  0118  29E7               	goto	L40
  4424  0119                     i1l3008:	
  4425                           ;2+1dimmmer.c: 288: case '8':
  4426                           
  4427                           
  4428                           ;2+1dimmmer.c: 289: TMR1H=0xA2; TMR1L=0x40; T1CONbits.TMR1ON = 1; break;
  4429  0119  30A2               	movlw	162
  4430  011A  29EF               	goto	L41
  4431  011B                     i1l3012:	
  4432                           ;2+1dimmmer.c: 290: case '9':
  4433                           
  4434                           
  4435                           ;2+1dimmmer.c: 291: TMR1H=0xA3; TMR1L=0xD0; T1CONbits.TMR1ON = 1; break;
  4436  011B  30A3               	movlw	163
  4437  011C  2A06               	goto	L42
  4438  011D                     i1l3018:	
  4439                           ;2+1dimmmer.c: 294: }
  4440                           
  4441                           ;2+1dimmmer.c: 293: break;
  4442                           
  4443                           ;2+1dimmmer.c: 292: default:
  4444                           
  4445                           
  4446                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4447                           ; Switch size 1, requested type "space"
  4448                           ; Number of cases is 1, Range of values is 0 to 0
  4449                           ; switch strategies available:
  4450                           ; Name         Instructions Cycles
  4451                           ; simple_byte            4     3 (average)
  4452                           ; direct_byte            8     6 (fixed)
  4453                           ; jumptable            260     6 (fixed)
  4454                           ;	Chosen strategy is simple_byte
  4455  011D  0854               	movf	_FAN_SPEED1_1s+1,w
  4456  011E  3A00               	xorlw	0	; case 0
  4457  011F  1903               	skipnz
  4458  0120  2922               	goto	i1l5090
  4459  0121  2A54               	goto	i1l251
  4460  0122                     i1l5090:	
  4461                           
  4462                           ; Switch size 1, requested type "space"
  4463                           ; Number of cases is 10, Range of values is 48 to 57
  4464                           ; switch strategies available:
  4465                           ; Name         Instructions Cycles
  4466                           ; direct_byte           29     9 (fixed)
  4467                           ; simple_byte           31    16 (average)
  4468                           ; jumptable            263     9 (fixed)
  4469                           ;	Chosen strategy is direct_byte
  4470  0122  0853               	movf	_FAN_SPEED1_1s,w
  4471  0123  3ED0               	addlw	-48
  4472  0124  1C03               	skipc
  4473  0125  2A54               	goto	i1l251
  4474  0126  0084               	movwf	4
  4475  0127  300A               	movlw	10
  4476  0128  0204               	subwf	4,w
  4477  0129  1803               	skipnc
  4478  012A  2A54               	goto	i1l251
  4479  012B  3188               	movlp	high i1S5092
  4480  012C  3504               	lslf	4,w
  4481  012D  3E3C               	addlw	low i1S5092
  4482  012E  0082               	movwf	2
  4483                           
  4484                           ;2+1dimmmer.c: 295: break;
  4485  012F  2A54               	goto	i1l251
  4486  0130                     i1l3020:	
  4487                           ;2+1dimmmer.c: 299: {
  4488                           ;2+1dimmmer.c: 300: case '0':
  4489                           
  4490                           ;2+1dimmmer.c: 298: switch(FAN_SPEED1_1s)
  4491                           
  4492                           ;2+1dimmmer.c: 296: case '4':
  4493                           
  4494                           
  4495                           ;2+1dimmmer.c: 301: TMR1H=0xA5; TMR1L=0x60; T1CONbits.TMR1ON = 1; break;
  4496  0130  30A5               	movlw	165
  4497  0131  2A0A               	goto	L43
  4498  0132                     i1l3024:	
  4499                           ;2+1dimmmer.c: 302: case '1':
  4500                           
  4501                           
  4502                           ;2+1dimmmer.c: 303: TMR1H=0xA6; TMR1L=0xF0; T1CONbits.TMR1ON = 1; break;
  4503  0132  30A6               	movlw	166
  4504  0133  2A0E               	goto	L44
  4505  0134                     i1l3028:	
  4506                           ;2+1dimmmer.c: 304: case '2':
  4507                           
  4508                           
  4509                           ;2+1dimmmer.c: 305: TMR1H=0xA8; TMR1L=0x80; T1CONbits.TMR1ON = 1; break;
  4510  0134  30A8               	movlw	168
  4511  0135  2A12               	goto	L45
  4512  0136                     i1l3032:	
  4513                           ;2+1dimmmer.c: 306: case '3':
  4514                           
  4515                           
  4516                           ;2+1dimmmer.c: 307: TMR1H=0xAA; TMR1L=0x10; T1CONbits.TMR1ON = 1; break;
  4517  0136  30AA               	movlw	170
  4518  0137  2A16               	goto	L46
  4519  0138                     i1l3036:	
  4520                           ;2+1dimmmer.c: 308: case '4':
  4521                           
  4522                           
  4523                           ;2+1dimmmer.c: 309: TMR1H=0xAB; TMR1L=0xA0; T1CONbits.TMR1ON = 1; break;
  4524  0138  30AB               	movlw	171
  4525  0139  2A1A               	goto	L47
  4526  013A                     i1l3040:	
  4527                           ;2+1dimmmer.c: 310: case '5':
  4528                           
  4529                           
  4530                           ;2+1dimmmer.c: 311: TMR1H=0xAD; TMR1L=0x30; T1CONbits.TMR1ON = 1; break;
  4531  013A  30AD               	movlw	173
  4532  013B  2A1E               	goto	L48
  4533  013C                     i1l3044:	
  4534                           ;2+1dimmmer.c: 312: case '6':
  4535                           
  4536                           
  4537                           ;2+1dimmmer.c: 313: TMR1H=0xAE; TMR1L=0xC0; T1CONbits.TMR1ON = 1; break;
  4538  013C  30AE               	movlw	174
  4539  013D  2A22               	goto	L49
  4540  013E                     i1l3048:	
  4541                           ;2+1dimmmer.c: 314: case '7':
  4542                           
  4543                           
  4544                           ;2+1dimmmer.c: 315: TMR1H=0xB0; TMR1L=0x50; T1CONbits.TMR1ON = 1; break;
  4545  013E  30B0               	movlw	176
  4546  013F  2A26               	goto	L50
  4547  0140                     i1l3052:	
  4548                           ;2+1dimmmer.c: 316: case '8':
  4549                           
  4550                           
  4551                           ;2+1dimmmer.c: 317: TMR1H=0xB1; TMR1L=0xE0; T1CONbits.TMR1ON = 1; break;
  4552  0140  30B1               	movlw	177
  4553  0141  2A2A               	goto	L20
  4554  0142                     i1l3056:	
  4555                           ;2+1dimmmer.c: 318: case '9':
  4556                           
  4557                           
  4558                           ;2+1dimmmer.c: 319: TMR1H=0xB3; TMR1L=0x70; T1CONbits.TMR1ON = 1; break;
  4559  0142  30B3               	movlw	179
  4560  0143  29D3               	goto	L36
  4561  0144                     i1l3062:	
  4562                           ;2+1dimmmer.c: 322: }
  4563                           
  4564                           ;2+1dimmmer.c: 321: break;
  4565                           
  4566                           ;2+1dimmmer.c: 320: default:
  4567                           
  4568                           
  4569                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4570                           ; Switch size 1, requested type "space"
  4571                           ; Number of cases is 1, Range of values is 0 to 0
  4572                           ; switch strategies available:
  4573                           ; Name         Instructions Cycles
  4574                           ; simple_byte            4     3 (average)
  4575                           ; direct_byte            8     6 (fixed)
  4576                           ; jumptable            260     6 (fixed)
  4577                           ;	Chosen strategy is simple_byte
  4578  0144  0854               	movf	_FAN_SPEED1_1s+1,w
  4579  0145  3A00               	xorlw	0	; case 0
  4580  0146  1903               	skipnz
  4581  0147  2949               	goto	i1l5094
  4582  0148  2A54               	goto	i1l251
  4583  0149                     i1l5094:	
  4584                           
  4585                           ; Switch size 1, requested type "space"
  4586                           ; Number of cases is 10, Range of values is 48 to 57
  4587                           ; switch strategies available:
  4588                           ; Name         Instructions Cycles
  4589                           ; direct_byte           29     9 (fixed)
  4590                           ; simple_byte           31    16 (average)
  4591                           ; jumptable            263     9 (fixed)
  4592                           ;	Chosen strategy is direct_byte
  4593  0149  0853               	movf	_FAN_SPEED1_1s,w
  4594  014A  3ED0               	addlw	-48
  4595  014B  1C03               	skipc
  4596  014C  2A54               	goto	i1l251
  4597  014D  0084               	movwf	4
  4598  014E  300A               	movlw	10
  4599  014F  0204               	subwf	4,w
  4600  0150  1803               	skipnc
  4601  0151  2A54               	goto	i1l251
  4602  0152  3188               	movlp	high i1S5096
  4603  0153  3504               	lslf	4,w
  4604  0154  3E50               	addlw	low i1S5096
  4605  0155  0082               	movwf	2
  4606                           
  4607                           ;2+1dimmmer.c: 323: break;
  4608  0156  2A54               	goto	i1l251
  4609  0157                     i1l3064:	
  4610                           ;2+1dimmmer.c: 327: {
  4611                           ;2+1dimmmer.c: 328: case '0':
  4612                           
  4613                           ;2+1dimmmer.c: 326: switch(FAN_SPEED1_1s)
  4614                           
  4615                           ;2+1dimmmer.c: 324: case '5':
  4616                           
  4617                           
  4618                           ;2+1dimmmer.c: 329: TMR1H=0xB5; TMR1L=0x00; T1CONbits.TMR1ON = 1; break;
  4619  0157  30B5               	movlw	181
  4620  0158  29DB               	goto	L37
  4621  0159                     i1l3070:	
  4622                           ;2+1dimmmer.c: 330: case '1':
  4623                           
  4624                           
  4625                           ;2+1dimmmer.c: 331: TMR1H=0xB6; TMR1L=0x90; T1CONbits.TMR1ON = 1; break;
  4626  0159  30B6               	movlw	182
  4627  015A  29DF               	goto	L38
  4628  015B                     i1l3074:	
  4629                           ;2+1dimmmer.c: 332: case '2':
  4630                           
  4631                           
  4632                           ;2+1dimmmer.c: 333: TMR1H=0xB8; TMR1L=0x20; T1CONbits.TMR1ON = 1; break;
  4633  015B  30B8               	movlw	184
  4634  015C  29E3               	goto	L39
  4635  015D                     i1l3078:	
  4636                           ;2+1dimmmer.c: 334: case '3':
  4637                           
  4638                           
  4639                           ;2+1dimmmer.c: 335: TMR1H=0xB9; TMR1L=0xB0; T1CONbits.TMR1ON = 1; break;
  4640  015D  30B9               	movlw	185
  4641  015E  29E7               	goto	L40
  4642  015F                     i1l3082:	
  4643                           ;2+1dimmmer.c: 336: case '4':
  4644                           
  4645                           
  4646                           ;2+1dimmmer.c: 337: TMR1H=0xBB; TMR1L=0x40; T1CONbits.TMR1ON = 1; break;
  4647  015F  30BB               	movlw	187
  4648  0160  29EF               	goto	L41
  4649  0161                     i1l3086:	
  4650                           ;2+1dimmmer.c: 338: case '5':
  4651                           
  4652                           
  4653                           ;2+1dimmmer.c: 339: TMR1H=0xBC; TMR1L=0xD0; T1CONbits.TMR1ON = 1; break;
  4654  0161  30BC               	movlw	188
  4655  0162  2A06               	goto	L42
  4656  0163                     i1l3090:	
  4657                           ;2+1dimmmer.c: 340: case '6':
  4658                           
  4659                           
  4660                           ;2+1dimmmer.c: 341: TMR1H=0xBE; TMR1L=0x60; T1CONbits.TMR1ON = 1; break;
  4661  0163  30BE               	movlw	190
  4662  0164  2A0A               	goto	L43
  4663  0165                     i1l3094:	
  4664                           ;2+1dimmmer.c: 342: case '7':
  4665                           
  4666                           
  4667                           ;2+1dimmmer.c: 343: TMR1H=0xBF; TMR1L=0xF0; T1CONbits.TMR1ON = 1; break;
  4668  0165  30BF               	movlw	191
  4669  0166  2A0E               	goto	L44
  4670  0167                     i1l3098:	
  4671                           ;2+1dimmmer.c: 344: case '8':
  4672                           
  4673                           
  4674                           ;2+1dimmmer.c: 345: TMR1H=0xC1; TMR1L=0x80; T1CONbits.TMR1ON = 1; break;
  4675  0167  30C1               	movlw	193
  4676  0168  2A12               	goto	L45
  4677  0169                     i1l3102:	
  4678                           ;2+1dimmmer.c: 346: case '9':
  4679                           
  4680                           
  4681                           ;2+1dimmmer.c: 347: TMR1H=0xC3; TMR1L=0x10; T1CONbits.TMR1ON = 1; break;
  4682  0169  30C3               	movlw	195
  4683  016A  2A16               	goto	L46
  4684  016B                     i1l3108:	
  4685                           ;2+1dimmmer.c: 350: }
  4686                           
  4687                           ;2+1dimmmer.c: 349: break;
  4688                           
  4689                           ;2+1dimmmer.c: 348: default:
  4690                           
  4691                           
  4692                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4693                           ; Switch size 1, requested type "space"
  4694                           ; Number of cases is 1, Range of values is 0 to 0
  4695                           ; switch strategies available:
  4696                           ; Name         Instructions Cycles
  4697                           ; simple_byte            4     3 (average)
  4698                           ; direct_byte            8     6 (fixed)
  4699                           ; jumptable            260     6 (fixed)
  4700                           ;	Chosen strategy is simple_byte
  4701  016B  0854               	movf	_FAN_SPEED1_1s+1,w
  4702  016C  3A00               	xorlw	0	; case 0
  4703  016D  1903               	skipnz
  4704  016E  2970               	goto	i1l5098
  4705  016F  2A54               	goto	i1l251
  4706  0170                     i1l5098:	
  4707                           
  4708                           ; Switch size 1, requested type "space"
  4709                           ; Number of cases is 10, Range of values is 48 to 57
  4710                           ; switch strategies available:
  4711                           ; Name         Instructions Cycles
  4712                           ; direct_byte           29     9 (fixed)
  4713                           ; simple_byte           31    16 (average)
  4714                           ; jumptable            263     9 (fixed)
  4715                           ;	Chosen strategy is direct_byte
  4716  0170  0853               	movf	_FAN_SPEED1_1s,w
  4717  0171  3ED0               	addlw	-48
  4718  0172  1C03               	skipc
  4719  0173  2A54               	goto	i1l251
  4720  0174  0084               	movwf	4
  4721  0175  300A               	movlw	10
  4722  0176  0204               	subwf	4,w
  4723  0177  1803               	skipnc
  4724  0178  2A54               	goto	i1l251
  4725  0179  3188               	movlp	high i1S5100
  4726  017A  3504               	lslf	4,w
  4727  017B  3E64               	addlw	low i1S5100
  4728  017C  0082               	movwf	2
  4729                           
  4730                           ;2+1dimmmer.c: 351: break;
  4731  017D  2A54               	goto	i1l251
  4732  017E                     i1l3110:	
  4733                           ;2+1dimmmer.c: 355: {
  4734                           ;2+1dimmmer.c: 356: case '0':
  4735                           
  4736                           ;2+1dimmmer.c: 354: switch(FAN_SPEED1_1s)
  4737                           
  4738                           ;2+1dimmmer.c: 352: case '6':
  4739                           
  4740                           
  4741                           ;2+1dimmmer.c: 357: TMR1H=0xC4; TMR1L=0xA0; T1CONbits.TMR1ON = 1; break;
  4742  017E  30C4               	movlw	196
  4743  017F  2A1A               	goto	L47
  4744  0180                     i1l3114:	
  4745                           ;2+1dimmmer.c: 358: case '1':
  4746                           
  4747                           
  4748                           ;2+1dimmmer.c: 359: TMR1H=0xC6; TMR1L=0x30; T1CONbits.TMR1ON = 1; break;
  4749  0180  30C6               	movlw	198
  4750  0181  2A1E               	goto	L48
  4751  0182                     i1l3118:	
  4752                           ;2+1dimmmer.c: 360: case '2':
  4753                           
  4754                           
  4755                           ;2+1dimmmer.c: 361: TMR1H=0xC7; TMR1L=0xC0; T1CONbits.TMR1ON = 1; break;
  4756  0182  30C7               	movlw	199
  4757  0183  2A22               	goto	L49
  4758  0184                     i1l3122:	
  4759                           ;2+1dimmmer.c: 362: case '3':
  4760                           
  4761                           
  4762                           ;2+1dimmmer.c: 363: TMR1H=0xC9; TMR1L=0x50; T1CONbits.TMR1ON = 1; break;
  4763  0184  30C9               	movlw	201
  4764  0185  2A26               	goto	L50
  4765  0186                     i1l3126:	
  4766                           ;2+1dimmmer.c: 364: case '4':
  4767                           
  4768                           
  4769                           ;2+1dimmmer.c: 365: TMR1H=0xCA; TMR1L=0xE0; T1CONbits.TMR1ON = 1; break;
  4770  0186  30CA               	movlw	202
  4771  0187  2A2A               	goto	L20
  4772  0188                     i1l3130:	
  4773                           ;2+1dimmmer.c: 366: case '5':
  4774                           
  4775                           
  4776                           ;2+1dimmmer.c: 367: TMR1H=0xCC; TMR1L=0x70; T1CONbits.TMR1ON = 1; break;
  4777  0188  30CC               	movlw	204
  4778  0189  29D3               	goto	L36
  4779  018A                     i1l3134:	
  4780                           ;2+1dimmmer.c: 368: case '6':
  4781                           
  4782                           
  4783                           ;2+1dimmmer.c: 369: TMR1H=0xCE; TMR1L=0x00; T1CONbits.TMR1ON = 1; break;
  4784  018A  30CE               	movlw	206
  4785  018B  29DB               	goto	L37
  4786  018C                     i1l3140:	
  4787                           ;2+1dimmmer.c: 370: case '7':
  4788                           
  4789                           
  4790                           ;2+1dimmmer.c: 371: TMR1H=0xCF; TMR1L=0x90; T1CONbits.TMR1ON = 1; break;
  4791  018C  30CF               	movlw	207
  4792  018D  29DF               	goto	L38
  4793  018E                     i1l3144:	
  4794                           ;2+1dimmmer.c: 372: case '8':
  4795                           
  4796                           
  4797                           ;2+1dimmmer.c: 373: TMR1H=0xD1; TMR1L=0x20; T1CONbits.TMR1ON = 1; break;
  4798  018E  30D1               	movlw	209
  4799  018F  29E3               	goto	L39
  4800  0190                     i1l3148:	
  4801                           ;2+1dimmmer.c: 374: case '9':
  4802                           
  4803                           
  4804                           ;2+1dimmmer.c: 375: TMR1H=0xD2; TMR1L=0xB0; T1CONbits.TMR1ON = 1; break;
  4805  0190  30D2               	movlw	210
  4806  0191  29E7               	goto	L40
  4807  0192                     i1l3154:	
  4808                           ;2+1dimmmer.c: 378: }
  4809                           
  4810                           ;2+1dimmmer.c: 377: break;
  4811                           
  4812                           ;2+1dimmmer.c: 376: default:
  4813                           
  4814                           
  4815                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4816                           ; Switch size 1, requested type "space"
  4817                           ; Number of cases is 1, Range of values is 0 to 0
  4818                           ; switch strategies available:
  4819                           ; Name         Instructions Cycles
  4820                           ; simple_byte            4     3 (average)
  4821                           ; direct_byte            8     6 (fixed)
  4822                           ; jumptable            260     6 (fixed)
  4823                           ;	Chosen strategy is simple_byte
  4824  0192  0854               	movf	_FAN_SPEED1_1s+1,w
  4825  0193  3A00               	xorlw	0	; case 0
  4826  0194  1903               	skipnz
  4827  0195  2997               	goto	i1l5102
  4828  0196  2A54               	goto	i1l251
  4829  0197                     i1l5102:	
  4830                           
  4831                           ; Switch size 1, requested type "space"
  4832                           ; Number of cases is 10, Range of values is 48 to 57
  4833                           ; switch strategies available:
  4834                           ; Name         Instructions Cycles
  4835                           ; direct_byte           29     9 (fixed)
  4836                           ; simple_byte           31    16 (average)
  4837                           ; jumptable            263     9 (fixed)
  4838                           ;	Chosen strategy is direct_byte
  4839  0197  0853               	movf	_FAN_SPEED1_1s,w
  4840  0198  3ED0               	addlw	-48
  4841  0199  1C03               	skipc
  4842  019A  2A54               	goto	i1l251
  4843  019B  0084               	movwf	4
  4844  019C  300A               	movlw	10
  4845  019D  0204               	subwf	4,w
  4846  019E  1803               	skipnc
  4847  019F  2A54               	goto	i1l251
  4848  01A0  3188               	movlp	high i1S5104
  4849  01A1  3504               	lslf	4,w
  4850  01A2  3E78               	addlw	low i1S5104
  4851  01A3  0082               	movwf	2
  4852                           
  4853                           ;2+1dimmmer.c: 379: break;
  4854  01A4  2A54               	goto	i1l251
  4855  01A5                     i1l3156:	
  4856                           ;2+1dimmmer.c: 383: {
  4857                           ;2+1dimmmer.c: 384: case '0':
  4858                           
  4859                           ;2+1dimmmer.c: 382: switch(FAN_SPEED1_1s)
  4860                           
  4861                           ;2+1dimmmer.c: 380: case '7':
  4862                           
  4863                           
  4864                           ;2+1dimmmer.c: 385: TMR1H=0xD4; TMR1L=0x40; T1CONbits.TMR1ON = 1; break;
  4865  01A5  30D4               	movlw	212
  4866  01A6  29EF               	goto	L41
  4867  01A7                     i1l3160:	
  4868                           ;2+1dimmmer.c: 386: case '1':
  4869                           
  4870                           
  4871                           ;2+1dimmmer.c: 387: TMR1H=0xD5; TMR1L=0xD0; T1CONbits.TMR1ON = 1; break;
  4872  01A7  30D5               	movlw	213
  4873  01A8  2A06               	goto	L42
  4874  01A9                     i1l3164:	
  4875                           ;2+1dimmmer.c: 388: case '2':
  4876                           
  4877                           
  4878                           ;2+1dimmmer.c: 389: TMR1H=0xD7; TMR1L=0x60; T1CONbits.TMR1ON = 1; break;
  4879  01A9  30D7               	movlw	215
  4880  01AA  2A0A               	goto	L43
  4881  01AB                     i1l3168:	
  4882                           ;2+1dimmmer.c: 390: case '3':
  4883                           
  4884                           
  4885                           ;2+1dimmmer.c: 391: TMR1H=0xD8; TMR1L=0xF0; T1CONbits.TMR1ON = 1; break;
  4886  01AB  30D8               	movlw	216
  4887  01AC  2A0E               	goto	L44
  4888  01AD                     i1l3172:	
  4889                           ;2+1dimmmer.c: 392: case '4':
  4890                           
  4891                           
  4892                           ;2+1dimmmer.c: 393: TMR1H=0xDA; TMR1L=0x80; T1CONbits.TMR1ON = 1; break;
  4893  01AD  30DA               	movlw	218
  4894  01AE  2A12               	goto	L45
  4895  01AF                     i1l3176:	
  4896                           ;2+1dimmmer.c: 394: case '5':
  4897                           
  4898                           
  4899                           ;2+1dimmmer.c: 395: TMR1H=0xDC; TMR1L=0x10; T1CONbits.TMR1ON = 1; break;
  4900  01AF  30DC               	movlw	220
  4901  01B0  2A16               	goto	L46
  4902  01B1                     i1l3180:	
  4903                           ;2+1dimmmer.c: 396: case '6':
  4904                           
  4905                           
  4906                           ;2+1dimmmer.c: 397: TMR1H=0xDD; TMR1L=0xA0; T1CONbits.TMR1ON = 1; break;
  4907  01B1  30DD               	movlw	221
  4908  01B2  2A1A               	goto	L47
  4909  01B3                     i1l3184:	
  4910                           ;2+1dimmmer.c: 398: case '7':
  4911                           
  4912                           
  4913                           ;2+1dimmmer.c: 399: TMR1H=0xDF; TMR1L=0x30; T1CONbits.TMR1ON = 1; break;
  4914  01B3  30DF               	movlw	223
  4915  01B4  2A1E               	goto	L48
  4916  01B5                     i1l3188:	
  4917                           ;2+1dimmmer.c: 400: case '8':
  4918                           
  4919                           
  4920                           ;2+1dimmmer.c: 401: TMR1H=0xE0; TMR1L=0xC0; T1CONbits.TMR1ON = 1; break;
  4921  01B5  30E0               	movlw	224
  4922  01B6  2A22               	goto	L49
  4923  01B7                     i1l3192:	
  4924                           ;2+1dimmmer.c: 402: case '9':
  4925                           
  4926                           
  4927                           ;2+1dimmmer.c: 403: TMR1H=0xE2; TMR1L=0x50; T1CONbits.TMR1ON = 1; break;
  4928  01B7  30E2               	movlw	226
  4929  01B8  2A26               	goto	L50
  4930  01B9                     i1l3198:	
  4931                           ;2+1dimmmer.c: 406: }
  4932                           
  4933                           ;2+1dimmmer.c: 405: break;
  4934                           
  4935                           ;2+1dimmmer.c: 404: default:
  4936                           
  4937                           
  4938                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4939                           ; Switch size 1, requested type "space"
  4940                           ; Number of cases is 1, Range of values is 0 to 0
  4941                           ; switch strategies available:
  4942                           ; Name         Instructions Cycles
  4943                           ; simple_byte            4     3 (average)
  4944                           ; direct_byte            8     6 (fixed)
  4945                           ; jumptable            260     6 (fixed)
  4946                           ;	Chosen strategy is simple_byte
  4947  01B9  0854               	movf	_FAN_SPEED1_1s+1,w
  4948  01BA  3A00               	xorlw	0	; case 0
  4949  01BB  1903               	skipnz
  4950  01BC  29BE               	goto	i1l5106
  4951  01BD  2A54               	goto	i1l251
  4952  01BE                     i1l5106:	
  4953                           
  4954                           ; Switch size 1, requested type "space"
  4955                           ; Number of cases is 10, Range of values is 48 to 57
  4956                           ; switch strategies available:
  4957                           ; Name         Instructions Cycles
  4958                           ; direct_byte           29     9 (fixed)
  4959                           ; simple_byte           31    16 (average)
  4960                           ; jumptable            263     9 (fixed)
  4961                           ;	Chosen strategy is direct_byte
  4962  01BE  0853               	movf	_FAN_SPEED1_1s,w
  4963  01BF  3ED0               	addlw	-48
  4964  01C0  1C03               	skipc
  4965  01C1  2A54               	goto	i1l251
  4966  01C2  0084               	movwf	4
  4967  01C3  300A               	movlw	10
  4968  01C4  0204               	subwf	4,w
  4969  01C5  1803               	skipnc
  4970  01C6  2A54               	goto	i1l251
  4971  01C7  3188               	movlp	high i1S5108
  4972  01C8  3504               	lslf	4,w
  4973  01C9  3E8C               	addlw	low i1S5108
  4974  01CA  0082               	movwf	2
  4975                           
  4976                           ;2+1dimmmer.c: 407: break;
  4977  01CB  2A54               	goto	i1l251
  4978  01CC                     i1l3200:	
  4979                           ;2+1dimmmer.c: 411: {
  4980                           ;2+1dimmmer.c: 412: case '0':
  4981                           
  4982                           ;2+1dimmmer.c: 410: switch(FAN_SPEED1_1s)
  4983                           
  4984                           ;2+1dimmmer.c: 408: case '8':
  4985                           
  4986                           
  4987                           ;2+1dimmmer.c: 413: TMR1H=0xE3; TMR1L=0xE0; T1CONbits.TMR1ON = 1; break;
  4988  01CC  30E3               	movlw	227
  4989  01CD  2A2A               	goto	L20
  4990  01CE                     i1l3204:	
  4991                           ;2+1dimmmer.c: 414: case '1':
  4992                           
  4993                           
  4994                           ;2+1dimmmer.c: 415: TMR1H=0xE4; TMR1L=0xA8; T1CONbits.TMR1ON = 1; break;
  4995  01CE  30E4               	movlw	228
  4996  01CF                     L53:	
  4997  01CF  0097               	movwf	23	;volatile
  4998  01D0  30A8               	movlw	168
  4999  01D1  2A2C               	goto	L4
  5000  01D2                     i1l3208:	
  5001                           ;2+1dimmmer.c: 416: case '2':
  5002                           
  5003                           
  5004                           ;2+1dimmmer.c: 417: TMR1H=0xE5; TMR1L=0x70; T1CONbits.TMR1ON = 1; break;
  5005  01D2  30E5               	movlw	229
  5006  01D3                     L36:	
  5007  01D3  0097               	movwf	23	;volatile
  5008  01D4  3070               	movlw	112
  5009  01D5  2A2C               	goto	L4
  5010  01D6                     i1l3212:	
  5011                           ;2+1dimmmer.c: 418: case '3':
  5012                           
  5013                           
  5014                           ;2+1dimmmer.c: 419: TMR1H=0xE6; TMR1L=0x38; T1CONbits.TMR1ON = 1; break;
  5015  01D6  30E6               	movlw	230
  5016  01D7  0097               	movwf	23	;volatile
  5017  01D8  3038               	movlw	56
  5018  01D9  2A2C               	goto	L4
  5019  01DA                     i1l3216:	
  5020                           ;2+1dimmmer.c: 420: case '4':
  5021                           
  5022                           
  5023                           ;2+1dimmmer.c: 421: TMR1H=0xE7; TMR1L=0x00; T1CONbits.TMR1ON = 1; break;
  5024  01DA  30E7               	movlw	231
  5025  01DB                     L37:	
  5026  01DB  0097               	movwf	23	;volatile
  5027  01DC  0196               	clrf	22	;volatile
  5028  01DD  2A2D               	goto	i1l3284
  5029  01DE                     i1l3222:	
  5030                           ;2+1dimmmer.c: 422: case '5':
  5031                           
  5032                           
  5033                           ;2+1dimmmer.c: 423: TMR1H=0xE8; TMR1L=0x90; T1CONbits.TMR1ON = 1; break;
  5034  01DE  30E8               	movlw	232
  5035  01DF                     L38:	
  5036  01DF  0097               	movwf	23	;volatile
  5037  01E0  3090               	movlw	144
  5038  01E1  2A2C               	goto	L4
  5039  01E2                     i1l3226:	
  5040                           ;2+1dimmmer.c: 424: case '6':
  5041                           
  5042                           
  5043                           ;2+1dimmmer.c: 425: TMR1H=0xEA; TMR1L=0x20; T1CONbits.TMR1ON = 1; break;
  5044  01E2  30EA               	movlw	234
  5045  01E3                     L39:	
  5046  01E3  0097               	movwf	23	;volatile
  5047  01E4  3020               	movlw	32
  5048  01E5  2A2C               	goto	L4
  5049  01E6                     i1l3230:	
  5050                           ;2+1dimmmer.c: 426: case '7':
  5051                           
  5052                           
  5053                           ;2+1dimmmer.c: 427: TMR1H=0xEB; TMR1L=0xB0; T1CONbits.TMR1ON = 1; break;
  5054  01E6  30EB               	movlw	235
  5055  01E7                     L40:	
  5056  01E7  0097               	movwf	23	;volatile
  5057  01E8  30B0               	movlw	176
  5058  01E9  2A2C               	goto	L4
  5059  01EA                     i1l3234:	
  5060                           ;2+1dimmmer.c: 428: case '8':
  5061                           
  5062                           
  5063                           ;2+1dimmmer.c: 429: TMR1H=0xEC; TMR1L=0x78; T1CONbits.TMR1ON = 1; break;
  5064  01EA  30EC               	movlw	236
  5065  01EB                     L55:	
  5066  01EB  0097               	movwf	23	;volatile
  5067  01EC  3078               	movlw	120
  5068  01ED  2A2C               	goto	L4
  5069  01EE                     i1l3238:	
  5070                           ;2+1dimmmer.c: 430: case '9':
  5071                           
  5072                           
  5073                           ;2+1dimmmer.c: 431: TMR1H=0xED; TMR1L=0x40; T1CONbits.TMR1ON = 1; break;
  5074  01EE  30ED               	movlw	237
  5075  01EF                     L41:	
  5076  01EF  0097               	movwf	23	;volatile
  5077  01F0  3040               	movlw	64
  5078  01F1  2A2C               	goto	L4
  5079  01F2                     i1l3244:	
  5080                           ;2+1dimmmer.c: 434: }
  5081                           
  5082                           ;2+1dimmmer.c: 433: break;
  5083                           
  5084                           ;2+1dimmmer.c: 432: default:
  5085                           
  5086                           
  5087                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5088                           ; Switch size 1, requested type "space"
  5089                           ; Number of cases is 1, Range of values is 0 to 0
  5090                           ; switch strategies available:
  5091                           ; Name         Instructions Cycles
  5092                           ; simple_byte            4     3 (average)
  5093                           ; direct_byte            8     6 (fixed)
  5094                           ; jumptable            260     6 (fixed)
  5095                           ;	Chosen strategy is simple_byte
  5096  01F2  0854               	movf	_FAN_SPEED1_1s+1,w
  5097  01F3  3A00               	xorlw	0	; case 0
  5098  01F4  1903               	skipnz
  5099  01F5  29F7               	goto	i1l5110
  5100  01F6  2A54               	goto	i1l251
  5101  01F7                     i1l5110:	
  5102                           
  5103                           ; Switch size 1, requested type "space"
  5104                           ; Number of cases is 10, Range of values is 48 to 57
  5105                           ; switch strategies available:
  5106                           ; Name         Instructions Cycles
  5107                           ; direct_byte           29     9 (fixed)
  5108                           ; simple_byte           31    16 (average)
  5109                           ; jumptable            263     9 (fixed)
  5110                           ;	Chosen strategy is direct_byte
  5111  01F7  0853               	movf	_FAN_SPEED1_1s,w
  5112  01F8  3ED0               	addlw	-48
  5113  01F9  1C03               	skipc
  5114  01FA  2A54               	goto	i1l251
  5115  01FB  0084               	movwf	4
  5116  01FC  300A               	movlw	10
  5117  01FD  0204               	subwf	4,w
  5118  01FE  1803               	skipnc
  5119  01FF  2A54               	goto	i1l251
  5120  0200  3188               	movlp	high i1S5112
  5121  0201  3504               	lslf	4,w
  5122  0202  3EA0               	addlw	low i1S5112
  5123  0203  0082               	movwf	2
  5124                           
  5125                           ;2+1dimmmer.c: 435: break;
  5126  0204  2A54               	goto	i1l251
  5127  0205                     i1l3246:	
  5128                           ;2+1dimmmer.c: 439: {
  5129                           ;2+1dimmmer.c: 440: case '0':
  5130                           
  5131                           ;2+1dimmmer.c: 438: switch(FAN_SPEED1_1s)
  5132                           
  5133                           ;2+1dimmmer.c: 436: case '9':
  5134                           
  5135                           
  5136                           ;2+1dimmmer.c: 441: TMR1H=0xEE; TMR1L=0xD0; T1CONbits.TMR1ON = 1; break;
  5137  0205  30EE               	movlw	238
  5138  0206                     L42:	
  5139  0206  0097               	movwf	23	;volatile
  5140  0207  30D0               	movlw	208
  5141  0208  2A2C               	goto	L4
  5142  0209                     i1l3250:	
  5143                           ;2+1dimmmer.c: 442: case '1':
  5144                           
  5145                           
  5146                           ;2+1dimmmer.c: 443: TMR1H=0xF0; TMR1L=0x60; T1CONbits.TMR1ON = 1; break;
  5147  0209  30F0               	movlw	240
  5148  020A                     L43:	
  5149  020A  0097               	movwf	23	;volatile
  5150  020B  3060               	movlw	96
  5151  020C  2A2C               	goto	L4
  5152  020D                     i1l3254:	
  5153                           ;2+1dimmmer.c: 444: case '2':
  5154                           
  5155                           
  5156                           ;2+1dimmmer.c: 445: TMR1H=0xF1; TMR1L=0xF0; T1CONbits.TMR1ON = 1; break;
  5157  020D  30F1               	movlw	241
  5158  020E                     L44:	
  5159  020E  0097               	movwf	23	;volatile
  5160  020F  30F0               	movlw	240
  5161  0210  2A2C               	goto	L4
  5162  0211                     i1l3258:	
  5163                           ;2+1dimmmer.c: 446: case '3':
  5164                           
  5165                           
  5166                           ;2+1dimmmer.c: 447: TMR1H=0xF3; TMR1L=0x80; T1CONbits.TMR1ON = 1; break;
  5167  0211  30F3               	movlw	243
  5168  0212                     L45:	
  5169  0212  0097               	movwf	23	;volatile
  5170  0213  3080               	movlw	128
  5171  0214  2A2C               	goto	L4
  5172  0215                     i1l3262:	
  5173                           ;2+1dimmmer.c: 448: case '4':
  5174                           
  5175                           
  5176                           ;2+1dimmmer.c: 449: TMR1H=0xF5; TMR1L=0x10; T1CONbits.TMR1ON = 1; break;
  5177  0215  30F5               	movlw	245
  5178  0216                     L46:	
  5179  0216  0097               	movwf	23	;volatile
  5180  0217  3010               	movlw	16
  5181  0218  2A2C               	goto	L4
  5182  0219                     i1l3266:	
  5183                           ;2+1dimmmer.c: 450: case '5':
  5184                           
  5185                           
  5186                           ;2+1dimmmer.c: 451: TMR1H=0xF6; TMR1L=0xA0; T1CONbits.TMR1ON = 1; break;
  5187  0219  30F6               	movlw	246
  5188  021A                     L47:	
  5189  021A  0097               	movwf	23	;volatile
  5190  021B  30A0               	movlw	160
  5191  021C  2A2C               	goto	L4
  5192  021D                     i1l3270:	
  5193                           ;2+1dimmmer.c: 452: case '6':
  5194                           
  5195                           
  5196                           ;2+1dimmmer.c: 453: TMR1H=0xF8; TMR1L=0x30; T1CONbits.TMR1ON = 1; break;
  5197  021D  30F8               	movlw	248
  5198  021E                     L48:	
  5199  021E  0097               	movwf	23	;volatile
  5200  021F  3030               	movlw	48
  5201  0220  2A2C               	goto	L4
  5202  0221                     i1l3274:	
  5203                           ;2+1dimmmer.c: 454: case '7':
  5204                           
  5205                           
  5206                           ;2+1dimmmer.c: 455: TMR1H=0xF9; TMR1L=0xC0; T1CONbits.TMR1ON = 1; break;
  5207  0221  30F9               	movlw	249
  5208  0222                     L49:	
  5209  0222  0097               	movwf	23	;volatile
  5210  0223  30C0               	movlw	192
  5211  0224  2A2C               	goto	L4
  5212  0225                     i1l3278:	
  5213                           ;2+1dimmmer.c: 456: case '8':
  5214                           
  5215                           
  5216                           ;2+1dimmmer.c: 457: TMR1H=0xFB; TMR1L=0x50; T1CONbits.TMR1ON = 1; break;
  5217  0225  30FB               	movlw	251
  5218  0226                     L50:	
  5219  0226  0097               	movwf	23	;volatile
  5220  0227  3050               	movlw	80
  5221  0228  2A2C               	goto	L4
  5222  0229                     i1l3282:	
  5223                           ;2+1dimmmer.c: 458: case '9':
  5224                           
  5225                           
  5226                           ;2+1dimmmer.c: 459: TMR1H=0xFC; TMR1L=0xE0; T1CONbits.TMR1ON = 1; break;
  5227  0229  30FC               	movlw	252
  5228  022A                     L20:	
  5229  022A  0097               	movwf	23	;volatile
  5230  022B  30E0               	movlw	224
  5231  022C                     L4:	
  5232  022C  0096               	movwf	22	;volatile
  5233  022D                     i1l3284:	
  5234  022D  1418               	bsf	24,0	;volatile
  5235                           
  5236                           ;2+1dimmmer.c: 462: }
  5237                           
  5238                           ;2+1dimmmer.c: 461: break;
  5239                           
  5240                           ;2+1dimmmer.c: 460: default:
  5241  022E  2A54               	goto	i1l251
  5242  022F                     i1l3288:	
  5243                           
  5244                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5245                           ; Switch size 1, requested type "space"
  5246                           ; Number of cases is 1, Range of values is 0 to 0
  5247                           ; switch strategies available:
  5248                           ; Name         Instructions Cycles
  5249                           ; simple_byte            4     3 (average)
  5250                           ; direct_byte            8     6 (fixed)
  5251                           ; jumptable            260     6 (fixed)
  5252                           ;	Chosen strategy is simple_byte
  5253  022F  0854               	movf	_FAN_SPEED1_1s+1,w
  5254  0230  3A00               	xorlw	0	; case 0
  5255  0231  1903               	skipnz
  5256  0232  2A34               	goto	i1l5114
  5257  0233  2A54               	goto	i1l251
  5258  0234                     i1l5114:	
  5259                           
  5260                           ; Switch size 1, requested type "space"
  5261                           ; Number of cases is 10, Range of values is 48 to 57
  5262                           ; switch strategies available:
  5263                           ; Name         Instructions Cycles
  5264                           ; direct_byte           29     9 (fixed)
  5265                           ; simple_byte           31    16 (average)
  5266                           ; jumptable            263     9 (fixed)
  5267                           ;	Chosen strategy is direct_byte
  5268  0234  0853               	movf	_FAN_SPEED1_1s,w
  5269  0235  3ED0               	addlw	-48
  5270  0236  1C03               	skipc
  5271  0237  2A54               	goto	i1l251
  5272  0238  0084               	movwf	4
  5273  0239  300A               	movlw	10
  5274  023A  0204               	subwf	4,w
  5275  023B  1803               	skipnc
  5276  023C  2A54               	goto	i1l251
  5277  023D  3188               	movlp	high i1S5116
  5278  023E  3504               	lslf	4,w
  5279  023F  3EB4               	addlw	low i1S5116
  5280  0240  0082               	movwf	2
  5281                           
  5282                           ;2+1dimmmer.c: 466: }
  5283                           
  5284                           ;2+1dimmmer.c: 465: break;
  5285                           
  5286                           ;2+1dimmmer.c: 464: default:
  5287                           
  5288                           ;2+1dimmmer.c: 463: break;
  5289  0241  2A54               	goto	i1l251
  5290  0242                     i1l3292:	
  5291                           
  5292                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5293                           ; Switch size 1, requested type "space"
  5294                           ; Number of cases is 1, Range of values is 0 to 0
  5295                           ; switch strategies available:
  5296                           ; Name         Instructions Cycles
  5297                           ; simple_byte            4     3 (average)
  5298                           ; direct_byte            8     6 (fixed)
  5299                           ; jumptable            260     6 (fixed)
  5300                           ;	Chosen strategy is simple_byte
  5301  0242  0856               	movf	_FAN_SPEED1_10s+1,w
  5302  0243  3A00               	xorlw	0	; case 0
  5303  0244  1903               	skipnz
  5304  0245  2A47               	goto	i1l5118
  5305  0246  2A54               	goto	i1l251
  5306  0247                     i1l5118:	
  5307                           
  5308                           ; Switch size 1, requested type "space"
  5309                           ; Number of cases is 10, Range of values is 48 to 57
  5310                           ; switch strategies available:
  5311                           ; Name         Instructions Cycles
  5312                           ; direct_byte           29     9 (fixed)
  5313                           ; simple_byte           31    16 (average)
  5314                           ; jumptable            263     9 (fixed)
  5315                           ;	Chosen strategy is direct_byte
  5316  0247  0855               	movf	_FAN_SPEED1_10s,w
  5317  0248  3ED0               	addlw	-48
  5318  0249  1C03               	skipc
  5319  024A  2A54               	goto	i1l251
  5320  024B  0084               	movwf	4
  5321  024C  300A               	movlw	10
  5322  024D  0204               	subwf	4,w
  5323  024E  1803               	skipnc
  5324  024F  2A54               	goto	i1l251
  5325  0250  3188               	movlp	high i1S5120
  5326  0251  3504               	lslf	4,w
  5327  0252  3EC8               	addlw	low i1S5120
  5328  0253  0082               	movwf	2
  5329  0254                     i1l251:	
  5330                           
  5331                           ;2+1dimmmer.c: 467: }
  5332                           ;2+1dimmmer.c: 468: PIR1bits.CCP1IF = 0;
  5333  0254  1111               	bcf	17,2	;volatile
  5334  0255                     i1l395:	
  5335  0255  0871               	movf	??_isr+1,w
  5336  0256  00FF               	movwf	127
  5337  0257  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5338  0258  0009               	retfie
  5339  0259                     __end_of_isr:	
  5340  007E                     btemp	set	126	;btemp
  5341  007E                     int$flags	set	126
  5342  007E                     wtemp0	set	126
  5343                           
  5344                           	psect	swtext1
  5345  0800                     __pswtext1:	
  5346  0800                     i1S5080:	
  5347  0800  3180  287B         	ljmp	i1l2840
  5348  0802  3180  287D         	ljmp	i1l2844
  5349  0804  3180  287F         	ljmp	i1l2848
  5350  0806  3180  2883         	ljmp	i1l2852
  5351  0808  3180  2887         	ljmp	i1l2856
  5352  080A  3180  2889         	ljmp	i1l2860
  5353  080C  3180  288B         	ljmp	i1l2864
  5354  080E  3180  288D         	ljmp	i1l2870
  5355  0810  3180  2891         	ljmp	i1l2874
  5356  0812  3180  2892         	ljmp	i1l2878
  5357                           
  5358                           	psect	swtext2
  5359  0814                     __pswtext2:	
  5360  0814                     i1S5084:	
  5361  0814  3180  28A9         	ljmp	i1l2886
  5362  0816  3180  28AB         	ljmp	i1l2890
  5363  0818  3180  28AF         	ljmp	i1l2894
  5364  081A  3180  28B1         	ljmp	i1l2898
  5365  081C  3180  28B3         	ljmp	i1l2902
  5366  081E  3180  28B5         	ljmp	i1l2906
  5367  0820  3180  28B9         	ljmp	i1l2910
  5368  0822  3180  28BB         	ljmp	i1l2914
  5369  0824  3180  28BF         	ljmp	i1l2918
  5370  0826  3180  28C1         	ljmp	i1l2922
  5371                           
  5372                           	psect	swtext3
  5373  0828                     __pswtext3:	
  5374  0828                     i1S5088:	
  5375  0828  3180  28D8         	ljmp	i1l2930
  5376  082A  3180  28DA         	ljmp	i1l2934
  5377  082C  3180  28DE         	ljmp	i1l2938
  5378  082E  3180  28E0         	ljmp	i1l2942
  5379  0830  3180  28E4         	ljmp	i1l2946
  5380  0832  3180  28E6         	ljmp	i1l2950
  5381  0834  3180  28EA         	ljmp	i1l2954
  5382  0836  3180  28EC         	ljmp	i1l2958
  5383  0838  3180  28F0         	ljmp	i1l2962
  5384  083A  3180  28F2         	ljmp	i1l2966
  5385                           
  5386                           	psect	swtext4
  5387  083C                     __pswtext4:	
  5388  083C                     i1S5092:	
  5389  083C  3181  2909         	ljmp	i1l2974
  5390  083E  3181  290B         	ljmp	i1l2978
  5391  0840  3181  290D         	ljmp	i1l2982
  5392  0842  3181  290F         	ljmp	i1l2986
  5393  0844  3181  2911         	ljmp	i1l2990
  5394  0846  3181  2913         	ljmp	i1l2996
  5395  0848  3181  2915         	ljmp	i1l3000
  5396  084A  3181  2917         	ljmp	i1l3004
  5397  084C  3181  2919         	ljmp	i1l3008
  5398  084E  3181  291B         	ljmp	i1l3012
  5399                           
  5400                           	psect	swtext5
  5401  0850                     __pswtext5:	
  5402  0850                     i1S5096:	
  5403  0850  3181  2930         	ljmp	i1l3020
  5404  0852  3181  2932         	ljmp	i1l3024
  5405  0854  3181  2934         	ljmp	i1l3028
  5406  0856  3181  2936         	ljmp	i1l3032
  5407  0858  3181  2938         	ljmp	i1l3036
  5408  085A  3181  293A         	ljmp	i1l3040
  5409  085C  3181  293C         	ljmp	i1l3044
  5410  085E  3181  293E         	ljmp	i1l3048
  5411  0860  3181  2940         	ljmp	i1l3052
  5412  0862  3181  2942         	ljmp	i1l3056
  5413                           
  5414                           	psect	swtext6
  5415  0864                     __pswtext6:	
  5416  0864                     i1S5100:	
  5417  0864  3181  2957         	ljmp	i1l3064
  5418  0866  3181  2959         	ljmp	i1l3070
  5419  0868  3181  295B         	ljmp	i1l3074
  5420  086A  3181  295D         	ljmp	i1l3078
  5421  086C  3181  295F         	ljmp	i1l3082
  5422  086E  3181  2961         	ljmp	i1l3086
  5423  0870  3181  2963         	ljmp	i1l3090
  5424  0872  3181  2965         	ljmp	i1l3094
  5425  0874  3181  2967         	ljmp	i1l3098
  5426  0876  3181  2969         	ljmp	i1l3102
  5427                           
  5428                           	psect	swtext7
  5429  0878                     __pswtext7:	
  5430  0878                     i1S5104:	
  5431  0878  3181  297E         	ljmp	i1l3110
  5432  087A  3181  2980         	ljmp	i1l3114
  5433  087C  3181  2982         	ljmp	i1l3118
  5434  087E  3181  2984         	ljmp	i1l3122
  5435  0880  3181  2986         	ljmp	i1l3126
  5436  0882  3181  2988         	ljmp	i1l3130
  5437  0884  3181  298A         	ljmp	i1l3134
  5438  0886  3181  298C         	ljmp	i1l3140
  5439  0888  3181  298E         	ljmp	i1l3144
  5440  088A  3181  2990         	ljmp	i1l3148
  5441                           
  5442                           	psect	swtext8
  5443  088C                     __pswtext8:	
  5444  088C                     i1S5108:	
  5445  088C  3181  29A5         	ljmp	i1l3156
  5446  088E  3181  29A7         	ljmp	i1l3160
  5447  0890  3181  29A9         	ljmp	i1l3164
  5448  0892  3181  29AB         	ljmp	i1l3168
  5449  0894  3181  29AD         	ljmp	i1l3172
  5450  0896  3181  29AF         	ljmp	i1l3176
  5451  0898  3181  29B1         	ljmp	i1l3180
  5452  089A  3181  29B3         	ljmp	i1l3184
  5453  089C  3181  29B5         	ljmp	i1l3188
  5454  089E  3181  29B7         	ljmp	i1l3192
  5455                           
  5456                           	psect	swtext9
  5457  08A0                     __pswtext9:	
  5458  08A0                     i1S5112:	
  5459  08A0  3181  29CC         	ljmp	i1l3200
  5460  08A2  3181  29CE         	ljmp	i1l3204
  5461  08A4  3181  29D2         	ljmp	i1l3208
  5462  08A6  3181  29D6         	ljmp	i1l3212
  5463  08A8  3181  29DA         	ljmp	i1l3216
  5464  08AA  3181  29DE         	ljmp	i1l3222
  5465  08AC  3181  29E2         	ljmp	i1l3226
  5466  08AE  3181  29E6         	ljmp	i1l3230
  5467  08B0  3181  29EA         	ljmp	i1l3234
  5468  08B2  3181  29EE         	ljmp	i1l3238
  5469                           
  5470                           	psect	swtext10
  5471  08B4                     __pswtext10:	
  5472  08B4                     i1S5116:	
  5473  08B4  3182  2A05         	ljmp	i1l3246
  5474  08B6  3182  2A09         	ljmp	i1l3250
  5475  08B8  3182  2A0D         	ljmp	i1l3254
  5476  08BA  3182  2A11         	ljmp	i1l3258
  5477  08BC  3182  2A15         	ljmp	i1l3262
  5478  08BE  3182  2A19         	ljmp	i1l3266
  5479  08C0  3182  2A1D         	ljmp	i1l3270
  5480  08C2  3182  2A21         	ljmp	i1l3274
  5481  08C4  3182  2A25         	ljmp	i1l3278
  5482  08C6  3182  2A29         	ljmp	i1l3282
  5483                           
  5484                           	psect	swtext11
  5485  08C8                     __pswtext11:	
  5486  08C8                     i1S5120:	
  5487  08C8  3180  2896         	ljmp	i1l2884
  5488  08CA  3180  28C5         	ljmp	i1l2928
  5489  08CC  3180  28F6         	ljmp	i1l2972
  5490  08CE  3181  291D         	ljmp	i1l3018
  5491  08D0  3181  2944         	ljmp	i1l3062
  5492  08D2  3181  296B         	ljmp	i1l3108
  5493  08D4  3181  2992         	ljmp	i1l3154
  5494  08D6  3181  29B9         	ljmp	i1l3198
  5495  08D8  3181  29F2         	ljmp	i1l3244
  5496  08DA  3182  2A2F         	ljmp	i1l3288


Data Sizes:
    Strings     0
    Constant    0
    Data        132
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     37      66
    BANK1            80      0      76
    BANK2            80      0      68
    BANK3            80     16      16
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            32      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(1) Largest target is 2
		 -> ACTION@FanSpeedString(BANK0[2]), ACTION@SwNumString(BANK0[2]), 

    writeUART@str2Write	PTR unsigned char  size(1) Largest target is 26
		 -> st(BANK1[26]), 


Critical Paths under _main in COMMON

    _ACTION->_atoi
    _atoi->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ACTION
    _ACTION->_atoi

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    4634
                                             31 BANK0      6     6      0
                                              0 BANK3     16    16      0
                             _ACTION
                         _copy_frame
                     _periperal_init
                        _pin_manager
                          _writeUART
 ---------------------------------------------------------------------------------
 (1) _pin_manager                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _periperal_init                                       0     0      0       0
                    _CCP1_Initialize
                    _CCP3_Initialize
                    _CCP9_Initialize
                  _EUSART_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP9_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _copy_frame                                           9     5      4     461
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _ACTION                                              25    19      6    3063
                                              6 BANK0     25    19      6
                               _atoi
                          _writeUART
 ---------------------------------------------------------------------------------
 (1) _writeUART                                            4     4      0     281
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2     759
                                              8 COMMON     2     0      2
                                              0 BANK0      6     6      0
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     266
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ACTION
     _atoi
       ___wmul
       _isdigit
     _writeUART
   _copy_frame
   _periperal_init
     _CCP1_Initialize
     _CCP3_Initialize
     _CCP9_Initialize
     _EUSART_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
     _TMR5_Initialize
     _TMR6_Initialize
   _pin_manager
   _writeUART

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      EE       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     25      42       6       82.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4C       8       95.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      44      10       85.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50     10      10      12       20.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            20      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               20      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
DATA                 0      0      EE      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Jul 07 16:21:31 2018

   __size_of_periperal_init 001E                           _i 005D                           pc 0002  
               __CFG_CP$OFF 0000                          _M1 0049                          _M2 0047  
                        _M3 0045                          _M4 00E0                          _M5 00DE  
                        _ak 0059                          _pk 005B                          _tk 0057  
                        _st 00C4         ___wmul@multiplicand 0074     __end_of_CCP1_Initialize 0FDC  
                       l500 07CD                         l452 064C                         l454 0661  
                       l438 0758                         l447 05FE                         l449 060B  
                       l459 07E8                         _GIE 005F                         _RA2 0062  
                       _RA3 0063                         _RA5 0065                         _RF0 1460  
                       _RF1 1461                         _RF2 1462                         _RF3 1463  
                       _RE5 0085                         _PR2 001B                         _man 0060  
                       _isr 0004             _TMR2_Initialize 0FA7                __CFG_BORV$LO 0000  
                       wreg 0009                __CFG_FOSC$HS 0000                __CFG_LVP$OFF 0000  
                      l4102 0FE8                        l4220 0670                        l4212 07E3  
                      l4300 0783                        l4216 066B                        l4082 07C7  
                      l4234 068D                        l4218 0664                        l4244 06C8  
                      l4236 0691                        l4228 0686                        l4238 06B8  
                      l4350 05FA                        l4352 0605                        l4504 0421  
                      l4362 062C                        l4354 0612                        l4522 0456  
                      l4418 02D7                        l5076 0656                        l4364 062F  
                      l4356 0618                        l4372 0651                        l4612 0559  
                      l4540 0489                        l4452 033D                        l4444 0323  
                      l4518 044D                        l4462 035C                        l4470 037C  
                      l4536 0482                        l4472 0382                        l4554 04B6  
                      l4490 03D5                        l4572 04EC                        l4484 03B8  
                      l4492 03D8                        l4558 04BF                        l4592 0522  
                      l4576 04F3                        l4498 03E6                        l4596 052A  
                      ?_isr 0070                        u2010 062A                        u2235 03B6  
                      u2245 03D3                        u2095 0302                        u1805 07CE  
                      u2517 0296                        u1815 07D3                        u2527 0386  
                      u2537 0392                        u2547 039E                        u1935 0762  
                      u1960 0603                        _PEIE 005E                        u1980 0610  
                      _RCIF 008D                        _TMR2 001A                        _TMR4 0415  
                      _TMR6 041C                        _WPUE 0210                        _WPUG 048D  
              __CFG_WRT$OFF 0000           ACTION@SwNumString 0037                        _atoi 0662  
         writeUART@Tx_count 0073                        _main 0290                        _copy 0120  
                      _name 00A0                        fsr0h 0005                        fsr1h 0007  
                      indf0 0000                        fsr0l 0004                        indf1 0001  
                      fsr1l 0006                        btemp 007E                        start 0259  
             __CFG_IESO$OFF 0000             _TMR3_Initialize 0FB1                       ??_isr 0070  
              main@end_flag 01AA                       ?_atoi 0078     __end_of_CCP3_Initialize 0F9D  
                     ?_main 0070               __CFG_WDTE$OFF 0000                       _T1CON 0018  
                     _T2CON 001C                       _T3CON 0413                       _T4CON 0417  
                     _T5CON 041A                       _T6CON 041E                       i1l232 0016  
                     i1l241 004C                       i1l251 0254                       i1l235 0041  
                     i1l244 0052                       i1l229 0010                       i1l238 0047  
                     i1l247 0061                       i1l395 0255                       _TMR1H 0017  
                     _TMR3H 0412                       _TMR1L 0016                       _TMR3L 0411  
                     _TMR5H 0419                       _TMR5L 0418             _TMR4_Initialize 0F81  
            __CFG_FCMEN$OFF 0000             __end_of_isdigit 0FEA                       atoi@a 0023  
                     atoi@s 0025                       main@k 01AE                 copy_frame@k 0022  
   __end_of_TMR1_Initialize 0FD0              __CFG_BOREN$OFF 0000                       status 0003  
                     wtemp0 007E             _TMR5_Initialize 0FBB              __CFG_MCLRE$OFF 0000  
           __initialization 025B                __end_of_atoi 06CD                __end_of_main 0560  
   __end_of_TMR2_Initialize 0FB1              __CFG_LPBOR$OFF 0000                      ??_atoi 0020  
                    ??_main 003F            ?_CCP1_Initialize 0070                ?_pin_manager 0070  
           _TMR6_Initialize 0F8A             ACTION@sw_status 0027             _CCP9_Initialize 0F9D  
                    i1S5100 0864                      i1S5120 08C8                      i1S5112 08A0  
                    i1S5104 0878                      i1S5116 08B4                      i1S5108 088C  
                    i1S5080 0800                      i1S5092 083C                      i1S5084 0814  
                    i1S5096 0850                      i1S5088 0828                      _ACTION 0560  
                    _CCPR1H 0292                      _CCPR3H 0312                      _CCPR1L 0291  
                    _CCPR3L 0311                      _CCPR9H 061B                      _CCPR9L 061A  
        ACTION@speed_bitLow 0029                      _ANSELA 018C                      _ANSELE 0190  
                    _ANSELF 040C                      _ANSELG 040D                      _T1GCON 0019  
                    _T3GCON 0414                      _T5GCON 041B                      _RC1REG 0199  
                    _RC1STA 019D                      i1l3000 0115                      i1l3020 0130  
                    i1l3012 011B                      i1l3004 0117                      i1l3110 017E  
                    i1l3102 0169                      i1l3200 01CC                      i1l3040 013A  
                    i1l3032 0136                      i1l3024 0132                      i1l3008 0119  
                    i1l3130 0188                      i1l3122 0184                      i1l3114 0180  
                    i1l3018 011D                      i1l3212 01D6                      i1l3204 01CE  
                    i1l3140 018C                      i1l3108 016B                      i1l3052 0140  
                    i1l3044 013C                      i1l3036 0138                      i1l3028 0134  
                    u120_25 0036                      i1l3230 01E6                      i1l3222 01DE  
                    i1l3134 018A                      i1l3126 0186                      i1l3118 0182  
                    i1l3070 0159                      i1l3062 0144                      i1l3216 01DA  
                    i1l3208 01D2                      i1l3160 01A7                      i1l3144 018E  
                    i1l3064 0157                      i1l3056 0142                      i1l3048 013E  
                    i1l3250 0209                      i1l3234 01EA                      i1l3226 01E2  
                    i1l3154 0192                      i1l3090 0163                      i1l3082 015F  
                    i1l3074 015B                      i1l3244 01F2                      i1l3180 01B1  
                    i1l3172 01AD                      i1l3164 01A9                      i1l3156 01A5  
                    i1l3148 0190                      i1l3270 021D                      i1l3262 0215  
                    i1l3254 020D                      i1l3246 0205                      i1l5110 01F7  
                    i1l3238 01EE                      i1l5102 0197                      i1l3094 0165  
                    i1l3086 0161                      i1l3078 015D                      i1l3192 01B7  
                    i1l3184 01B3                      i1l3176 01AF                      i1l3168 01AB  
                    i1l5114 0234                      i1l3282 0229                      i1l3274 0221  
                    i1l3266 0219                      i1l3258 0211                      i1l5106 01BE  
                    i1l3098 0167                      i1l3284 022D                      i1l3188 01B5  
                    i1l3292 0242     __end_of_TMR3_Initialize 0FBB                      i1l5118 0247  
                    i1l3278 0225                      i1l3198 01B9                      i1l2910 00B9  
                    i1l2902 00B3                      i1l2814 0058                      i1l3288 022F  
                    i1l2840 007B                      i1l5090 0122                      i1l2930 00D8  
                    i1l5082 00CA                      i1l2922 00C1                      i1l2914 00BB  
                    i1l2906 00B5                      i1l2860 0089                      i1l2852 0083  
                    i1l2844 007D                      i1l2828 006D                      i1l5094 0149  
                    i1l5086 00FB                      i1l2950 00E6                      i1l2942 00E0  
                    i1l2934 00DA                      i1l2918 00BF                      i1l5078 009B  
                    i1l2870 008D                      i1l2928 00C5                      i1l2864 008B  
                    i1l2856 0087                      i1l2848 007F                      i1l5098 0170  
                    i1l2962 00F0                      i1l2954 00EA                      i1l2946 00E4  
                    i1l2938 00DE                      i1l2890 00AB                      i1l2874 0091  
                    i1l2794 0019                      i1l2972 00F6                      i1l2884 0096  
                    i1l2990 0111                      i1l2982 010D                      i1l2974 0109  
                    i1l2966 00F2                      i1l2958 00EC                      i1l2894 00AF  
                    i1l2886 00A9                      i1l2878 0092                      i1l2986 010F  
                    i1l2978 010B                      i1l2898 00B1                      i1l2996 0113  
                    _TX1REG 019A                      _TX1STA 019E              _FAN_SPEED1_10s 0055  
            _FAN_SPEED2_10s 0051              _FAN_SPEED3_10s 00E8              __CFG_PWRTE$OFF 0000  
            _periperal_init 07A7                      ___wmul 07C5      main@RX_CHK_FLAG_start1 01A0  
    main@RX_CHK_FLAG_start2 01A2     __end_of_TMR4_Initialize 0F8A          writeUART@str2Write 0075  
          ?_CCP3_Initialize 0070                copy_frame@sw 0020        ACTION@Switch_Num_10s 0034  
                 ??_isdigit 0072            ?_TMR1_Initialize 0070     __end_of_TMR5_Initialize 0FC5  
   __end_of__initialization 028C      __end_of_periperal_init 07C5              __pcstackCOMMON 0070  
      ACTION@child_lock_num 0032                __pidataBANK0 0002                __pidataBANK1 0711  
              __pidataBANK2 06CD            ?_TMR2_Initialize 0070     __end_of_TMR6_Initialize 0F93  
   __end_of_CCP9_Initialize 0FA7                     ?_ACTION 0026                  __pbssBANK0 0045  
                __pbssBANK1 00DE            ?_TMR3_Initialize 0070             __CFG_VCAPEN$OFF 0000  
                _child_LOCK 0144             ?_periperal_init 0070                  __pmaintext 0290  
     ACTION@response_starts 003B                     ?___wmul 0072                  __pintentry 0004  
                   _CCP1CON 0293                     _CCP3CON 0313                     _CCP9CON 061C  
       ACTION@speed_bitHigh 0028            ?_TMR4_Initialize 0070                     _SP1BRGH 019C  
                   _SP1BRGL 019B        __size_of_pin_manager 0020                  __pswtext10 08B4  
                __pswtext11 08C8             __size_of_ACTION 0102                     _TX_FLAG 004F  
          ?_TMR5_Initialize 0070                  _copy_frame 074F          __size_of_writeUART 0019  
              ACTION@parent 002A                   _FAN_FLAG1 004D                   _FAN_FLAG2 00E4  
                 _FAN_FLAG3 00E2             __size_of___wmul 001B             __CFG_STVREN$OFF 0000  
          ?_TMR6_Initialize 0070                     _dimmer1 005F                     _dimmer2 007B  
                   _dimmer3 007A                     __ptext1 0787                     __ptext2 07A7  
                   __ptext3 0F8A                     __ptext4 0FBB                     __ptext5 0F81  
                   __ptext6 0FB1                     __ptext7 0FA7                     __ptext8 0FC5  
                   __ptext9 0FEA                   _T1CONbits 0018            ?_CCP9_Initialize 0070  
                 _T2CONbits 001C                     _isdigit 0FDC                __size_of_isr 0255  
                 _COPY_FLAG 004B                     clrloop0 0F7C        end_of_initialization 028C  
             copy_frame@end 0074                     init_ram 07F9                     initloop 07FA  
         _EUSART_Initialize 0FEA              ACTION@FanSpeed 002E          ?_EUSART_Initialize 0070  
            main@start_flag 01A8         ??_EUSART_Initialize 0072           __end_of_writeUART 07F9  
                 _TRISAbits 008C                   _TRISCbits 008E                   _TRISEbits 0090  
                 _TRISFbits 030C                   _TRISGbits 030D    __size_of_CCP1_Initialize 000C  
            __end_of_ACTION 0662   __end_of_EUSART_Initialize 1000                 ?_copy_frame 0072  
            ACTION@children 0030              __end_of___wmul 07E0        main@RX_CHK_FLAG_end1 01A4  
      main@RX_CHK_FLAG_end2 01A6         start_initialization 025B                 __end_of_isr 0259  
                  ??_ACTION 002C    __size_of_CCP3_Initialize 000A            ??_periperal_init 0072  
             _FAN_SPEED1_1s 0053               _FAN_SPEED2_1s 00EA               _FAN_SPEED3_1s 00E6  
  __size_of_TMR1_Initialize 000B                    ??___wmul 0076                 __pdataBANK0 0060  
               __pdataBANK1 00A0                 __pdataBANK2 0120         ACTION@Switch_Num_1s 0026  
       __size_of_copy_frame 0038                 __pbssCOMMON 007A                   ___latbits 0002  
             __pcstackBANK0 0020               __pcstackBANK3 01A0    __size_of_TMR2_Initialize 000A  
__size_of_EUSART_Initialize 0016           ??_CCP1_Initialize 0072    __size_of_TMR3_Initialize 000A  
                 __pswtext1 0800                   __pswtext2 0814                   __pswtext3 0828  
                 __pswtext4 083C                   __pswtext5 0850                   __pswtext6 0864  
                 __pswtext7 0878                   __pswtext8 088C                   __pswtext9 08A0  
             ??_pin_manager 0072                 ACTION@SwNum 0039        ACTION@finalFrameStat 002B  
                  _BAUD1CON 019F                    ?_isdigit 0070    __size_of_TMR4_Initialize 0009  
      ACTION@FanSpeedString 0035              ___wmul@product 0076                   clear_ram0 0F7B  
         ??_CCP3_Initialize 0072                    _PIE1bits 0091                    _PIE3bits 0093  
                  _PIE4bits 0094                    _PIR1bits 0011                    _PIR3bits 0013  
                  _PIR4bits 0014    __size_of_TMR5_Initialize 000A           ??_TMR1_Initialize 0072  
         ___wmul@multiplier 0072                   main@k_582 01AC                   _writeUART 07E0  
  __size_of_TMR6_Initialize 0009         __end_of_pin_manager 07A7    __size_of_CCP9_Initialize 000A  
              ??_copy_frame 0076           ??_TMR2_Initialize 0072             copy_frame@start 0072  
       ACTION@switch_status 003D           ??_TMR3_Initialize 0072                 _isdigit$832 0072  
        __end_of_copy_frame 0787            __size_of_isdigit 000E                  ?_writeUART 0070  
                  __ptext10 0F9D                    __ptext11 0F93                    __ptext12 0FD0  
                  __ptext13 074F                    __ptext14 0560                    __ptext15 07E0  
                  __ptext16 0662                    __ptext17 0FDC                    __ptext18 07C5  
         ??_TMR4_Initialize 0072               __size_of_atoi 006B               __size_of_main 02D0  
                _RC1STAbits 019D                    int$flags 007E                    atoi@sign 0022  
         ??_TMR5_Initialize 0072                 _pin_manager 0787             _CCP1_Initialize 0FD0  
                  isdigit@c 0073                    intlevel1 0000           ??_TMR6_Initialize 0072  
         __CFG_CLKOUTEN$OFF 0000           ??_CCP9_Initialize 0072                 ??_writeUART 0072  
           _CCP3_Initialize 0F93                  _TX1STAbits 019E             _TMR1_Initialize 0FC5  

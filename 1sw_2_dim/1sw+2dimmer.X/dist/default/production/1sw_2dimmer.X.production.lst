

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Oct 05 13:27:17 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1526
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	swtext1,local,class=CONST,delta=2
    42                           	psect	swtext2,local,class=CONST,delta=2
    43                           	psect	swtext3,local,class=CONST,delta=2
    44                           	psect	swtext4,local,class=CONST,delta=2
    45                           	psect	swtext5,local,class=CONST,delta=2
    46                           	psect	swtext6,local,class=CONST,delta=2
    47                           	psect	swtext7,local,class=CONST,delta=2
    48                           	psect	swtext8,local,class=CONST,delta=2
    49                           	psect	swtext9,local,class=CONST,delta=2
    50                           	psect	swtext10,local,class=CONST,delta=2
    51                           	psect	swtext11,local,class=CONST,delta=2
    52                           	psect	swtext12,local,class=CONST,delta=2
    53                           	psect	swtext13,local,class=CONST,delta=2
    54                           	psect	swtext14,local,class=CONST,delta=2
    55                           	psect	swtext15,local,class=CONST,delta=2
    56                           	psect	swtext16,local,class=CONST,delta=2
    57                           	psect	swtext17,local,class=CONST,delta=2
    58                           	psect	swtext18,local,class=CONST,delta=2
    59                           	psect	swtext19,local,class=CONST,delta=2
    60                           	psect	swtext20,local,class=CONST,delta=2
    61                           	psect	swtext21,local,class=CONST,delta=2
    62                           	psect	swtext22,local,class=CONST,delta=2
    63                           	dabs	1,0x7E,2
    64  0000                     
    65                           ; Version 1.45
    66                           ; Generated 16/11/2017 GMT
    67                           ; 
    68                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC16F1526 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  0007                     	;# 
   107  0008                     	;# 
   108  0009                     	;# 
   109  000A                     	;# 
   110  000B                     	;# 
   111  000C                     	;# 
   112  000D                     	;# 
   113  000E                     	;# 
   114  000F                     	;# 
   115  0010                     	;# 
   116  0011                     	;# 
   117  0012                     	;# 
   118  0013                     	;# 
   119  0014                     	;# 
   120  0015                     	;# 
   121  0016                     	;# 
   122  0016                     	;# 
   123  0017                     	;# 
   124  0018                     	;# 
   125  0019                     	;# 
   126  001A                     	;# 
   127  001B                     	;# 
   128  001C                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  008F                     	;# 
   133  0090                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0110                     	;# 
   153  0116                     	;# 
   154  0117                     	;# 
   155  011D                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  018F                     	;# 
   159  0190                     	;# 
   160  0191                     	;# 
   161  0191                     	;# 
   162  0192                     	;# 
   163  0193                     	;# 
   164  0193                     	;# 
   165  0194                     	;# 
   166  0195                     	;# 
   167  0196                     	;# 
   168  0197                     	;# 
   169  0199                     	;# 
   170  0199                     	;# 
   171  0199                     	;# 
   172  019A                     	;# 
   173  019A                     	;# 
   174  019A                     	;# 
   175  019B                     	;# 
   176  019B                     	;# 
   177  019B                     	;# 
   178  019B                     	;# 
   179  019B                     	;# 
   180  019C                     	;# 
   181  019C                     	;# 
   182  019C                     	;# 
   183  019D                     	;# 
   184  019D                     	;# 
   185  019D                     	;# 
   186  019E                     	;# 
   187  019E                     	;# 
   188  019E                     	;# 
   189  019F                     	;# 
   190  019F                     	;# 
   191  019F                     	;# 
   192  020D                     	;# 
   193  020F                     	;# 
   194  0210                     	;# 
   195  0211                     	;# 
   196  0211                     	;# 
   197  0212                     	;# 
   198  0212                     	;# 
   199  0213                     	;# 
   200  0213                     	;# 
   201  0214                     	;# 
   202  0214                     	;# 
   203  0215                     	;# 
   204  0215                     	;# 
   205  0215                     	;# 
   206  0216                     	;# 
   207  0216                     	;# 
   208  0217                     	;# 
   209  0217                     	;# 
   210  0219                     	;# 
   211  021A                     	;# 
   212  021B                     	;# 
   213  021C                     	;# 
   214  021D                     	;# 
   215  021E                     	;# 
   216  021F                     	;# 
   217  028C                     	;# 
   218  028D                     	;# 
   219  0291                     	;# 
   220  0291                     	;# 
   221  0292                     	;# 
   222  0293                     	;# 
   223  0298                     	;# 
   224  0298                     	;# 
   225  0299                     	;# 
   226  029A                     	;# 
   227  029D                     	;# 
   228  029E                     	;# 
   229  029F                     	;# 
   230  030C                     	;# 
   231  030D                     	;# 
   232  0311                     	;# 
   233  0311                     	;# 
   234  0312                     	;# 
   235  0313                     	;# 
   236  0318                     	;# 
   237  0318                     	;# 
   238  0319                     	;# 
   239  031A                     	;# 
   240  031C                     	;# 
   241  031C                     	;# 
   242  031D                     	;# 
   243  031E                     	;# 
   244  038C                     	;# 
   245  038D                     	;# 
   246  0394                     	;# 
   247  0395                     	;# 
   248  0396                     	;# 
   249  040C                     	;# 
   250  040D                     	;# 
   251  0411                     	;# 
   252  0411                     	;# 
   253  0412                     	;# 
   254  0413                     	;# 
   255  0414                     	;# 
   256  0415                     	;# 
   257  0416                     	;# 
   258  0417                     	;# 
   259  0418                     	;# 
   260  0418                     	;# 
   261  0419                     	;# 
   262  041A                     	;# 
   263  041B                     	;# 
   264  041C                     	;# 
   265  041D                     	;# 
   266  041E                     	;# 
   267  048D                     	;# 
   268  0491                     	;# 
   269  0491                     	;# 
   270  0492                     	;# 
   271  0492                     	;# 
   272  0493                     	;# 
   273  0493                     	;# 
   274  0493                     	;# 
   275  0494                     	;# 
   276  0494                     	;# 
   277  0495                     	;# 
   278  0495                     	;# 
   279  0496                     	;# 
   280  0496                     	;# 
   281  0497                     	;# 
   282  0497                     	;# 
   283  0595                     	;# 
   284  0596                     	;# 
   285  0597                     	;# 
   286  059C                     	;# 
   287  059D                     	;# 
   288  059E                     	;# 
   289  0611                     	;# 
   290  0611                     	;# 
   291  0612                     	;# 
   292  0613                     	;# 
   293  0614                     	;# 
   294  0614                     	;# 
   295  0615                     	;# 
   296  0616                     	;# 
   297  0617                     	;# 
   298  0617                     	;# 
   299  0618                     	;# 
   300  0619                     	;# 
   301  061A                     	;# 
   302  061A                     	;# 
   303  061B                     	;# 
   304  061C                     	;# 
   305  061D                     	;# 
   306  061D                     	;# 
   307  061E                     	;# 
   308  061F                     	;# 
   309  0FE4                     	;# 
   310  0FE5                     	;# 
   311  0FE6                     	;# 
   312  0FE7                     	;# 
   313  0FE8                     	;# 
   314  0FE9                     	;# 
   315  0FEA                     	;# 
   316  0FEB                     	;# 
   317  0FED                     	;# 
   318  0FEE                     	;# 
   319  0FEF                     	;# 
   320                           
   321                           	psect	idataBANK0
   322  07FC                     __pidataBANK0:	
   323                           
   324                           ;initializer for _man
   325  07FC  3401               	retlw	1
   326  07FD  3400               	retlw	0
   327                           
   328                           	psect	idataBANK1
   329  0DFC                     __pidataBANK1:	
   330                           
   331                           ;initializer for _child_LOCK
   332  0DFC  3400               	retlw	low (STR_1| (0+32768))
   333  0DFD  3490               	retlw	high (STR_1| (0+32768))
   334  0DFE  3400               	retlw	0
   335  0DFF  3400               	retlw	0
   336  0E00  3400               	retlw	0
   337  0E01  3400               	retlw	0
   338  0E02  3400               	retlw	0
   339  0E03  3400               	retlw	0
   340  0E04  3400               	retlw	0
   341  0E05  3400               	retlw	0
   342  0E06  3400               	retlw	0
   343  0E07  3400               	retlw	0
   344  0E08  3400               	retlw	0
   345  0E09  3400               	retlw	0
   346  0E0A  3400               	retlw	0
   347  0E0B  3400               	retlw	0
   348  0E0C  3400               	retlw	0
   349  0E0D  3400               	retlw	0
   350  0E0E  3400               	retlw	0
   351  0E0F  3400               	retlw	0
   352                           
   353                           ;initializer for _st
   354  0E10  3454               	retlw	84
   355  0E11  3430               	retlw	48
   356  0E12  3430               	retlw	48
   357  0E13  3430               	retlw	48
   358  0E14  3430               	retlw	48
   359  0E15  3430               	retlw	48
   360  0E16  3430               	retlw	48
   361  0E17  3430               	retlw	48
   362  0E18  3430               	retlw	48
   363  0E19  3430               	retlw	48
   364  0E1A  3430               	retlw	48
   365  0E1B  3430               	retlw	48
   366  0E1C  3430               	retlw	48
   367  0E1D  3430               	retlw	48
   368  0E1E  3430               	retlw	48
   369  0E1F  3430               	retlw	48
   370  0E20  3430               	retlw	48
   371  0E21  3430               	retlw	48
   372  0E22  3430               	retlw	48
   373  0E23  3430               	retlw	48
   374  0E24  3430               	retlw	48
   375  0E25  3430               	retlw	48
   376  0E26  3400               	retlw	0
   377  0E27  3400               	retlw	0
   378  0E28  3400               	retlw	0
   379  0E29  3400               	retlw	0
   380                           
   381                           	psect	idataBANK2
   382  07A6                     __pidataBANK2:	
   383                           
   384                           ;initializer for _copy
   385  07A6  3424               	retlw	36
   386  07A7  3400               	retlw	0
   387  07A8  3400               	retlw	0
   388  07A9  3400               	retlw	0
   389  07AA  3400               	retlw	0
   390  07AB  3400               	retlw	0
   391  07AC  3400               	retlw	0
   392  07AD  3400               	retlw	0
   393  07AE  3400               	retlw	0
   394  07AF  3400               	retlw	0
   395  07B0  3400               	retlw	0
   396  07B1  3400               	retlw	0
   397  07B2  3400               	retlw	0
   398  07B3  3400               	retlw	0
   399  07B4  3400               	retlw	0
   400  07B5  3400               	retlw	0
   401  07B6  3400               	retlw	0
   402  07B7  3400               	retlw	0
   403  07B8  3400               	retlw	0
   404  07B9  3400               	retlw	0
   405  07BA  3400               	retlw	0
   406  07BB  3400               	retlw	0
   407  07BC  3400               	retlw	0
   408  07BD  3400               	retlw	0
   409  07BE  3400               	retlw	0
   410  07BF  3400               	retlw	0
   411  07C0  3400               	retlw	0
   412  07C1  3400               	retlw	0
   413  07C2  3400               	retlw	0
   414  07C3  3400               	retlw	0
   415  07C4  3400               	retlw	0
   416  07C5  3400               	retlw	0
   417  07C6  3400               	retlw	0
   418  07C7  3400               	retlw	0
   419  07C8  3400               	retlw	0
   420  07C9  3400               	retlw	0
   421                           
   422                           ;initializer for _name
   423  07CA  3461               	retlw	97
   424  07CB  3400               	retlw	0
   425  07CC  3400               	retlw	0
   426  07CD  3400               	retlw	0
   427  07CE  3400               	retlw	0
   428  07CF  3400               	retlw	0
   429  07D0  3400               	retlw	0
   430  07D1  3400               	retlw	0
   431  07D2  3400               	retlw	0
   432  07D3  3400               	retlw	0
   433  07D4  3400               	retlw	0
   434  07D5  3400               	retlw	0
   435  07D6  3400               	retlw	0
   436  07D7  3400               	retlw	0
   437  07D8  3400               	retlw	0
   438  07D9  3400               	retlw	0
   439  07DA  3400               	retlw	0
   440  07DB  3400               	retlw	0
   441  07DC  3400               	retlw	0
   442  07DD  3400               	retlw	0
   443  07DE  3400               	retlw	0
   444  07DF  3400               	retlw	0
   445  07E0  3400               	retlw	0
   446  07E1  3400               	retlw	0
   447  07E2  3400               	retlw	0
   448  07E3  3400               	retlw	0
   449  07E4  3400               	retlw	0
   450  07E5  3400               	retlw	0
   451  07E6  3400               	retlw	0
   452  07E7  3400               	retlw	0
   453  07E8  3400               	retlw	0
   454  07E9  3400               	retlw	0
   455  07EA  3400               	retlw	0
   456  07EB  3400               	retlw	0
   457  07EC  3400               	retlw	0
   458  07ED  3400               	retlw	0
   459  0014                     _PIR4bits	set	20
   460  001A                     _TMR2	set	26
   461  001C                     _T2CON	set	28
   462  0019                     _T1GCON	set	25
   463  0018                     _T1CON	set	24
   464  0016                     _TMR1L	set	22
   465  0017                     _TMR1H	set	23
   466  0013                     _PIR3bits	set	19
   467  001B                     _PR2	set	27
   468  0018                     _T1CONbits	set	24
   469  001C                     _T2CONbits	set	28
   470  0011                     _PIR1bits	set	17
   471  005E                     _PEIE	set	94
   472  005F                     _GIE	set	95
   473  0065                     _RA5	set	101
   474  0063                     _RA3	set	99
   475  0062                     _RA2	set	98
   476  008D                     _RCIF	set	141
   477  008E                     _TRISCbits	set	142
   478  008C                     _TRISAbits	set	140
   479  0090                     _TRISEbits	set	144
   480  0094                     _PIE4bits	set	148
   481  0093                     _PIE3bits	set	147
   482  0091                     _PIE1bits	set	145
   483  018C                     _ANSELA	set	396
   484  0190                     _ANSELE	set	400
   485  019C                     _SP1BRGH	set	412
   486  019B                     _SP1BRGL	set	411
   487  019E                     _TX1STA	set	414
   488  019D                     _RC1STA	set	413
   489  019F                     _BAUD1CON	set	415
   490  019E                     _TX1STAbits	set	414
   491  0199                     _RC1REG	set	409
   492  019A                     _TX1REG	set	410
   493  019D                     _RC1STAbits	set	413
   494  0210                     _WPUE	set	528
   495  0291                     _CCPR1L	set	657
   496  0292                     _CCPR1H	set	658
   497  0293                     _CCP1CON	set	659
   498  1465                     _RF5	set	5221
   499  1463                     _RF3	set	5219
   500  1460                     _RF0	set	5216
   501  030C                     _TRISFbits	set	780
   502  030D                     _TRISGbits	set	781
   503  0312                     _CCPR3H	set	786
   504  0311                     _CCPR3L	set	785
   505  0313                     _CCP3CON	set	787
   506  040C                     _ANSELF	set	1036
   507  040D                     _ANSELG	set	1037
   508  041C                     _TMR6	set	1052
   509  041E                     _T6CON	set	1054
   510  0415                     _TMR4	set	1045
   511  0417                     _T4CON	set	1047
   512  0418                     _TMR5L	set	1048
   513  0419                     _TMR5H	set	1049
   514  041B                     _T5GCON	set	1051
   515  041A                     _T5CON	set	1050
   516  0414                     _T3GCON	set	1044
   517  0413                     _T3CON	set	1043
   518  0411                     _TMR3L	set	1041
   519  0412                     _TMR3H	set	1042
   520  0413                     _T3CONbits	set	1043
   521  0416                     _PR4	set	1046
   522  0417                     _T4CONbits	set	1047
   523  048D                     _WPUG	set	1165
   524  061A                     _CCPR9L	set	1562
   525  061B                     _CCPR9H	set	1563
   526  061C                     _CCP9CON	set	1564
   527                           
   528                           	psect	stringtext1
   529  1000                     __pstringtext1:	
   530  1000                     STR_1:	
   531  1000  3430               	retlw	48	;'0'
   532  1001  3430               	retlw	48	;'0'
   533  1002  3430               	retlw	48	;'0'
   534  1003  3430               	retlw	48	;'0'
   535  1004  3430               	retlw	48	;'0'
   536  1005  3430               	retlw	48	;'0'
   537  1006  3430               	retlw	48	;'0'
   538  1007  3430               	retlw	48	;'0'
   539  1008  3430               	retlw	48	;'0'
   540  1009  3430               	retlw	48	;'0'
   541  100A  3430               	retlw	48	;'0'
   542  100B  3400               	retlw	0
   543                           
   544                           	psect	stringtext2
   545  0000                     __pstringtext2:	
   546                           
   547                           ; #config settings
   548  0000                     
   549                           	psect	cinit
   550  048C                     start_initialization:	
   551  048C                     __initialization:	
   552                           
   553                           ; Initialize objects allocated to BANK0
   554  048C  3187  27FC  3184   	fcall	__pidataBANK0	;fetch initializer
   555  048F  00DF               	movwf	__pdataBANK0& (0+127)
   556  0490  3187  27FD  3184   	fcall	__pidataBANK0+1	;fetch initializer
   557  0493  00E0               	movwf	(__pdataBANK0+1)& (0+127)
   558                           
   559                           ; Initialize objects allocated to BANK1
   560  0494  30FC               	movlw	low __pidataBANK1
   561  0495  0084               	movwf	4
   562  0496  308D               	movlw	(high __pidataBANK1)| (0+128)
   563  0497  0085               	movwf	5
   564  0498  30A0               	movlw	low __pdataBANK1
   565  0499  0086               	movwf	6
   566  049A  3000               	movlw	high __pdataBANK1
   567  049B  0087               	movwf	7
   568  049C  302E               	movlw	46
   569  049D  318A  2223  3184   	fcall	init_ram
   570                           
   571                           ; Initialize objects allocated to BANK2
   572  04A0  30A6               	movlw	low __pidataBANK2
   573  04A1  0084               	movwf	4
   574  04A2  3087               	movlw	(high __pidataBANK2)| (0+128)
   575  04A3  0085               	movwf	5
   576  04A4  3020               	movlw	low __pdataBANK2
   577  04A5  0086               	movwf	6
   578  04A6  3001               	movlw	high __pdataBANK2
   579  04A7  0087               	movwf	7
   580  04A8  3048               	movlw	72
   581  04A9  318A  2223  3184   	fcall	init_ram
   582                           
   583                           ; Clear objects allocated to COMMON
   584  04AC  01FB               	clrf	__pbssCOMMON& (0+127)
   585                           
   586                           ; Clear objects allocated to BANK0
   587  04AD  3045               	movlw	low __pbssBANK0
   588  04AE  0084               	movwf	4
   589  04AF  3000               	movlw	high __pbssBANK0
   590  04B0  0085               	movwf	5
   591  04B1  301A               	movlw	26
   592  04B2  318A  2229  3184   	fcall	clear_ram0
   593                           
   594                           ; Clear objects allocated to BANK1
   595  04B5  30CE               	movlw	low __pbssBANK1
   596  04B6  0084               	movwf	4
   597  04B7  3000               	movlw	high __pbssBANK1
   598  04B8  0085               	movwf	5
   599  04B9  3010               	movlw	16
   600  04BA  318A  2229         	fcall	clear_ram0
   601  04BC                     end_of_initialization:	
   602                           ;End of C runtime variable initialization code
   603                           
   604  04BC                     __end_of__initialization:	
   605  04BC  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   606  04BD  0020               	movlb	0
   607  04BE  3184  2CC0         	ljmp	_main	;jump to C main() function
   608                           
   609                           	psect	bssCOMMON
   610  007B                     __pbssCOMMON:	
   611  007B                     _dimmer3:	
   612  007B                     	ds	1
   613                           
   614                           	psect	bssBANK0
   615  0045                     __pbssBANK0:	
   616  0045                     _M4:	
   617  0045                     	ds	2
   618  0047                     _M3:	
   619  0047                     	ds	2
   620  0049                     _M1:	
   621  0049                     	ds	2
   622  004B                     _COPY_FLAG:	
   623  004B                     	ds	2
   624  004D                     _TX_FLAG:	
   625  004D                     	ds	2
   626  004F                     _FAN_SPEED2_1s:	
   627  004F                     	ds	2
   628  0051                     _FAN_SPEED2_10s:	
   629  0051                     	ds	2
   630  0053                     _FAN_SPEED1_1s:	
   631  0053                     	ds	2
   632  0055                     _FAN_SPEED1_10s:	
   633  0055                     	ds	2
   634  0057                     _ak:	
   635  0057                     	ds	2
   636  0059                     _pk:	
   637  0059                     	ds	2
   638  005B                     _i:	
   639  005B                     	ds	2
   640  005D                     _dimmer2:	
   641  005D                     	ds	1
   642  005E                     _dimmer1:	
   643  005E                     	ds	1
   644                           
   645                           	psect	dataBANK0
   646  005F                     __pdataBANK0:	
   647  005F                     _man:	
   648  005F                     	ds	2
   649                           
   650                           	psect	bssBANK1
   651  00CE                     __pbssBANK1:	
   652  00CE                     _M5:	
   653  00CE                     	ds	2
   654  00D0                     _M2:	
   655  00D0                     	ds	2
   656  00D2                     _FAN_FLAG3:	
   657  00D2                     	ds	2
   658  00D4                     _FAN_FLAG2:	
   659  00D4                     	ds	2
   660  00D6                     _FAN_FLAG1:	
   661  00D6                     	ds	2
   662  00D8                     _FAN_SPEED3_1s:	
   663  00D8                     	ds	2
   664  00DA                     _FAN_SPEED3_10s:	
   665  00DA                     	ds	2
   666  00DC                     _tk:	
   667  00DC                     	ds	2
   668                           
   669                           	psect	dataBANK1
   670  00A0                     __pdataBANK1:	
   671  00A0                     _child_LOCK:	
   672  00A0                     	ds	20
   673  00B4                     _st:	
   674  00B4                     	ds	26
   675                           
   676                           	psect	dataBANK2
   677  0120                     __pdataBANK2:	
   678  0120                     _copy:	
   679  0120                     	ds	36
   680  0144                     _name:	
   681  0144                     	ds	36
   682                           
   683                           	psect	inittext
   684  0A23                     init_ram:	
   685  0A23  00FE               	movwf	126
   686  0A24                     initloop:	
   687  0A24  0012               	moviw fsr0++
   688  0A25  001E               	movwi fsr1++
   689  0A26  0BFE               	decfsz	126,f
   690  0A27  2A24               	goto	initloop
   691  0A28  3400               	retlw	0
   692                           
   693                           	psect	clrtext
   694  0A29                     clear_ram0:	
   695                           ;	Called with FSR0 containing the base address, and
   696                           ;	WREG with the size to clear
   697                           
   698  0A29  0064               	clrwdt	;clear the watchdog before getting into this loop
   699  0A2A                     clrloop0:	
   700  0A2A  0180               	clrf	0	;clear RAM location pointed to by FSR
   701  0A2B  3101               	addfsr 0,1
   702  0A2C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   703  0A2D  2A2A               	goto	clrloop0	;have we reached the end yet?
   704  0A2E  3400               	retlw	0	;all done for this memory range, return
   705                           
   706                           	psect	cstackBANK1
   707  00DE                     __pcstackBANK1:	
   708  00DE                     main@RX_CHK_FLAG_start1:	
   709                           
   710                           ; 2 bytes @ 0x0
   711  00DE                     	ds	2
   712  00E0                     main@RX_CHK_FLAG_start2:	
   713                           
   714                           ; 2 bytes @ 0x2
   715  00E0                     	ds	2
   716  00E2                     main@RX_CHK_FLAG_end1:	
   717                           
   718                           ; 2 bytes @ 0x4
   719  00E2                     	ds	2
   720  00E4                     main@RX_CHK_FLAG_end2:	
   721                           
   722                           ; 2 bytes @ 0x6
   723  00E4                     	ds	2
   724  00E6                     main@start_flag:	
   725                           
   726                           ; 2 bytes @ 0x8
   727  00E6                     	ds	2
   728  00E8                     main@end_flag:	
   729                           
   730                           ; 2 bytes @ 0xA
   731  00E8                     	ds	2
   732  00EA                     main@k_667:	
   733                           
   734                           ; 2 bytes @ 0xC
   735  00EA                     	ds	2
   736  00EC                     main@k:	
   737                           
   738                           ; 2 bytes @ 0xE
   739  00EC                     	ds	2
   740                           
   741                           	psect	cstackCOMMON
   742  0070                     __pcstackCOMMON:	
   743  0070                     ?_isdigit:	
   744  0070                     ?_EUSART_Initialize:	
   745                           ; 1 bit 
   746                           
   747  0070                     ?_CCP1_Initialize:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ?_CCP3_Initialize:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ?_CCP9_Initialize:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?_TMR1_Initialize:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ?_TMR3_Initialize:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ?_TMR2_Initialize:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     ?_TMR4_Initialize:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ?_TMR5_Initialize:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ?_TMR6_Initialize:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ?_pin_manager:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0070                     ?_writeUART:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0070                     ?_isr:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0070                     ??_isr:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0070                     ?_periperal_init:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0070                     ?_main:	
   790                           ; 1 bytes @ 0x0
   791                           
   792                           
   793                           ; 1 bytes @ 0x0
   794  0070                     	ds	2
   795  0072                     ??_EUSART_Initialize:	
   796  0072                     ??_CCP1_Initialize:	
   797                           ; 1 bytes @ 0x2
   798                           
   799  0072                     ??_CCP3_Initialize:	
   800                           ; 1 bytes @ 0x2
   801                           
   802  0072                     ??_CCP9_Initialize:	
   803                           ; 1 bytes @ 0x2
   804                           
   805  0072                     ??_TMR1_Initialize:	
   806                           ; 1 bytes @ 0x2
   807                           
   808  0072                     ??_TMR3_Initialize:	
   809                           ; 1 bytes @ 0x2
   810                           
   811  0072                     ??_TMR2_Initialize:	
   812                           ; 1 bytes @ 0x2
   813                           
   814  0072                     ??_TMR4_Initialize:	
   815                           ; 1 bytes @ 0x2
   816                           
   817  0072                     ??_TMR5_Initialize:	
   818                           ; 1 bytes @ 0x2
   819                           
   820  0072                     ??_TMR6_Initialize:	
   821                           ; 1 bytes @ 0x2
   822                           
   823  0072                     ??_pin_manager:	
   824                           ; 1 bytes @ 0x2
   825                           
   826  0072                     ?_copy_frame:	
   827                           ; 1 bytes @ 0x2
   828                           
   829  0072                     ??_writeUART:	
   830                           ; 1 bytes @ 0x2
   831                           
   832  0072                     ??_isdigit:	
   833                           ; 1 bytes @ 0x2
   834                           
   835  0072                     ??_periperal_init:	
   836                           ; 1 bytes @ 0x2
   837                           
   838  0072                     ?___wmul:	
   839                           ; 1 bytes @ 0x2
   840                           
   841  0072                     _isdigit$901:	
   842                           ; 2 bytes @ 0x2
   843                           
   844  0072                     copy_frame@start:	
   845                           ; 1 bytes @ 0x2
   846                           
   847  0072                     ___wmul@multiplier:	
   848                           ; 2 bytes @ 0x2
   849                           
   850                           
   851                           ; 2 bytes @ 0x2
   852  0072                     	ds	1
   853  0073                     isdigit@c:	
   854  0073                     writeUART@Tx_count:	
   855                           ; 1 bytes @ 0x3
   856                           
   857                           
   858                           ; 2 bytes @ 0x3
   859  0073                     	ds	1
   860  0074                     copy_frame@end:	
   861  0074                     ___wmul@multiplicand:	
   862                           ; 2 bytes @ 0x4
   863                           
   864                           
   865                           ; 2 bytes @ 0x4
   866  0074                     	ds	1
   867  0075                     writeUART@str2Write:	
   868                           
   869                           ; 1 bytes @ 0x5
   870  0075                     	ds	1
   871  0076                     ??_copy_frame:	
   872  0076                     ??___wmul:	
   873                           ; 1 bytes @ 0x6
   874                           
   875  0076                     ___wmul@product:	
   876                           ; 1 bytes @ 0x6
   877                           
   878                           
   879                           ; 2 bytes @ 0x6
   880  0076                     	ds	1
   881  0077                     copy_frame@sw:	
   882                           
   883                           ; 2 bytes @ 0x7
   884  0077                     	ds	1
   885  0078                     ?_atoi:	
   886                           
   887                           ; 2 bytes @ 0x8
   888  0078                     	ds	1
   889  0079                     copy_frame@k:	
   890                           
   891                           ; 2 bytes @ 0x9
   892  0079                     	ds	2
   893                           
   894                           	psect	cstackBANK0
   895  0020                     __pcstackBANK0:	
   896  0020                     ??_atoi:	
   897                           
   898                           ; 1 bytes @ 0x0
   899  0020                     	ds	2
   900  0022                     atoi@sign:	
   901                           
   902                           ; 1 bytes @ 0x2
   903  0022                     	ds	1
   904  0023                     atoi@a:	
   905                           
   906                           ; 2 bytes @ 0x3
   907  0023                     	ds	2
   908  0025                     atoi@s:	
   909                           
   910                           ; 1 bytes @ 0x5
   911  0025                     	ds	1
   912  0026                     ?_ACTION:	
   913  0026                     ACTION@Switch_Num_1s:	
   914                           ; 1 bytes @ 0x6
   915                           
   916                           
   917                           ; 1 bytes @ 0x6
   918  0026                     	ds	1
   919  0027                     ACTION@sw_status:	
   920                           
   921                           ; 1 bytes @ 0x7
   922  0027                     	ds	1
   923  0028                     ACTION@speed_bitHigh:	
   924                           
   925                           ; 1 bytes @ 0x8
   926  0028                     	ds	1
   927  0029                     ACTION@speed_bitLow:	
   928                           
   929                           ; 1 bytes @ 0x9
   930  0029                     	ds	1
   931  002A                     ACTION@parent:	
   932                           
   933                           ; 1 bytes @ 0xA
   934  002A                     	ds	1
   935  002B                     ACTION@finalFrameStat:	
   936                           
   937                           ; 1 bytes @ 0xB
   938  002B                     	ds	1
   939  002C                     ??_ACTION:	
   940                           
   941                           ; 1 bytes @ 0xC
   942  002C                     	ds	2
   943  002E                     ACTION@FanSpeed:	
   944                           
   945                           ; 2 bytes @ 0xE
   946  002E                     	ds	2
   947  0030                     ACTION@children:	
   948                           
   949                           ; 2 bytes @ 0x10
   950  0030                     	ds	2
   951  0032                     ACTION@child_lock_num:	
   952                           
   953                           ; 2 bytes @ 0x12
   954  0032                     	ds	2
   955  0034                     ACTION@Switch_Num_10s:	
   956                           
   957                           ; 1 bytes @ 0x14
   958  0034                     	ds	1
   959  0035                     ACTION@FanSpeedString:	
   960                           
   961                           ; 2 bytes @ 0x15
   962  0035                     	ds	2
   963  0037                     ACTION@SwNumString:	
   964                           
   965                           ; 2 bytes @ 0x17
   966  0037                     	ds	2
   967  0039                     ACTION@SwNum:	
   968                           
   969                           ; 2 bytes @ 0x19
   970  0039                     	ds	2
   971  003B                     ACTION@response_starts:	
   972                           
   973                           ; 2 bytes @ 0x1B
   974  003B                     	ds	2
   975  003D                     ACTION@switch_status:	
   976                           
   977                           ; 2 bytes @ 0x1D
   978  003D                     	ds	2
   979  003F                     ??_main:	
   980                           
   981                           ; 1 bytes @ 0x1F
   982  003F                     	ds	6
   983                           
   984                           	psect	maintext
   985  04C0                     __pmaintext:	
   986 ;;
   987 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   988 ;;
   989 ;; *************** function _main *****************
   990 ;; Defined at:
   991 ;;		line 1102 in file "one_sw_two_dimmmer.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;		None
   994 ;; Auto vars:     Size  Location     Type
   995 ;;  k               2   12[BANK1 ] int 
   996 ;;  k               2   14[BANK1 ] int 
   997 ;;  end_flag        2   10[BANK1 ] int 
   998 ;;  start_flag      2    8[BANK1 ] int 
   999 ;;  RX_CHK_FLAG_    2    6[BANK1 ] int 
  1000 ;;  RX_CHK_FLAG_    2    4[BANK1 ] int 
  1001 ;;  RX_CHK_FLAG_    2    2[BANK1 ] int 
  1002 ;;  RX_CHK_FLAG_    2    0[BANK1 ] int 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : B1F/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  1012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  1013 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0
  1014 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0
  1015 ;;      Totals:         0       6      16       0       0       0       0       0       0       0       0
  1016 ;;Total ram usage:       22 bytes
  1017 ;; Hardware stack levels required when called:    4
  1018 ;; This function calls:
  1019 ;;		_ACTION
  1020 ;;		_copy_frame
  1021 ;;		_periperal_init
  1022 ;;		_pin_manager
  1023 ;;		_writeUART
  1024 ;; This function is called by:
  1025 ;;		Startup code after reset
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           
  1030                           ;psect for function _main
  1031  04C0                     _main:	
  1032                           
  1033                           ;one_sw_two_dimmmer.c: 1103: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1034                           
  1035                           ;incstack = 0
  1036                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1037  04C0  3029               	movlw	41
  1038  04C1  0020               	movlb	0	; select bank0
  1039  04C2  00C0               	movwf	??_main+1
  1040  04C3  3096               	movlw	150
  1041  04C4  00BF               	movwf	??_main
  1042  04C5  307F               	movlw	127
  1043  04C6                     u2737:	
  1044  04C6  0B89               	decfsz	9,f
  1045  04C7  2CC6               	goto	u2737
  1046  04C8  0BBF               	decfsz	??_main,f
  1047  04C9  2CC6               	goto	u2737
  1048  04CA  0BC0               	decfsz	??_main+1,f
  1049  04CB  2CC6               	goto	u2737
  1050                           
  1051                           ;one_sw_two_dimmmer.c: 1105: int RX_CHK_FLAG_start1 = 0 ,RX_CHK_FLAG_start2 = 0, start_f
      +                          lag=0;
  1052  04CC  0021               	movlb	1	; select bank1
  1053  04CD  01DE               	clrf	main@RX_CHK_FLAG_start1^(0+128)
  1054  04CE  01DF               	clrf	(main@RX_CHK_FLAG_start1+1)^(0+128)
  1055  04CF  01E0               	clrf	main@RX_CHK_FLAG_start2^(0+128)
  1056  04D0  01E1               	clrf	(main@RX_CHK_FLAG_start2+1)^(0+128)
  1057  04D1  01E6               	clrf	main@start_flag^(0+128)
  1058  04D2  01E7               	clrf	(main@start_flag+1)^(0+128)
  1059                           
  1060                           ;one_sw_two_dimmmer.c: 1106: int RX_CHK_FLAG_end1 = 0, RX_CHK_FLAG_end2 = 0, end_flag=0;
  1061  04D3  01E2               	clrf	main@RX_CHK_FLAG_end1^(0+128)
  1062  04D4  01E3               	clrf	(main@RX_CHK_FLAG_end1+1)^(0+128)
  1063  04D5  01E4               	clrf	main@RX_CHK_FLAG_end2^(0+128)
  1064  04D6  01E5               	clrf	(main@RX_CHK_FLAG_end2+1)^(0+128)
  1065  04D7  01E8               	clrf	main@end_flag^(0+128)
  1066  04D8  01E9               	clrf	(main@end_flag+1)^(0+128)
  1067                           
  1068                           ;one_sw_two_dimmmer.c: 1108: pin_manager();
  1069  04D9  318D  25DC  3184   	fcall	_pin_manager
  1070                           
  1071                           ;one_sw_two_dimmmer.c: 1109: periperal_init();
  1072  04DC  318D  25BE  3184   	fcall	_periperal_init
  1073                           
  1074                           ;one_sw_two_dimmmer.c: 1111: RF0 = 0; RA3 = 1; RA2 = 1;
  1075  04DF  0025               	movlb	5	; select bank5
  1076  04E0  100C               	bcf	12,0	;volatile
  1077  04E1  0020               	movlb	0	; select bank0
  1078  04E2  158C               	bsf	12,3	;volatile
  1079  04E3  150C               	bsf	12,2	;volatile
  1080                           
  1081                           ;one_sw_two_dimmmer.c: 1112: M1=1; M2=1; M3=1; M4=1; M5=1;
  1082  04E4  3001               	movlw	1
  1083  04E5  00C9               	movwf	_M1
  1084  04E6  3000               	movlw	0
  1085  04E7  00CA               	movwf	_M1+1
  1086  04E8  3001               	movlw	1
  1087  04E9  0021               	movlb	1	; select bank1
  1088  04EA  00D0               	movwf	_M2^(0+128)
  1089  04EB  3000               	movlw	0
  1090  04EC  00D1               	movwf	(_M2^(0+128)+1)
  1091  04ED  3001               	movlw	1
  1092  04EE  0020               	movlb	0	; select bank0
  1093  04EF  00C7               	movwf	_M3
  1094  04F0  3000               	movlw	0
  1095  04F1  00C8               	movwf	_M3+1
  1096  04F2  3001               	movlw	1
  1097  04F3  00C5               	movwf	_M4
  1098  04F4  3000               	movlw	0
  1099  04F5  00C6               	movwf	_M4+1
  1100  04F6  3001               	movlw	1
  1101  04F7  0021               	movlb	1	; select bank1
  1102  04F8  00CE               	movwf	_M5^(0+128)
  1103  04F9  3000               	movlw	0
  1104  04FA  00CF               	movwf	(_M5^(0+128)+1)
  1105                           
  1106                           ;one_sw_two_dimmmer.c: 1114: st[0]='%';
  1107  04FB  3025               	movlw	37
  1108  04FC  0020               	movlb	0	; select bank0
  1109  04FD  00BF               	movwf	??_main
  1110  04FE  083F               	movf	??_main,w
  1111  04FF  0021               	movlb	1	; select bank1
  1112  0500  00B4               	movwf	_st^(0+128)
  1113                           
  1114                           ;one_sw_two_dimmmer.c: 1115: st[21]='@';
  1115  0501  3040               	movlw	64
  1116  0502  0020               	movlb	0	; select bank0
  1117  0503  00BF               	movwf	??_main
  1118  0504  083F               	movf	??_main,w
  1119  0505  0021               	movlb	1	; select bank1
  1120  0506  00C9               	movwf	(_st^(0+128)+21)
  1121  0507                     l6617:	
  1122                           ;one_sw_two_dimmmer.c: 1117: while(1){
  1123                           
  1124                           
  1125                           ;one_sw_two_dimmmer.c: 1119: if(TX_FLAG==1)
  1126  0507  0020               	movlb	0	; select bank0
  1127  0508  034D               	decf	_TX_FLAG,w
  1128  0509  044E               	iorwf	_TX_FLAG+1,w
  1129  050A  1D03               	btfss	3,2
  1130  050B  2E5B               	goto	l6703
  1131                           
  1132                           ;one_sw_two_dimmmer.c: 1120: {
  1133                           ;one_sw_two_dimmmer.c: 1122: TX_FLAG=0; start_flag = 0; end_flag = 0;
  1134  050C  01CD               	clrf	_TX_FLAG
  1135  050D  01CE               	clrf	_TX_FLAG+1
  1136  050E  0021               	movlb	1	; select bank1
  1137  050F  01E6               	clrf	main@start_flag^(0+128)
  1138  0510  01E7               	clrf	(main@start_flag+1)^(0+128)
  1139  0511  01E8               	clrf	main@end_flag^(0+128)
  1140  0512  01E9               	clrf	(main@end_flag+1)^(0+128)
  1141                           
  1142                           ;one_sw_two_dimmmer.c: 1124: if(name[0]=='%' && name[1]=='%' && name[14]=='@' && name[15
      +                          ]=='@')
  1143  0513  3025               	movlw	37
  1144  0514  0022               	movlb	2	; select bank2
  1145  0515  0644               	xorwf	_name^(0+256),w
  1146  0516  1D03               	btfss	3,2
  1147  0517  2DBA               	goto	l6671
  1148  0518  3025               	movlw	37
  1149  0519  0645               	xorwf	(_name^(0+256)+1),w
  1150  051A  1D03               	btfss	3,2
  1151  051B  2DBA               	goto	l6671
  1152  051C  3040               	movlw	64
  1153  051D  0652               	xorwf	(_name^(0+256)+14),w
  1154  051E  1D03               	btfss	3,2
  1155  051F  2DBA               	goto	l6671
  1156  0520  3040               	movlw	64
  1157  0521  0653               	xorwf	(_name^(0+256)+15),w
  1158  0522  1D03               	btfss	3,2
  1159  0523  2DBA               	goto	l6671
  1160                           
  1161                           ;one_sw_two_dimmmer.c: 1125: {
  1162                           ;one_sw_two_dimmmer.c: 1126: for(int k=0;k<16;k++)
  1163  0524  0021               	movlb	1	; select bank1
  1164  0525  01EC               	clrf	main@k^(0+128)
  1165  0526  01ED               	clrf	(main@k+1)^(0+128)
  1166  0527                     L3:	
  1167  0527  086D               	movf	(main@k+1)^(0+128),w
  1168  0528  3A80               	xorlw	128
  1169  0529  0020               	movlb	0	; select bank0
  1170  052A  00BF               	movwf	??_main
  1171  052B  3080               	movlw	128
  1172  052C  023F               	subwf	??_main,w
  1173  052D  1D03               	skipz
  1174  052E  2D32               	goto	u2315
  1175  052F  3010               	movlw	16
  1176  0530  0021               	movlb	1	; select bank1
  1177  0531  026C               	subwf	main@k^(0+128),w
  1178  0532                     u2315:	
  1179  0532  1803               	btfsc	3,0
  1180  0533  2E12               	goto	l6691
  1181                           
  1182                           ;one_sw_two_dimmmer.c: 1127: {
  1183                           ;one_sw_two_dimmmer.c: 1128: if(name[k] == '%' && name[k+1] == '%' && start_flag == 0)
  1184  0534  0021               	movlb	1	; select bank1
  1185  0535  086C               	movf	main@k^(0+128),w
  1186  0536  3E44               	addlw	(low (_name| (0+256)))& (0+255)
  1187  0537  0086               	movwf	6
  1188  0538  3001               	movlw	1	; select bank2/3
  1189  0539  0087               	movwf	7
  1190  053A  3025               	movlw	37
  1191  053B  0601               	xorwf	1,w
  1192  053C  1D03               	btfss	3,2
  1193  053D  2D55               	goto	l6643
  1194  053E  086C               	movf	main@k^(0+128),w
  1195  053F  3E01               	addlw	1
  1196  0540  3E44               	addlw	(low (_name| (0+256)))& (0+255)
  1197  0541  0086               	movwf	6
  1198  0542  3001               	movlw	1	; select bank2/3
  1199  0543  0087               	movwf	7
  1200  0544  3025               	movlw	37
  1201  0545  0601               	xorwf	1,w
  1202  0546  1D03               	btfss	3,2
  1203  0547  2D55               	goto	l6643
  1204  0548  0866               	movf	main@start_flag^(0+128),w
  1205  0549  0467               	iorwf	(main@start_flag+1)^(0+128),w
  1206  054A  1D03               	btfss	3,2
  1207  054B  2D55               	goto	l6643
  1208                           
  1209                           ;one_sw_two_dimmmer.c: 1129: {
  1210                           ;one_sw_two_dimmmer.c: 1130: RX_CHK_FLAG_start1 = k;
  1211  054C  086D               	movf	(main@k+1)^(0+128),w
  1212  054D  00DF               	movwf	(main@RX_CHK_FLAG_start1+1)^(0+128)
  1213  054E  086C               	movf	main@k^(0+128),w
  1214  054F  00DE               	movwf	main@RX_CHK_FLAG_start1^(0+128)
  1215                           
  1216                           ;one_sw_two_dimmmer.c: 1131: start_flag = 1;
  1217  0550  3001               	movlw	1
  1218  0551  00E6               	movwf	main@start_flag^(0+128)
  1219  0552  3000               	movlw	0
  1220  0553  00E7               	movwf	(main@start_flag^(0+128)+1)
  1221                           
  1222                           ;one_sw_two_dimmmer.c: 1132: }
  1223  0554  2DB4               	goto	l6669
  1224  0555                     l6643:	
  1225                           
  1226                           ;one_sw_two_dimmmer.c: 1133: else if(name[k] == '%' && name[k+1] == '%' && start_flag ==
      +                           1)
  1227  0555  086C               	movf	main@k^(0+128),w
  1228  0556  3E44               	addlw	(low (_name| (0+256)))& (0+255)
  1229  0557  0086               	movwf	6
  1230  0558  3001               	movlw	1	; select bank2/3
  1231  0559  0087               	movwf	7
  1232  055A  3025               	movlw	37
  1233  055B  0601               	xorwf	1,w
  1234  055C  1D03               	btfss	3,2
  1235  055D  2D71               	goto	l6651
  1236  055E  086C               	movf	main@k^(0+128),w
  1237  055F  3E01               	addlw	1
  1238  0560  3E44               	addlw	(low (_name| (0+256)))& (0+255)
  1239  0561  0086               	movwf	6
  1240  0562  3001               	movlw	1	; select bank2/3
  1241  0563  0087               	movwf	7
  1242  0564  3025               	movlw	37
  1243  0565  0601               	xorwf	1,w
  1244  0566  1D03               	btfss	3,2
  1245  0567  2D71               	goto	l6651
  1246  0568  0366               	decf	main@start_flag^(0+128),w
  1247  0569  0467               	iorwf	(main@start_flag+1)^(0+128),w
  1248  056A  1D03               	btfss	3,2
  1249  056B  2D71               	goto	l6651
  1250                           
  1251                           ;one_sw_two_dimmmer.c: 1134: {
  1252                           ;one_sw_two_dimmmer.c: 1135: RX_CHK_FLAG_start2 = k;
  1253  056C  086D               	movf	(main@k+1)^(0+128),w
  1254  056D  00E1               	movwf	(main@RX_CHK_FLAG_start2+1)^(0+128)
  1255  056E  086C               	movf	main@k^(0+128),w
  1256  056F  00E0               	movwf	main@RX_CHK_FLAG_start2^(0+128)
  1257                           
  1258                           ;one_sw_two_dimmmer.c: 1136: }
  1259  0570  2DB4               	goto	l6669
  1260  0571                     l6651:	
  1261                           
  1262                           ;one_sw_two_dimmmer.c: 1137: else if(name[k] == '@' && name[k+1] == '@' && end_flag == 0
      +                          )
  1263  0571  086C               	movf	main@k^(0+128),w
  1264  0572  3E44               	addlw	(low (_name| (0+256)))& (0+255)
  1265  0573  0086               	movwf	6
  1266  0574  3001               	movlw	1	; select bank2/3
  1267  0575  0087               	movwf	7
  1268  0576  3040               	movlw	64
  1269  0577  0601               	xorwf	1,w
  1270  0578  1D03               	btfss	3,2
  1271  0579  2D92               	goto	l6661
  1272  057A  086C               	movf	main@k^(0+128),w
  1273  057B  3E01               	addlw	1
  1274  057C  3E44               	addlw	(low (_name| (0+256)))& (0+255)
  1275  057D  0086               	movwf	6
  1276  057E  3001               	movlw	1	; select bank2/3
  1277  057F  0087               	movwf	7
  1278  0580  3040               	movlw	64
  1279  0581  0601               	xorwf	1,w
  1280  0582  1D03               	btfss	3,2
  1281  0583  2D92               	goto	l6661
  1282  0584  0868               	movf	main@end_flag^(0+128),w
  1283  0585  0469               	iorwf	(main@end_flag+1)^(0+128),w
  1284  0586  1D03               	btfss	3,2
  1285  0587  2D92               	goto	l6661
  1286                           
  1287                           ;one_sw_two_dimmmer.c: 1138: {
  1288                           ;one_sw_two_dimmmer.c: 1139: RX_CHK_FLAG_end1 = k;
  1289  0588  086D               	movf	(main@k+1)^(0+128),w
  1290  0589  00E3               	movwf	(main@RX_CHK_FLAG_end1+1)^(0+128)
  1291  058A  086C               	movf	main@k^(0+128),w
  1292  058B  00E2               	movwf	main@RX_CHK_FLAG_end1^(0+128)
  1293                           
  1294                           ;one_sw_two_dimmmer.c: 1140: end_flag = 1;
  1295  058C  3001               	movlw	1
  1296  058D  00E8               	movwf	main@end_flag^(0+128)
  1297  058E  3000               	movlw	0
  1298  058F  00E9               	movwf	(main@end_flag^(0+128)+1)
  1299                           
  1300                           ;one_sw_two_dimmmer.c: 1141: COPY_FLAG=1;
  1301  0590  3001               	movlw	1
  1302  0591  2DAF               	goto	L1
  1303  0592                     l6661:	
  1304                           ;one_sw_two_dimmmer.c: 1143: }
  1305                           
  1306                           ;one_sw_two_dimmmer.c: 1142: break;
  1307                           
  1308                           
  1309                           ;one_sw_two_dimmmer.c: 1144: else if(name[k] == '@' && name[k+1] == '@' && end_flag == 1
      +                          )
  1310  0592  0021               	movlb	1	; select bank1
  1311  0593  086C               	movf	main@k^(0+128),w
  1312  0594  3E44               	addlw	(low (_name| (0+256)))& (0+255)
  1313  0595  0086               	movwf	6
  1314  0596  3001               	movlw	1	; select bank2/3
  1315  0597  0087               	movwf	7
  1316  0598  3040               	movlw	64
  1317  0599  0601               	xorwf	1,w
  1318  059A  1D03               	btfss	3,2
  1319  059B  2DB4               	goto	l6669
  1320  059C  086C               	movf	main@k^(0+128),w
  1321  059D  3E01               	addlw	1
  1322  059E  3E44               	addlw	(low (_name| (0+256)))& (0+255)
  1323  059F  0086               	movwf	6
  1324  05A0  3001               	movlw	1	; select bank2/3
  1325  05A1  0087               	movwf	7
  1326  05A2  3040               	movlw	64
  1327  05A3  0601               	xorwf	1,w
  1328  05A4  1D03               	btfss	3,2
  1329  05A5  2DB4               	goto	l6669
  1330  05A6  0368               	decf	main@end_flag^(0+128),w
  1331  05A7  0469               	iorwf	(main@end_flag+1)^(0+128),w
  1332  05A8  1D03               	btfss	3,2
  1333  05A9  2DB4               	goto	l6669
  1334                           
  1335                           ;one_sw_two_dimmmer.c: 1145: {
  1336                           ;one_sw_two_dimmmer.c: 1146: RX_CHK_FLAG_end2 = k;
  1337  05AA  086D               	movf	(main@k+1)^(0+128),w
  1338  05AB  00E5               	movwf	(main@RX_CHK_FLAG_end2+1)^(0+128)
  1339  05AC  086C               	movf	main@k^(0+128),w
  1340  05AD  00E4               	movwf	main@RX_CHK_FLAG_end2^(0+128)
  1341                           
  1342                           ;one_sw_two_dimmmer.c: 1147: COPY_FLAG=2;
  1343  05AE  3002               	movlw	2
  1344  05AF                     L1:	
  1345  05AF  0020               	movlb	0	; select bank0
  1346  05B0  00CB               	movwf	_COPY_FLAG
  1347  05B1  3000               	movlw	0
  1348  05B2  00CC               	movwf	_COPY_FLAG+1
  1349                           
  1350                           ;one_sw_two_dimmmer.c: 1148: break;
  1351  05B3  2E12               	goto	l6691
  1352  05B4                     l6669:	
  1353  05B4  3001               	movlw	1
  1354  05B5  0021               	movlb	1	; select bank1
  1355  05B6  07EC               	addwf	main@k^(0+128),f
  1356  05B7  3000               	movlw	0
  1357  05B8  3DED               	addwfc	(main@k+1)^(0+128),f
  1358  05B9  2D27               	goto	L3
  1359  05BA                     l6671:	
  1360                           ;one_sw_two_dimmmer.c: 1149: }
  1361                           ;one_sw_two_dimmmer.c: 1150: }
  1362                           ;one_sw_two_dimmmer.c: 1151: }
  1363                           
  1364                           
  1365                           ;one_sw_two_dimmmer.c: 1152: else
  1366                           ;one_sw_two_dimmmer.c: 1153: {
  1367                           ;one_sw_two_dimmmer.c: 1154: _delay((unsigned long)((10)*(16000000/4000.0))); TX1REG='P'
      +                          ; _delay((unsigned long)((1)*(16000000/4000.0))); TX1REG='K'; _delay((unsigned long)((1)
      +                          *(16000000/4000.0)));
  1368  05BA  3034               	movlw	52
  1369  05BB  0020               	movlb	0	; select bank0
  1370  05BC  00BF               	movwf	??_main
  1371  05BD  30F1               	movlw	241
  1372  05BE                     u2747:	
  1373  05BE  0B89               	decfsz	9,f
  1374  05BF  2DBE               	goto	u2747
  1375  05C0  0BBF               	decfsz	??_main,f
  1376  05C1  2DBE               	goto	u2747
  1377  05C2  3200               	nop2
  1378  05C3  3050               	movlw	80
  1379  05C4  0023               	movlb	3	; select bank3
  1380  05C5  009A               	movwf	26	;volatile
  1381  05C6  3006               	movlw	6
  1382  05C7  0020               	movlb	0	; select bank0
  1383  05C8  00BF               	movwf	??_main
  1384  05C9  3030               	movlw	48
  1385  05CA                     u2757:	
  1386  05CA  0B89               	decfsz	9,f
  1387  05CB  2DCA               	goto	u2757
  1388  05CC  0BBF               	decfsz	??_main,f
  1389  05CD  2DCA               	goto	u2757
  1390  05CE  0000               	nop
  1391  05CF  304B               	movlw	75
  1392  05D0  0023               	movlb	3	; select bank3
  1393  05D1  009A               	movwf	26	;volatile
  1394  05D2  3006               	movlw	6
  1395  05D3  0020               	movlb	0	; select bank0
  1396  05D4  00BF               	movwf	??_main
  1397  05D5  3030               	movlw	48
  1398  05D6                     u2767:	
  1399  05D6  0B89               	decfsz	9,f
  1400  05D7  2DD6               	goto	u2767
  1401  05D8  0BBF               	decfsz	??_main,f
  1402  05D9  2DD6               	goto	u2767
  1403  05DA  0000               	nop
  1404                           
  1405                           ;one_sw_two_dimmmer.c: 1155: i=0; RC1STAbits.SPEN=0; RC1STAbits.SPEN=1;
  1406  05DB  0020               	movlb	0	; select bank0
  1407  05DC  01DB               	clrf	_i
  1408  05DD  01DC               	clrf	_i+1
  1409  05DE  0023               	movlb	3	; select bank3
  1410  05DF  139D               	bcf	29,7	;volatile
  1411  05E0  179D               	bsf	29,7	;volatile
  1412                           
  1413                           ;one_sw_two_dimmmer.c: 1156: for(int k = 0; k< 15; k++)
  1414  05E1  0021               	movlb	1	; select bank1
  1415  05E2  01EA               	clrf	main@k_667^(0+128)
  1416  05E3  01EB               	clrf	(main@k_667+1)^(0+128)
  1417  05E4  086B               	movf	(main@k_667+1)^(0+128),w
  1418  05E5  3A80               	xorlw	128
  1419  05E6  0020               	movlb	0	; select bank0
  1420  05E7  00BF               	movwf	??_main
  1421  05E8  3080               	movlw	128
  1422  05E9  023F               	subwf	??_main,w
  1423  05EA  1D03               	skipz
  1424  05EB  2DEF               	goto	u2455
  1425  05EC  300F               	movlw	15
  1426  05ED  0021               	movlb	1	; select bank1
  1427  05EE  026A               	subwf	main@k_667^(0+128),w
  1428  05EF                     u2455:	
  1429  05EF  1803               	btfsc	3,0
  1430  05F0  2E0F               	goto	l6689
  1431  05F1                     l6683:	
  1432                           
  1433                           ;one_sw_two_dimmmer.c: 1157: {
  1434                           ;one_sw_two_dimmmer.c: 1158: name[k] = '#';
  1435  05F1  3023               	movlw	35
  1436  05F2  0020               	movlb	0	; select bank0
  1437  05F3  00BF               	movwf	??_main
  1438  05F4  0021               	movlb	1	; select bank1
  1439  05F5  086A               	movf	main@k_667^(0+128),w
  1440  05F6  3E44               	addlw	(low (_name| (0+256)))& (0+255)
  1441  05F7  0086               	movwf	6
  1442  05F8  3001               	movlw	1	; select bank2/3
  1443  05F9  0087               	movwf	7
  1444  05FA  0020               	movlb	0	; select bank0
  1445  05FB  083F               	movf	??_main,w
  1446  05FC  0081               	movwf	1
  1447  05FD  3001               	movlw	1
  1448  05FE  0021               	movlb	1	; select bank1
  1449  05FF  07EA               	addwf	main@k_667^(0+128),f
  1450  0600  3000               	movlw	0
  1451  0601  3DEB               	addwfc	(main@k_667+1)^(0+128),f
  1452  0602  086B               	movf	(main@k_667+1)^(0+128),w
  1453  0603  3A80               	xorlw	128
  1454  0604  0020               	movlb	0	; select bank0
  1455  0605  00BF               	movwf	??_main
  1456  0606  3080               	movlw	128
  1457  0607  023F               	subwf	??_main,w
  1458  0608  1D03               	skipz
  1459  0609  2E0D               	goto	u2465
  1460  060A  300F               	movlw	15
  1461  060B  0021               	movlb	1	; select bank1
  1462  060C  026A               	subwf	main@k_667^(0+128),w
  1463  060D                     u2465:	
  1464  060D  1C03               	skipc
  1465  060E  2DF1               	goto	l6683
  1466  060F                     l6689:	
  1467                           
  1468                           ;one_sw_two_dimmmer.c: 1159: }
  1469                           ;one_sw_two_dimmmer.c: 1162: COPY_FLAG=0;
  1470  060F  0020               	movlb	0	; select bank0
  1471  0610  01CB               	clrf	_COPY_FLAG
  1472  0611  01CC               	clrf	_COPY_FLAG+1
  1473  0612                     l6691:	
  1474                           
  1475                           ;one_sw_two_dimmmer.c: 1163: }
  1476                           ;one_sw_two_dimmmer.c: 1166: if(COPY_FLAG==1)
  1477  0612  0020               	movlb	0	; select bank0
  1478  0613  034B               	decf	_COPY_FLAG,w
  1479  0614  044C               	iorwf	_COPY_FLAG+1,w
  1480  0615  1D03               	btfss	3,2
  1481  0616  2E20               	goto	l6697
  1482                           
  1483                           ;one_sw_two_dimmmer.c: 1167: {
  1484                           ;one_sw_two_dimmmer.c: 1168: copy_frame(RX_CHK_FLAG_start1,RX_CHK_FLAG_end1);
  1485  0617  0021               	movlb	1	; select bank1
  1486  0618  085F               	movf	(main@RX_CHK_FLAG_start1+1)^(0+128),w
  1487  0619  00F3               	movwf	copy_frame@start+1
  1488  061A  085E               	movf	main@RX_CHK_FLAG_start1^(0+128),w
  1489  061B  00F2               	movwf	copy_frame@start
  1490  061C  0863               	movf	(main@RX_CHK_FLAG_end1+1)^(0+128),w
  1491  061D  00F5               	movwf	copy_frame@end+1
  1492  061E  0862               	movf	main@RX_CHK_FLAG_end1^(0+128),w
  1493  061F  2E2E               	goto	L2
  1494  0620                     l6697:	
  1495                           ;one_sw_two_dimmmer.c: 1171: }
  1496                           
  1497                           ;one_sw_two_dimmmer.c: 1170: ACTION(copy[2], copy[3], copy[4], copy[5], copy[6], copy[7]
      +                          ,copy[8]);
  1498                           
  1499                           
  1500                           ;one_sw_two_dimmmer.c: 1172: else if(COPY_FLAG==2)
  1501  0620  3002               	movlw	2
  1502  0621  0020               	movlb	0	; select bank0
  1503  0622  064B               	xorwf	_COPY_FLAG,w
  1504  0623  044C               	iorwf	_COPY_FLAG+1,w
  1505  0624  1D03               	btfss	3,2
  1506  0625  2E5B               	goto	l6703
  1507                           
  1508                           ;one_sw_two_dimmmer.c: 1173: {
  1509                           ;one_sw_two_dimmmer.c: 1174: copy_frame(RX_CHK_FLAG_start2,RX_CHK_FLAG_end2);
  1510  0626  0021               	movlb	1	; select bank1
  1511  0627  0861               	movf	(main@RX_CHK_FLAG_start2+1)^(0+128),w
  1512  0628  00F3               	movwf	copy_frame@start+1
  1513  0629  0860               	movf	main@RX_CHK_FLAG_start2^(0+128),w
  1514  062A  00F2               	movwf	copy_frame@start
  1515  062B  0865               	movf	(main@RX_CHK_FLAG_end2+1)^(0+128),w
  1516  062C  00F5               	movwf	copy_frame@end+1
  1517  062D  0864               	movf	main@RX_CHK_FLAG_end2^(0+128),w
  1518  062E                     L2:	
  1519  062E  00F4               	movwf	copy_frame@end
  1520  062F  318E  262A  3184   	fcall	_copy_frame
  1521                           
  1522                           ;one_sw_two_dimmmer.c: 1175: ACTION(copy[2], copy[3], copy[4], copy[5], copy[6], copy[7]
      +                          ,copy[8]);
  1523  0632  0022               	movlb	2	; select bank2
  1524  0633  0823               	movf	(_copy^(0+256)+3),w
  1525  0634  0020               	movlb	0	; select bank0
  1526  0635  00BF               	movwf	??_main
  1527  0636  083F               	movf	??_main,w
  1528  0637  00A6               	movwf	ACTION@Switch_Num_1s
  1529  0638  0022               	movlb	2	; select bank2
  1530  0639  0824               	movf	(_copy^(0+256)+4),w
  1531  063A  0020               	movlb	0	; select bank0
  1532  063B  00C0               	movwf	??_main+1
  1533  063C  0840               	movf	??_main+1,w
  1534  063D  00A7               	movwf	ACTION@sw_status
  1535  063E  0022               	movlb	2	; select bank2
  1536  063F  0825               	movf	(_copy^(0+256)+5),w
  1537  0640  0020               	movlb	0	; select bank0
  1538  0641  00C1               	movwf	??_main+2
  1539  0642  0841               	movf	??_main+2,w
  1540  0643  00A8               	movwf	ACTION@speed_bitHigh
  1541  0644  0022               	movlb	2	; select bank2
  1542  0645  0826               	movf	(_copy^(0+256)+6),w
  1543  0646  0020               	movlb	0	; select bank0
  1544  0647  00C2               	movwf	??_main+3
  1545  0648  0842               	movf	??_main+3,w
  1546  0649  00A9               	movwf	ACTION@speed_bitLow
  1547  064A  0022               	movlb	2	; select bank2
  1548  064B  0827               	movf	(_copy^(0+256)+7),w
  1549  064C  0020               	movlb	0	; select bank0
  1550  064D  00C3               	movwf	??_main+4
  1551  064E  0843               	movf	??_main+4,w
  1552  064F  00AA               	movwf	ACTION@parent
  1553  0650  0022               	movlb	2	; select bank2
  1554  0651  0828               	movf	(_copy^(0+256)+8),w
  1555  0652  0020               	movlb	0	; select bank0
  1556  0653  00C4               	movwf	??_main+5
  1557  0654  0844               	movf	??_main+5,w
  1558  0655  00AB               	movwf	ACTION@finalFrameStat
  1559  0656  0022               	movlb	2	; select bank2
  1560  0657  0822               	movf	(_copy^(0+256)+2),w
  1561  0658  318E  26CD  3184   	fcall	_ACTION
  1562  065B                     l6703:	
  1563                           
  1564                           ;one_sw_two_dimmmer.c: 1176: }
  1565                           ;one_sw_two_dimmmer.c: 1177: }
  1566                           ;one_sw_two_dimmmer.c: 1183: if(child_LOCK[1]==0 && RA5==0 && M1==0)
  1567  065B  0021               	movlb	1	; select bank1
  1568  065C  0822               	movf	(_child_LOCK^(0+128)+2),w
  1569  065D  0423               	iorwf	((_child_LOCK+1)^(0+128)+2),w
  1570  065E  1D03               	btfss	3,2
  1571  065F  2E91               	goto	l6721
  1572  0660  0020               	movlb	0	; select bank0
  1573  0661  1A8C               	btfsc	12,5	;volatile
  1574  0662  2E91               	goto	l6721
  1575  0663  0849               	movf	_M1,w
  1576  0664  044A               	iorwf	_M1+1,w
  1577  0665  1D03               	btfss	3,2
  1578  0666  2E91               	goto	l6721
  1579                           
  1580                           ;one_sw_two_dimmmer.c: 1184: {
  1581                           ;one_sw_two_dimmmer.c: 1185: if(man==1)
  1582  0667  035F               	decf	_man,w
  1583  0668  0460               	iorwf	_man+1,w
  1584  0669  1D03               	btfss	3,2
  1585  066A  2E88               	goto	l6717
  1586                           
  1587                           ;one_sw_two_dimmmer.c: 1186: {
  1588                           ;one_sw_two_dimmmer.c: 1187: st[1]='R'; st[2]='0'; st[3]='0'; st[4]='1'; writeUART(st+1)
      +                          ; RF0=0;
  1589  066B  3052               	movlw	82
  1590  066C  00BF               	movwf	??_main
  1591  066D  083F               	movf	??_main,w
  1592  066E  0021               	movlb	1	; select bank1
  1593  066F  00B5               	movwf	(_st^(0+128)+1)
  1594  0670  3030               	movlw	48
  1595  0671  0020               	movlb	0	; select bank0
  1596  0672  00BF               	movwf	??_main
  1597  0673  083F               	movf	??_main,w
  1598  0674  0021               	movlb	1	; select bank1
  1599  0675  00B6               	movwf	(_st^(0+128)+2)
  1600  0676  3030               	movlw	48
  1601  0677  0020               	movlb	0	; select bank0
  1602  0678  00BF               	movwf	??_main
  1603  0679  083F               	movf	??_main,w
  1604  067A  0021               	movlb	1	; select bank1
  1605  067B  00B7               	movwf	(_st^(0+128)+3)
  1606  067C  3031               	movlw	49
  1607  067D  0020               	movlb	0	; select bank0
  1608  067E  00BF               	movwf	??_main
  1609  067F  083F               	movf	??_main,w
  1610  0680  0021               	movlb	1	; select bank1
  1611  0681  00B8               	movwf	(_st^(0+128)+4)
  1612  0682  30B5               	movlw	(low ((_st| 0+1)))& (0+255)
  1613  0683  318D  258A  3184   	fcall	_writeUART
  1614  0686  0025               	movlb	5	; select bank5
  1615  0687  100C               	bcf	12,0	;volatile
  1616  0688                     l6717:	
  1617                           
  1618                           ;one_sw_two_dimmmer.c: 1188: }
  1619                           ;one_sw_two_dimmmer.c: 1189: M1=1; man=1;
  1620  0688  3001               	movlw	1
  1621  0689  0020               	movlb	0	; select bank0
  1622  068A  00C9               	movwf	_M1
  1623  068B  3000               	movlw	0
  1624  068C  00CA               	movwf	_M1+1
  1625  068D  3001               	movlw	1
  1626  068E  00DF               	movwf	_man
  1627  068F  3000               	movlw	0
  1628  0690  00E0               	movwf	_man+1
  1629  0691                     l6721:	
  1630                           
  1631                           ;one_sw_two_dimmmer.c: 1190: }
  1632                           ;one_sw_two_dimmmer.c: 1193: if(child_LOCK[1]==0 && RA5==1 && M1==1)
  1633  0691  0021               	movlb	1	; select bank1
  1634  0692  0822               	movf	(_child_LOCK^(0+128)+2),w
  1635  0693  0423               	iorwf	((_child_LOCK+1)^(0+128)+2),w
  1636  0694  1D03               	btfss	3,2
  1637  0695  2EC5               	goto	l6739
  1638  0696  0020               	movlb	0	; select bank0
  1639  0697  1E8C               	btfss	12,5	;volatile
  1640  0698  2EC5               	goto	l6739
  1641  0699  0349               	decf	_M1,w
  1642  069A  044A               	iorwf	_M1+1,w
  1643  069B  1D03               	btfss	3,2
  1644  069C  2EC5               	goto	l6739
  1645                           
  1646                           ;one_sw_two_dimmmer.c: 1194: {
  1647                           ;one_sw_two_dimmmer.c: 1195: if(man==1)
  1648  069D  035F               	decf	_man,w
  1649  069E  0460               	iorwf	_man+1,w
  1650  069F  1D03               	btfss	3,2
  1651  06A0  2EBE               	goto	l6735
  1652                           
  1653                           ;one_sw_two_dimmmer.c: 1196: {
  1654                           ;one_sw_two_dimmmer.c: 1197: st[1]='R'; st[2]='1'; st[3]='0'; st[4]='1'; writeUART(st+1)
      +                          ; RF0=1;
  1655  06A1  3052               	movlw	82
  1656  06A2  00BF               	movwf	??_main
  1657  06A3  083F               	movf	??_main,w
  1658  06A4  0021               	movlb	1	; select bank1
  1659  06A5  00B5               	movwf	(_st^(0+128)+1)
  1660  06A6  3031               	movlw	49
  1661  06A7  0020               	movlb	0	; select bank0
  1662  06A8  00BF               	movwf	??_main
  1663  06A9  083F               	movf	??_main,w
  1664  06AA  0021               	movlb	1	; select bank1
  1665  06AB  00B6               	movwf	(_st^(0+128)+2)
  1666  06AC  3030               	movlw	48
  1667  06AD  0020               	movlb	0	; select bank0
  1668  06AE  00BF               	movwf	??_main
  1669  06AF  083F               	movf	??_main,w
  1670  06B0  0021               	movlb	1	; select bank1
  1671  06B1  00B7               	movwf	(_st^(0+128)+3)
  1672  06B2  3031               	movlw	49
  1673  06B3  0020               	movlb	0	; select bank0
  1674  06B4  00BF               	movwf	??_main
  1675  06B5  083F               	movf	??_main,w
  1676  06B6  0021               	movlb	1	; select bank1
  1677  06B7  00B8               	movwf	(_st^(0+128)+4)
  1678  06B8  30B5               	movlw	(low ((_st| 0+1)))& (0+255)
  1679  06B9  318D  258A  3184   	fcall	_writeUART
  1680  06BC  0025               	movlb	5	; select bank5
  1681  06BD  140C               	bsf	12,0	;volatile
  1682  06BE                     l6735:	
  1683                           
  1684                           ;one_sw_two_dimmmer.c: 1198: }
  1685                           ;one_sw_two_dimmmer.c: 1199: M1=0; man=1;
  1686  06BE  0020               	movlb	0	; select bank0
  1687  06BF  01C9               	clrf	_M1
  1688  06C0  01CA               	clrf	_M1+1
  1689  06C1  3001               	movlw	1
  1690  06C2  00DF               	movwf	_man
  1691  06C3  3000               	movlw	0
  1692  06C4  00E0               	movwf	_man+1
  1693  06C5                     l6739:	
  1694                           
  1695                           ;one_sw_two_dimmmer.c: 1200: }
  1696                           ;one_sw_two_dimmmer.c: 1221: if(child_LOCK[3]==0 && RF3==0 && M3==0)
  1697  06C5  0021               	movlb	1	; select bank1
  1698  06C6  0826               	movf	(_child_LOCK^(0+128)+6),w
  1699  06C7  0427               	iorwf	((_child_LOCK+1)^(0+128)+6),w
  1700  06C8  1D03               	btfss	3,2
  1701  06C9  2EFE               	goto	l6759
  1702  06CA  0025               	movlb	5	; select bank5
  1703  06CB  198C               	btfsc	12,3	;volatile
  1704  06CC  2EFE               	goto	l6759
  1705  06CD  0020               	movlb	0	; select bank0
  1706  06CE  0847               	movf	_M3,w
  1707  06CF  0448               	iorwf	_M3+1,w
  1708  06D0  1D03               	btfss	3,2
  1709  06D1  2EFE               	goto	l6759
  1710                           
  1711                           ;one_sw_two_dimmmer.c: 1222: {
  1712                           ;one_sw_two_dimmmer.c: 1224: if(man==1)
  1713  06D2  035F               	decf	_man,w
  1714  06D3  0460               	iorwf	_man+1,w
  1715  06D4  1D03               	btfss	3,2
  1716  06D5  2EF6               	goto	l6755
  1717                           
  1718                           ;one_sw_two_dimmmer.c: 1225: {
  1719                           ;one_sw_two_dimmmer.c: 1226: st[9]='R'; st[10]='0'; st[11]='0'; st[12]='2'; writeUART(st
      +                          +9); FAN_FLAG1=0;
  1720  06D6  3052               	movlw	82
  1721  06D7  00BF               	movwf	??_main
  1722  06D8  083F               	movf	??_main,w
  1723  06D9  0021               	movlb	1	; select bank1
  1724  06DA  00BD               	movwf	(_st^(0+128)+9)
  1725  06DB  3030               	movlw	48
  1726  06DC  0020               	movlb	0	; select bank0
  1727  06DD  00BF               	movwf	??_main
  1728  06DE  083F               	movf	??_main,w
  1729  06DF  0021               	movlb	1	; select bank1
  1730  06E0  00BE               	movwf	(_st^(0+128)+10)
  1731  06E1  3030               	movlw	48
  1732  06E2  0020               	movlb	0	; select bank0
  1733  06E3  00BF               	movwf	??_main
  1734  06E4  083F               	movf	??_main,w
  1735  06E5  0021               	movlb	1	; select bank1
  1736  06E6  00BF               	movwf	(_st^(0+128)+11)
  1737  06E7  3032               	movlw	50
  1738  06E8  0020               	movlb	0	; select bank0
  1739  06E9  00BF               	movwf	??_main
  1740  06EA  083F               	movf	??_main,w
  1741  06EB  0021               	movlb	1	; select bank1
  1742  06EC  00C0               	movwf	(_st^(0+128)+12)
  1743  06ED  30BD               	movlw	(low ((_st| 0+9)))& (0+255)
  1744  06EE  318D  258A  3184   	fcall	_writeUART
  1745  06F1  0021               	movlb	1	; select bank1
  1746  06F2  01D6               	clrf	_FAN_FLAG1^(0+128)
  1747  06F3  01D7               	clrf	(_FAN_FLAG1+1)^(0+128)
  1748                           
  1749                           ;one_sw_two_dimmmer.c: 1227: RA2=1;
  1750  06F4  0020               	movlb	0	; select bank0
  1751  06F5  150C               	bsf	12,2	;volatile
  1752  06F6                     l6755:	
  1753                           
  1754                           ;one_sw_two_dimmmer.c: 1228: }
  1755                           ;one_sw_two_dimmmer.c: 1229: M3=1;
  1756  06F6  3001               	movlw	1
  1757  06F7  00C7               	movwf	_M3
  1758  06F8  3000               	movlw	0
  1759  06F9  00C8               	movwf	_M3+1
  1760                           
  1761                           ;one_sw_two_dimmmer.c: 1230: man=1;
  1762  06FA  3001               	movlw	1
  1763  06FB  00DF               	movwf	_man
  1764  06FC  3000               	movlw	0
  1765  06FD  00E0               	movwf	_man+1
  1766  06FE                     l6759:	
  1767                           
  1768                           ;one_sw_two_dimmmer.c: 1231: }
  1769                           ;one_sw_two_dimmmer.c: 1233: if( child_LOCK[3]==0 && RF3==1 && M3==1)
  1770  06FE  0021               	movlb	1	; select bank1
  1771  06FF  0826               	movf	(_child_LOCK^(0+128)+6),w
  1772  0700  0427               	iorwf	((_child_LOCK+1)^(0+128)+6),w
  1773  0701  1D03               	btfss	3,2
  1774  0702  2F35               	goto	l6779
  1775  0703  0025               	movlb	5	; select bank5
  1776  0704  1D8C               	btfss	12,3	;volatile
  1777  0705  2F35               	goto	l6779
  1778  0706  0020               	movlb	0	; select bank0
  1779  0707  0347               	decf	_M3,w
  1780  0708  0448               	iorwf	_M3+1,w
  1781  0709  1D03               	btfss	3,2
  1782  070A  2F35               	goto	l6779
  1783                           
  1784                           ;one_sw_two_dimmmer.c: 1234: {
  1785                           ;one_sw_two_dimmmer.c: 1236: if(man==1)
  1786  070B  035F               	decf	_man,w
  1787  070C  0460               	iorwf	_man+1,w
  1788  070D  1D03               	btfss	3,2
  1789  070E  2F2F               	goto	l6775
  1790                           
  1791                           ;one_sw_two_dimmmer.c: 1237: {
  1792                           ;one_sw_two_dimmmer.c: 1238: st[9]='R'; st[10]='1'; st[11]='0'; st[12]='2'; writeUART(st
      +                          +9);FAN_FLAG1=0;
  1793  070F  3052               	movlw	82
  1794  0710  00BF               	movwf	??_main
  1795  0711  083F               	movf	??_main,w
  1796  0712  0021               	movlb	1	; select bank1
  1797  0713  00BD               	movwf	(_st^(0+128)+9)
  1798  0714  3031               	movlw	49
  1799  0715  0020               	movlb	0	; select bank0
  1800  0716  00BF               	movwf	??_main
  1801  0717  083F               	movf	??_main,w
  1802  0718  0021               	movlb	1	; select bank1
  1803  0719  00BE               	movwf	(_st^(0+128)+10)
  1804  071A  3030               	movlw	48
  1805  071B  0020               	movlb	0	; select bank0
  1806  071C  00BF               	movwf	??_main
  1807  071D  083F               	movf	??_main,w
  1808  071E  0021               	movlb	1	; select bank1
  1809  071F  00BF               	movwf	(_st^(0+128)+11)
  1810  0720  3032               	movlw	50
  1811  0721  0020               	movlb	0	; select bank0
  1812  0722  00BF               	movwf	??_main
  1813  0723  083F               	movf	??_main,w
  1814  0724  0021               	movlb	1	; select bank1
  1815  0725  00C0               	movwf	(_st^(0+128)+12)
  1816  0726  30BD               	movlw	(low ((_st| 0+9)))& (0+255)
  1817  0727  318D  258A  3184   	fcall	_writeUART
  1818  072A  0021               	movlb	1	; select bank1
  1819  072B  01D6               	clrf	_FAN_FLAG1^(0+128)
  1820  072C  01D7               	clrf	(_FAN_FLAG1+1)^(0+128)
  1821                           
  1822                           ;one_sw_two_dimmmer.c: 1239: RA2=0;
  1823  072D  0020               	movlb	0	; select bank0
  1824  072E  110C               	bcf	12,2	;volatile
  1825  072F                     l6775:	
  1826                           
  1827                           ;one_sw_two_dimmmer.c: 1240: }
  1828                           ;one_sw_two_dimmmer.c: 1241: M3=0;
  1829  072F  01C7               	clrf	_M3
  1830  0730  01C8               	clrf	_M3+1
  1831                           
  1832                           ;one_sw_two_dimmmer.c: 1242: man=1;
  1833  0731  3001               	movlw	1
  1834  0732  00DF               	movwf	_man
  1835  0733  3000               	movlw	0
  1836  0734  00E0               	movwf	_man+1
  1837  0735                     l6779:	
  1838                           
  1839                           ;one_sw_two_dimmmer.c: 1243: }
  1840                           ;one_sw_two_dimmmer.c: 1245: if(child_LOCK[5]==0 && RF5==0 && M4==0)
  1841  0735  0021               	movlb	1	; select bank1
  1842  0736  082A               	movf	(_child_LOCK^(0+128)+10),w
  1843  0737  042B               	iorwf	((_child_LOCK+1)^(0+128)+10),w
  1844  0738  1D03               	btfss	3,2
  1845  0739  2F6E               	goto	l6799
  1846  073A  0025               	movlb	5	; select bank5
  1847  073B  1A8C               	btfsc	12,5	;volatile
  1848  073C  2F6E               	goto	l6799
  1849  073D  0020               	movlb	0	; select bank0
  1850  073E  0845               	movf	_M4,w
  1851  073F  0446               	iorwf	_M4+1,w
  1852  0740  1D03               	btfss	3,2
  1853  0741  2F6E               	goto	l6799
  1854                           
  1855                           ;one_sw_two_dimmmer.c: 1246: {
  1856                           ;one_sw_two_dimmmer.c: 1248: if(man==1)
  1857  0742  035F               	decf	_man,w
  1858  0743  0460               	iorwf	_man+1,w
  1859  0744  1D03               	btfss	3,2
  1860  0745  2F66               	goto	l6795
  1861                           
  1862                           ;one_sw_two_dimmmer.c: 1249: {
  1863                           ;one_sw_two_dimmmer.c: 1250: st[13]='R'; st[14]='0'; st[15]='0'; st[16]='3'; writeUART(s
      +                          t+13);FAN_FLAG2=0;
  1864  0746  3052               	movlw	82
  1865  0747  00BF               	movwf	??_main
  1866  0748  083F               	movf	??_main,w
  1867  0749  0021               	movlb	1	; select bank1
  1868  074A  00C1               	movwf	(_st^(0+128)+13)
  1869  074B  3030               	movlw	48
  1870  074C  0020               	movlb	0	; select bank0
  1871  074D  00BF               	movwf	??_main
  1872  074E  083F               	movf	??_main,w
  1873  074F  0021               	movlb	1	; select bank1
  1874  0750  00C2               	movwf	(_st^(0+128)+14)
  1875  0751  3030               	movlw	48
  1876  0752  0020               	movlb	0	; select bank0
  1877  0753  00BF               	movwf	??_main
  1878  0754  083F               	movf	??_main,w
  1879  0755  0021               	movlb	1	; select bank1
  1880  0756  00C3               	movwf	(_st^(0+128)+15)
  1881  0757  3033               	movlw	51
  1882  0758  0020               	movlb	0	; select bank0
  1883  0759  00BF               	movwf	??_main
  1884  075A  083F               	movf	??_main,w
  1885  075B  0021               	movlb	1	; select bank1
  1886  075C  00C4               	movwf	(_st^(0+128)+16)
  1887  075D  30C1               	movlw	(low ((_st| 0+13)))& (0+255)
  1888  075E  318D  258A  3184   	fcall	_writeUART
  1889  0761  0021               	movlb	1	; select bank1
  1890  0762  01D4               	clrf	_FAN_FLAG2^(0+128)
  1891  0763  01D5               	clrf	(_FAN_FLAG2+1)^(0+128)
  1892                           
  1893                           ;one_sw_two_dimmmer.c: 1251: RA3=1;
  1894  0764  0020               	movlb	0	; select bank0
  1895  0765  158C               	bsf	12,3	;volatile
  1896  0766                     l6795:	
  1897                           
  1898                           ;one_sw_two_dimmmer.c: 1252: }
  1899                           ;one_sw_two_dimmmer.c: 1253: M4=1;
  1900  0766  3001               	movlw	1
  1901  0767  00C5               	movwf	_M4
  1902  0768  3000               	movlw	0
  1903  0769  00C6               	movwf	_M4+1
  1904                           
  1905                           ;one_sw_two_dimmmer.c: 1254: man=1;
  1906  076A  3001               	movlw	1
  1907  076B  00DF               	movwf	_man
  1908  076C  3000               	movlw	0
  1909  076D  00E0               	movwf	_man+1
  1910  076E                     l6799:	
  1911                           
  1912                           ;one_sw_two_dimmmer.c: 1255: }
  1913                           ;one_sw_two_dimmmer.c: 1257: if(child_LOCK[5]==0 && RF5==1 && M4==1)
  1914  076E  0021               	movlb	1	; select bank1
  1915  076F  082A               	movf	(_child_LOCK^(0+128)+10),w
  1916  0770  042B               	iorwf	((_child_LOCK+1)^(0+128)+10),w
  1917  0771  1D03               	btfss	3,2
  1918  0772  2D07               	goto	l6617
  1919  0773  0025               	movlb	5	; select bank5
  1920  0774  1E8C               	btfss	12,5	;volatile
  1921  0775  2D07               	goto	l6617
  1922  0776  0020               	movlb	0	; select bank0
  1923  0777  0345               	decf	_M4,w
  1924  0778  0446               	iorwf	_M4+1,w
  1925  0779  1D03               	btfss	3,2
  1926  077A  2D07               	goto	l6617
  1927                           
  1928                           ;one_sw_two_dimmmer.c: 1258: {
  1929                           ;one_sw_two_dimmmer.c: 1260: if(man==1)
  1930  077B  035F               	decf	_man,w
  1931  077C  0460               	iorwf	_man+1,w
  1932  077D  1D03               	btfss	3,2
  1933  077E  2F9F               	goto	l6815
  1934                           
  1935                           ;one_sw_two_dimmmer.c: 1261: {
  1936                           ;one_sw_two_dimmmer.c: 1262: st[13]='R'; st[14]='1'; st[15]='0'; st[16]='3'; writeUART(s
      +                          t+13); FAN_FLAG2=0;
  1937  077F  3052               	movlw	82
  1938  0780  00BF               	movwf	??_main
  1939  0781  083F               	movf	??_main,w
  1940  0782  0021               	movlb	1	; select bank1
  1941  0783  00C1               	movwf	(_st^(0+128)+13)
  1942  0784  3031               	movlw	49
  1943  0785  0020               	movlb	0	; select bank0
  1944  0786  00BF               	movwf	??_main
  1945  0787  083F               	movf	??_main,w
  1946  0788  0021               	movlb	1	; select bank1
  1947  0789  00C2               	movwf	(_st^(0+128)+14)
  1948  078A  3030               	movlw	48
  1949  078B  0020               	movlb	0	; select bank0
  1950  078C  00BF               	movwf	??_main
  1951  078D  083F               	movf	??_main,w
  1952  078E  0021               	movlb	1	; select bank1
  1953  078F  00C3               	movwf	(_st^(0+128)+15)
  1954  0790  3033               	movlw	51
  1955  0791  0020               	movlb	0	; select bank0
  1956  0792  00BF               	movwf	??_main
  1957  0793  083F               	movf	??_main,w
  1958  0794  0021               	movlb	1	; select bank1
  1959  0795  00C4               	movwf	(_st^(0+128)+16)
  1960  0796  30C1               	movlw	(low ((_st| 0+13)))& (0+255)
  1961  0797  318D  258A  3184   	fcall	_writeUART
  1962  079A  0021               	movlb	1	; select bank1
  1963  079B  01D4               	clrf	_FAN_FLAG2^(0+128)
  1964  079C  01D5               	clrf	(_FAN_FLAG2+1)^(0+128)
  1965                           
  1966                           ;one_sw_two_dimmmer.c: 1263: RA3=0;
  1967  079D  0020               	movlb	0	; select bank0
  1968  079E  118C               	bcf	12,3	;volatile
  1969  079F                     l6815:	
  1970                           
  1971                           ;one_sw_two_dimmmer.c: 1264: }
  1972                           ;one_sw_two_dimmmer.c: 1265: M4=0;
  1973  079F  01C5               	clrf	_M4
  1974  07A0  01C6               	clrf	_M4+1
  1975                           
  1976                           ;one_sw_two_dimmmer.c: 1266: man=1;
  1977  07A1  3001               	movlw	1
  1978  07A2  00DF               	movwf	_man
  1979  07A3  3000               	movlw	0
  1980  07A4  00E0               	movwf	_man+1
  1981  07A5  2D07               	goto	l6617
  1982  07A6                     __end_of_main:	
  1983                           
  1984                           	psect	text1
  1985  0DDC                     __ptext1:	
  1986 ;; *************** function _pin_manager *****************
  1987 ;; Defined at:
  1988 ;;		line 1697 in file "one_sw_two_dimmmer.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;		None
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;		None
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  1    wreg      void 
  1995 ;; Registers used:
  1996 ;;		status,2
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2006 ;;Total ram usage:        0 bytes
  2007 ;; Hardware stack levels used:    1
  2008 ;; Hardware stack levels required when called:    1
  2009 ;; This function calls:
  2010 ;;		Nothing
  2011 ;; This function is called by:
  2012 ;;		_main
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           
  2017                           ;psect for function _pin_manager
  2018  0DDC                     _pin_manager:	
  2019                           
  2020                           ;one_sw_two_dimmmer.c: 1702: ANSELG=0x00;
  2021                           
  2022                           ;incstack = 0
  2023                           ; Regs used in _pin_manager: [status,2]
  2024  0DDC  0028               	movlb	8	; select bank8
  2025  0DDD  018D               	clrf	13	;volatile
  2026                           
  2027                           ;one_sw_two_dimmmer.c: 1703: TRISGbits.TRISG0=1;
  2028  0DDE  0026               	movlb	6	; select bank6
  2029  0DDF  140D               	bsf	13,0	;volatile
  2030                           
  2031                           ;one_sw_two_dimmmer.c: 1705: WPUG = 0;
  2032  0DE0  0029               	movlb	9	; select bank9
  2033  0DE1  018D               	clrf	13	;volatile
  2034                           
  2035                           ;one_sw_two_dimmmer.c: 1708: ANSELF=0x00;
  2036  0DE2  0028               	movlb	8	; select bank8
  2037  0DE3  018C               	clrf	12	;volatile
  2038                           
  2039                           ;one_sw_two_dimmmer.c: 1709: TRISFbits.TRISF0=0;
  2040  0DE4  0026               	movlb	6	; select bank6
  2041  0DE5  100C               	bcf	12,0	;volatile
  2042                           
  2043                           ;one_sw_two_dimmmer.c: 1710: TRISFbits.TRISF1=0;
  2044  0DE6  108C               	bcf	12,1	;volatile
  2045                           
  2046                           ;one_sw_two_dimmmer.c: 1711: TRISFbits.TRISF2=1;
  2047  0DE7  150C               	bsf	12,2	;volatile
  2048                           
  2049                           ;one_sw_two_dimmmer.c: 1712: TRISFbits.TRISF3=1;
  2050  0DE8  158C               	bsf	12,3	;volatile
  2051                           
  2052                           ;one_sw_two_dimmmer.c: 1714: TRISFbits.TRISF5=1;
  2053  0DE9  168C               	bsf	12,5	;volatile
  2054                           
  2055                           ;one_sw_two_dimmmer.c: 1716: TRISFbits.TRISF7=1;
  2056  0DEA  178C               	bsf	12,7	;volatile
  2057                           
  2058                           ;one_sw_two_dimmmer.c: 1719: WPUE=0x00;
  2059  0DEB  0024               	movlb	4	; select bank4
  2060  0DEC  0190               	clrf	16	;volatile
  2061                           
  2062                           ;one_sw_two_dimmmer.c: 1720: ANSELE=0x00;
  2063  0DED  0023               	movlb	3	; select bank3
  2064  0DEE  0190               	clrf	16	;volatile
  2065                           
  2066                           ;one_sw_two_dimmmer.c: 1721: TRISEbits.TRISE3=1;
  2067  0DEF  0021               	movlb	1	; select bank1
  2068  0DF0  1590               	bsf	16,3	;volatile
  2069                           
  2070                           ;one_sw_two_dimmmer.c: 1722: TRISEbits.TRISE5=0;
  2071  0DF1  1290               	bcf	16,5	;volatile
  2072                           
  2073                           ;one_sw_two_dimmmer.c: 1740: ANSELA = 0x00;
  2074  0DF2  0023               	movlb	3	; select bank3
  2075  0DF3  018C               	clrf	12	;volatile
  2076                           
  2077                           ;one_sw_two_dimmmer.c: 1743: TRISAbits.TRISA2=0;
  2078  0DF4  0021               	movlb	1	; select bank1
  2079  0DF5  110C               	bcf	12,2	;volatile
  2080                           
  2081                           ;one_sw_two_dimmmer.c: 1744: TRISAbits.TRISA3=0;
  2082  0DF6  118C               	bcf	12,3	;volatile
  2083                           
  2084                           ;one_sw_two_dimmmer.c: 1746: TRISAbits.TRISA5=1;
  2085  0DF7  168C               	bsf	12,5	;volatile
  2086                           
  2087                           ;one_sw_two_dimmmer.c: 1751: TRISCbits.TRISC2 = 1;
  2088  0DF8  150E               	bsf	14,2	;volatile
  2089                           
  2090                           ;one_sw_two_dimmmer.c: 1754: TRISCbits.TRISC6 = 0;
  2091  0DF9  130E               	bcf	14,6	;volatile
  2092                           
  2093                           ;one_sw_two_dimmmer.c: 1755: TRISCbits.TRISC7 = 1;
  2094  0DFA  178E               	bsf	14,7	;volatile
  2095  0DFB  0008               	return
  2096  0DFC                     __end_of_pin_manager:	
  2097                           
  2098                           	psect	text2
  2099  0DBE                     __ptext2:	
  2100 ;; *************** function _periperal_init *****************
  2101 ;; Defined at:
  2102 ;;		line 1085 in file "one_sw_two_dimmmer.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;		None
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;		None
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      void 
  2109 ;; Registers used:
  2110 ;;		wreg, status,2, status,0, pclath, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2120 ;;Total ram usage:        0 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; Hardware stack levels required when called:    2
  2123 ;; This function calls:
  2124 ;;		_CCP1_Initialize
  2125 ;;		_CCP3_Initialize
  2126 ;;		_CCP9_Initialize
  2127 ;;		_EUSART_Initialize
  2128 ;;		_TMR1_Initialize
  2129 ;;		_TMR2_Initialize
  2130 ;;		_TMR3_Initialize
  2131 ;;		_TMR4_Initialize
  2132 ;;		_TMR5_Initialize
  2133 ;;		_TMR6_Initialize
  2134 ;; This function is called by:
  2135 ;;		_main
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           
  2140                           ;psect for function _periperal_init
  2141  0DBE                     _periperal_init:	
  2142                           
  2143                           ;one_sw_two_dimmmer.c: 1087: EUSART_Initialize();
  2144                           
  2145                           ;incstack = 0
  2146                           ; Regs used in _periperal_init: [wreg+status,2+status,0+pclath+cstack]
  2147  0DBE  318D  2574  318D   	fcall	_EUSART_Initialize
  2148                           
  2149                           ;one_sw_two_dimmmer.c: 1088: CCP1_Initialize();
  2150  0DC1  3189  21C8  318D   	fcall	_CCP1_Initialize
  2151                           
  2152                           ;one_sw_two_dimmmer.c: 1089: CCP3_Initialize();
  2153  0DC4  318A  2207  318D   	fcall	_CCP3_Initialize
  2154                           
  2155                           ;one_sw_two_dimmmer.c: 1091: CCP9_Initialize();
  2156  0DC7  3189  21FD  318D   	fcall	_CCP9_Initialize
  2157                           
  2158                           ;one_sw_two_dimmmer.c: 1093: TMR1_Initialize();
  2159  0DCA  3189  21D4  318D   	fcall	_TMR1_Initialize
  2160                           
  2161                           ;one_sw_two_dimmmer.c: 1094: TMR3_Initialize();
  2162  0DCD  3189  21E9  318D   	fcall	_TMR3_Initialize
  2163                           
  2164                           ;one_sw_two_dimmmer.c: 1095: TMR2_Initialize();
  2165  0DD0  3189  21F3  318D   	fcall	_TMR2_Initialize
  2166                           
  2167                           ;one_sw_two_dimmmer.c: 1096: TMR4_Initialize();
  2168  0DD3  318A  221A  318D   	fcall	_TMR4_Initialize
  2169                           
  2170                           ;one_sw_two_dimmmer.c: 1097: TMR5_Initialize();
  2171  0DD6  3189  21DF  318D   	fcall	_TMR5_Initialize
  2172                           
  2173                           ;one_sw_two_dimmmer.c: 1098: TMR6_Initialize();
  2174  0DD9  318A  2211         	fcall	_TMR6_Initialize
  2175  0DDB  0008               	return
  2176  0DDC                     __end_of_periperal_init:	
  2177                           
  2178                           	psect	text3
  2179  0A11                     __ptext3:	
  2180 ;; *************** function _TMR6_Initialize *****************
  2181 ;; Defined at:
  2182 ;;		line 1546 in file "one_sw_two_dimmmer.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;		None
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;		None
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2200 ;;Total ram usage:        0 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; Hardware stack levels required when called:    1
  2203 ;; This function calls:
  2204 ;;		Nothing
  2205 ;; This function is called by:
  2206 ;;		_periperal_init
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           
  2211                           ;psect for function _TMR6_Initialize
  2212  0A11                     _TMR6_Initialize:	
  2213                           
  2214                           ;one_sw_two_dimmmer.c: 1551: T6CON = 0x08;
  2215                           
  2216                           ;incstack = 0
  2217                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
  2218  0A11  3008               	movlw	8
  2219  0A12  0028               	movlb	8	; select bank8
  2220  0A13  009E               	movwf	30	;volatile
  2221                           
  2222                           ;one_sw_two_dimmmer.c: 1557: TMR6 = 0x00;
  2223  0A14  019C               	clrf	28	;volatile
  2224                           
  2225                           ;one_sw_two_dimmmer.c: 1560: PIR3bits.TMR6IF = 0;
  2226  0A15  0020               	movlb	0	; select bank0
  2227  0A16  1193               	bcf	19,3	;volatile
  2228                           
  2229                           ;one_sw_two_dimmmer.c: 1563: PIE3bits.TMR6IE = 1;
  2230  0A17  0021               	movlb	1	; select bank1
  2231  0A18  1593               	bsf	19,3	;volatile
  2232  0A19  0008               	return
  2233  0A1A                     __end_of_TMR6_Initialize:	
  2234                           
  2235                           	psect	text4
  2236  09DF                     __ptext4:	
  2237 ;; *************** function _TMR5_Initialize *****************
  2238 ;; Defined at:
  2239 ;;		line 1455 in file "one_sw_two_dimmmer.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;		None
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;		None
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      void 
  2246 ;; Registers used:
  2247 ;;		status,2
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2257 ;;Total ram usage:        0 bytes
  2258 ;; Hardware stack levels used:    1
  2259 ;; Hardware stack levels required when called:    1
  2260 ;; This function calls:
  2261 ;;		Nothing
  2262 ;; This function is called by:
  2263 ;;		_periperal_init
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           
  2268                           ;psect for function _TMR5_Initialize
  2269  09DF                     _TMR5_Initialize:	
  2270                           
  2271                           ;one_sw_two_dimmmer.c: 1460: T5CON = 0x00;
  2272                           
  2273                           ;incstack = 0
  2274                           ; Regs used in _TMR5_Initialize: [status,2]
  2275  09DF  0028               	movlb	8	; select bank8
  2276  09E0  019A               	clrf	26	;volatile
  2277                           
  2278                           ;one_sw_two_dimmmer.c: 1463: T5GCON = 0x00;
  2279  09E1  019B               	clrf	27	;volatile
  2280                           
  2281                           ;one_sw_two_dimmmer.c: 1466: TMR5H = 0x00;
  2282  09E2  0199               	clrf	25	;volatile
  2283                           
  2284                           ;one_sw_two_dimmmer.c: 1469: TMR5L = 0x00;
  2285  09E3  0198               	clrf	24	;volatile
  2286                           
  2287                           ;one_sw_two_dimmmer.c: 1472: PIR3bits.TMR5IF = 0;
  2288  09E4  0020               	movlb	0	; select bank0
  2289  09E5  1113               	bcf	19,2	;volatile
  2290                           
  2291                           ;one_sw_two_dimmmer.c: 1475: PIE3bits.TMR5IE = 1;
  2292  09E6  0021               	movlb	1	; select bank1
  2293  09E7  1513               	bsf	19,2	;volatile
  2294  09E8  0008               	return
  2295  09E9                     __end_of_TMR5_Initialize:	
  2296                           
  2297                           	psect	text5
  2298  0A1A                     __ptext5:	
  2299 ;; *************** function _TMR4_Initialize *****************
  2300 ;; Defined at:
  2301 ;;		line 1526 in file "one_sw_two_dimmmer.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;		None
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;		None
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  1    wreg      void 
  2308 ;; Registers used:
  2309 ;;		wreg, status,2
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2319 ;;Total ram usage:        0 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    1
  2322 ;; This function calls:
  2323 ;;		Nothing
  2324 ;; This function is called by:
  2325 ;;		_periperal_init
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           
  2330                           ;psect for function _TMR4_Initialize
  2331  0A1A                     _TMR4_Initialize:	
  2332                           
  2333                           ;one_sw_two_dimmmer.c: 1531: T4CON = 0x08;
  2334                           
  2335                           ;incstack = 0
  2336                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
  2337  0A1A  3008               	movlw	8
  2338  0A1B  0028               	movlb	8	; select bank8
  2339  0A1C  0097               	movwf	23	;volatile
  2340                           
  2341                           ;one_sw_two_dimmmer.c: 1537: TMR4 = 0x00;
  2342  0A1D  0195               	clrf	21	;volatile
  2343                           
  2344                           ;one_sw_two_dimmmer.c: 1540: PIR3bits.TMR4IF = 0;
  2345  0A1E  0020               	movlb	0	; select bank0
  2346  0A1F  1093               	bcf	19,1	;volatile
  2347                           
  2348                           ;one_sw_two_dimmmer.c: 1543: PIE3bits.TMR4IE = 1;
  2349  0A20  0021               	movlb	1	; select bank1
  2350  0A21  1493               	bsf	19,1	;volatile
  2351  0A22  0008               	return
  2352  0A23                     __end_of_TMR4_Initialize:	
  2353                           
  2354                           	psect	text6
  2355  09E9                     __ptext6:	
  2356 ;; *************** function _TMR3_Initialize *****************
  2357 ;; Defined at:
  2358 ;;		line 1423 in file "one_sw_two_dimmmer.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;		None
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;		None
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  1    wreg      void 
  2365 ;; Registers used:
  2366 ;;		status,2
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2376 ;;Total ram usage:        0 bytes
  2377 ;; Hardware stack levels used:    1
  2378 ;; Hardware stack levels required when called:    1
  2379 ;; This function calls:
  2380 ;;		Nothing
  2381 ;; This function is called by:
  2382 ;;		_periperal_init
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           
  2387                           ;psect for function _TMR3_Initialize
  2388  09E9                     _TMR3_Initialize:	
  2389                           
  2390                           ;one_sw_two_dimmmer.c: 1428: T3CON = 0x00;
  2391                           
  2392                           ;incstack = 0
  2393                           ; Regs used in _TMR3_Initialize: [status,2]
  2394  09E9  0028               	movlb	8	; select bank8
  2395  09EA  0193               	clrf	19	;volatile
  2396                           
  2397                           ;one_sw_two_dimmmer.c: 1431: T3GCON = 0x00;
  2398  09EB  0194               	clrf	20	;volatile
  2399                           
  2400                           ;one_sw_two_dimmmer.c: 1434: TMR3H = 0x00;
  2401  09EC  0192               	clrf	18	;volatile
  2402                           
  2403                           ;one_sw_two_dimmmer.c: 1437: TMR3L = 0x00;
  2404  09ED  0191               	clrf	17	;volatile
  2405                           
  2406                           ;one_sw_two_dimmmer.c: 1440: PIR3bits.TMR3IF = 0;
  2407  09EE  0020               	movlb	0	; select bank0
  2408  09EF  1013               	bcf	19,0	;volatile
  2409                           
  2410                           ;one_sw_two_dimmmer.c: 1443: PIE3bits.TMR3IE = 1;
  2411  09F0  0021               	movlb	1	; select bank1
  2412  09F1  1413               	bsf	19,0	;volatile
  2413  09F2  0008               	return
  2414  09F3                     __end_of_TMR3_Initialize:	
  2415                           
  2416                           	psect	text7
  2417  09F3                     __ptext7:	
  2418 ;; *************** function _TMR2_Initialize *****************
  2419 ;; Defined at:
  2420 ;;		line 1478 in file "one_sw_two_dimmmer.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;		None
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;		None
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg, status,2
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2438 ;;Total ram usage:        0 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; Hardware stack levels required when called:    1
  2441 ;; This function calls:
  2442 ;;		Nothing
  2443 ;; This function is called by:
  2444 ;;		_periperal_init
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           
  2449                           ;psect for function _TMR2_Initialize
  2450  09F3                     _TMR2_Initialize:	
  2451                           
  2452                           ;one_sw_two_dimmmer.c: 1483: T2CON = 0x08;
  2453                           
  2454                           ;incstack = 0
  2455                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  2456  09F3  3008               	movlw	8
  2457  09F4  0020               	movlb	0	; select bank0
  2458  09F5  009C               	movwf	28	;volatile
  2459                           
  2460                           ;one_sw_two_dimmmer.c: 1489: TMR2 = 0x00;
  2461  09F6  019A               	clrf	26	;volatile
  2462                           
  2463                           ;one_sw_two_dimmmer.c: 1492: PIR1bits.TMR2IF = 0;
  2464  09F7  1091               	bcf	17,1	;volatile
  2465                           
  2466                           ;one_sw_two_dimmmer.c: 1495: PIE1bits.TMR2IE = 1;
  2467  09F8  0021               	movlb	1	; select bank1
  2468  09F9  1491               	bsf	17,1	;volatile
  2469                           
  2470                           ;one_sw_two_dimmmer.c: 1496: GIE = 1;
  2471  09FA  178B               	bsf	11,7	;volatile
  2472                           
  2473                           ;one_sw_two_dimmmer.c: 1499: PEIE = 1;
  2474  09FB  170B               	bsf	11,6	;volatile
  2475  09FC  0008               	return
  2476  09FD                     __end_of_TMR2_Initialize:	
  2477                           
  2478                           	psect	text8
  2479  09D4                     __ptext8:	
  2480 ;; *************** function _TMR1_Initialize *****************
  2481 ;; Defined at:
  2482 ;;		line 1391 in file "one_sw_two_dimmmer.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      void 
  2489 ;; Registers used:
  2490 ;;		status,2
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2500 ;;Total ram usage:        0 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    1
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_periperal_init
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           
  2511                           ;psect for function _TMR1_Initialize
  2512  09D4                     _TMR1_Initialize:	
  2513                           
  2514                           ;one_sw_two_dimmmer.c: 1396: T1CON = 0x00;
  2515                           
  2516                           ;incstack = 0
  2517                           ; Regs used in _TMR1_Initialize: [status,2]
  2518  09D4  0020               	movlb	0	; select bank0
  2519  09D5  0198               	clrf	24	;volatile
  2520                           
  2521                           ;one_sw_two_dimmmer.c: 1399: T1GCON = 0x00;
  2522  09D6  0199               	clrf	25	;volatile
  2523                           
  2524                           ;one_sw_two_dimmmer.c: 1402: TMR1H = 0x00;
  2525  09D7  0197               	clrf	23	;volatile
  2526                           
  2527                           ;one_sw_two_dimmmer.c: 1405: TMR1L = 0x00;
  2528  09D8  0196               	clrf	22	;volatile
  2529                           
  2530                           ;one_sw_two_dimmmer.c: 1408: PIR1bits.TMR1IF = 0;
  2531  09D9  1011               	bcf	17,0	;volatile
  2532                           
  2533                           ;one_sw_two_dimmmer.c: 1411: PIE1bits.TMR1IE = 1;
  2534  09DA  0021               	movlb	1	; select bank1
  2535  09DB  1411               	bsf	17,0	;volatile
  2536                           
  2537                           ;one_sw_two_dimmmer.c: 1417: GIE = 1;
  2538  09DC  178B               	bsf	11,7	;volatile
  2539                           
  2540                           ;one_sw_two_dimmmer.c: 1420: PEIE = 1;
  2541  09DD  170B               	bsf	11,6	;volatile
  2542  09DE  0008               	return
  2543  09DF                     __end_of_TMR1_Initialize:	
  2544                           
  2545                           	psect	text9
  2546  0D74                     __ptext9:	
  2547 ;; *************** function _EUSART_Initialize *****************
  2548 ;; Defined at:
  2549 ;;		line 1657 in file "one_sw_two_dimmmer.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;		None
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2567 ;;Total ram usage:        0 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; Hardware stack levels required when called:    1
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_periperal_init
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           
  2578                           ;psect for function _EUSART_Initialize
  2579  0D74                     _EUSART_Initialize:	
  2580                           
  2581                           ;one_sw_two_dimmmer.c: 1660: PIE1bits.RC1IE = 0;
  2582                           
  2583                           ;incstack = 0
  2584                           ; Regs used in _EUSART_Initialize: [wreg]
  2585  0D74  0021               	movlb	1	; select bank1
  2586  0D75  1291               	bcf	17,5	;volatile
  2587                           
  2588                           ;one_sw_two_dimmmer.c: 1661: PIE1bits.TX1IE = 0;
  2589  0D76  1211               	bcf	17,4	;volatile
  2590                           
  2591                           ;one_sw_two_dimmmer.c: 1666: BAUD1CON = 0x0A;
  2592  0D77  300A               	movlw	10
  2593  0D78  0023               	movlb	3	; select bank3
  2594  0D79  009F               	movwf	31	;volatile
  2595                           
  2596                           ;one_sw_two_dimmmer.c: 1669: RC1STA = 0x90;
  2597  0D7A  3090               	movlw	144
  2598  0D7B  009D               	movwf	29	;volatile
  2599                           
  2600                           ;one_sw_two_dimmmer.c: 1672: TX1STA = 0x24;
  2601  0D7C  3024               	movlw	36
  2602  0D7D  009E               	movwf	30	;volatile
  2603                           
  2604                           ;one_sw_two_dimmmer.c: 1677: SP1BRGL = 0xA0;
  2605  0D7E  30A0               	movlw	160
  2606  0D7F  009B               	movwf	27	;volatile
  2607                           
  2608                           ;one_sw_two_dimmmer.c: 1679: SP1BRGH = 0x01;
  2609  0D80  3001               	movlw	1
  2610  0D81  009C               	movwf	28	;volatile
  2611                           
  2612                           ;one_sw_two_dimmmer.c: 1682: GIE = 1;
  2613  0D82  178B               	bsf	11,7	;volatile
  2614                           
  2615                           ;one_sw_two_dimmmer.c: 1685: PEIE = 1;
  2616  0D83  170B               	bsf	11,6	;volatile
  2617                           
  2618                           ;one_sw_two_dimmmer.c: 1688: PIE1bits.RC1IE = 1;
  2619  0D84  0021               	movlb	1	; select bank1
  2620  0D85  1691               	bsf	17,5	;volatile
  2621                           
  2622                           ;one_sw_two_dimmmer.c: 1691: TX1STAbits.TXEN = 1;
  2623  0D86  0023               	movlb	3	; select bank3
  2624  0D87  169E               	bsf	30,5	;volatile
  2625                           
  2626                           ;one_sw_two_dimmmer.c: 1694: RC1STAbits.SPEN = 1;
  2627  0D88  179D               	bsf	29,7	;volatile
  2628  0D89  0008               	return
  2629  0D8A                     __end_of_EUSART_Initialize:	
  2630                           
  2631                           	psect	text10
  2632  09FD                     __ptext10:	
  2633 ;; *************** function _CCP9_Initialize *****************
  2634 ;; Defined at:
  2635 ;;		line 1637 in file "one_sw_two_dimmmer.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;		None
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2653 ;;Total ram usage:        0 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    1
  2656 ;; This function calls:
  2657 ;;		Nothing
  2658 ;; This function is called by:
  2659 ;;		_periperal_init
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           
  2664                           ;psect for function _CCP9_Initialize
  2665  09FD                     _CCP9_Initialize:	
  2666                           
  2667                           ;one_sw_two_dimmmer.c: 1642: CCP9CON = 0x84;
  2668                           
  2669                           ;incstack = 0
  2670                           ; Regs used in _CCP9_Initialize: [wreg+status,2]
  2671  09FD  3084               	movlw	132
  2672  09FE  002C               	movlb	12	; select bank12
  2673  09FF  009C               	movwf	28	;volatile
  2674                           
  2675                           ;one_sw_two_dimmmer.c: 1645: CCPR9H = 0x00;
  2676  0A00  019B               	clrf	27	;volatile
  2677                           
  2678                           ;one_sw_two_dimmmer.c: 1648: CCPR9L = 0x00;
  2679  0A01  019A               	clrf	26	;volatile
  2680                           
  2681                           ;one_sw_two_dimmmer.c: 1651: PIR4bits.CCP9IF = 0;
  2682  0A02  0020               	movlb	0	; select bank0
  2683  0A03  1314               	bcf	20,6	;volatile
  2684                           
  2685                           ;one_sw_two_dimmmer.c: 1654: PIE4bits.CCP9IE = 0;
  2686  0A04  0021               	movlb	1	; select bank1
  2687  0A05  1314               	bcf	20,6	;volatile
  2688  0A06  0008               	return
  2689  0A07                     __end_of_CCP9_Initialize:	
  2690                           
  2691                           	psect	text11
  2692  0A07                     __ptext11:	
  2693 ;; *************** function _CCP3_Initialize *****************
  2694 ;; Defined at:
  2695 ;;		line 1591 in file "one_sw_two_dimmmer.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;		None
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;		None
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg, status,2
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2713 ;;Total ram usage:        0 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    1
  2716 ;; This function calls:
  2717 ;;		Nothing
  2718 ;; This function is called by:
  2719 ;;		_periperal_init
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           
  2724                           ;psect for function _CCP3_Initialize
  2725  0A07                     _CCP3_Initialize:	
  2726                           
  2727                           ;one_sw_two_dimmmer.c: 1596: CCP3CON = 0x84;
  2728                           
  2729                           ;incstack = 0
  2730                           ; Regs used in _CCP3_Initialize: [wreg+status,2]
  2731  0A07  3084               	movlw	132
  2732  0A08  0026               	movlb	6	; select bank6
  2733  0A09  0093               	movwf	19	;volatile
  2734                           
  2735                           ;one_sw_two_dimmmer.c: 1599: CCPR3L = 0x00;
  2736  0A0A  0191               	clrf	17	;volatile
  2737                           
  2738                           ;one_sw_two_dimmmer.c: 1602: CCPR3H = 0x00;
  2739  0A0B  0192               	clrf	18	;volatile
  2740                           
  2741                           ;one_sw_two_dimmmer.c: 1608: PIR3bits.CCP3IF = 0;
  2742  0A0C  0020               	movlb	0	; select bank0
  2743  0A0D  1213               	bcf	19,4	;volatile
  2744                           
  2745                           ;one_sw_two_dimmmer.c: 1611: PIE3bits.CCP3IE = 0;
  2746  0A0E  0021               	movlb	1	; select bank1
  2747  0A0F  1213               	bcf	19,4	;volatile
  2748  0A10  0008               	return
  2749  0A11                     __end_of_CCP3_Initialize:	
  2750                           
  2751                           	psect	text12
  2752  09C8                     __ptext12:	
  2753 ;; *************** function _CCP1_Initialize *****************
  2754 ;; Defined at:
  2755 ;;		line 1566 in file "one_sw_two_dimmmer.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  2772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  2773 ;;Total ram usage:        0 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    1
  2776 ;; This function calls:
  2777 ;;		Nothing
  2778 ;; This function is called by:
  2779 ;;		_periperal_init
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           
  2784                           ;psect for function _CCP1_Initialize
  2785  09C8                     _CCP1_Initialize:	
  2786                           
  2787                           ;one_sw_two_dimmmer.c: 1571: CCP1CON = 0x04;
  2788                           
  2789                           ;incstack = 0
  2790                           ; Regs used in _CCP1_Initialize: [wreg+status,2]
  2791  09C8  3004               	movlw	4
  2792  09C9  0025               	movlb	5	; select bank5
  2793  09CA  0093               	movwf	19	;volatile
  2794                           
  2795                           ;one_sw_two_dimmmer.c: 1575: CCPR1H = 0x00;
  2796  09CB  0192               	clrf	18	;volatile
  2797                           
  2798                           ;one_sw_two_dimmmer.c: 1578: CCPR1L = 0x00;
  2799  09CC  0191               	clrf	17	;volatile
  2800                           
  2801                           ;one_sw_two_dimmmer.c: 1581: PIR1bits.CCP1IF = 0;
  2802  09CD  0020               	movlb	0	; select bank0
  2803  09CE  1111               	bcf	17,2	;volatile
  2804                           
  2805                           ;one_sw_two_dimmmer.c: 1584: PIE1bits.CCP1IE = 1;
  2806  09CF  0021               	movlb	1	; select bank1
  2807  09D0  1511               	bsf	17,2	;volatile
  2808                           
  2809                           ;one_sw_two_dimmmer.c: 1585: GIE = 1;
  2810  09D1  178B               	bsf	11,7	;volatile
  2811                           
  2812                           ;one_sw_two_dimmmer.c: 1588: PEIE = 1;
  2813  09D2  170B               	bsf	11,6	;volatile
  2814  09D3  0008               	return
  2815  09D4                     __end_of_CCP1_Initialize:	
  2816                           
  2817                           	psect	text13
  2818  0E2A                     __ptext13:	
  2819 ;; *************** function _copy_frame *****************
  2820 ;; Defined at:
  2821 ;;		line 1272 in file "one_sw_two_dimmmer.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  start           2    2[COMMON] int 
  2824 ;;  end             2    4[COMMON] int 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  k               2    9[COMMON] int 
  2827 ;;  sw              2    7[COMMON] int 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2837 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0
  2838 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0
  2839 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0
  2840 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0
  2841 ;;Total ram usage:        9 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; Hardware stack levels required when called:    1
  2844 ;; This function calls:
  2845 ;;		Nothing
  2846 ;; This function is called by:
  2847 ;;		_main
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           
  2852                           ;psect for function _copy_frame
  2853  0E2A                     _copy_frame:	
  2854                           
  2855                           ;one_sw_two_dimmmer.c: 1273: int k=0,sw=0;
  2856                           
  2857                           ;incstack = 0
  2858                           ; Regs used in _copy_frame: [wreg+fsr1l+fsr1h+status,2+status,0]
  2859  0E2A  01F9               	clrf	copy_frame@k
  2860  0E2B  01FA               	clrf	copy_frame@k+1
  2861  0E2C  01F7               	clrf	copy_frame@sw
  2862  0E2D  01F8               	clrf	copy_frame@sw+1
  2863                           
  2864                           ;one_sw_two_dimmmer.c: 1274: for(k = start; k< end; k++)
  2865  0E2E  0873               	movf	copy_frame@start+1,w
  2866  0E2F  00FA               	movwf	copy_frame@k+1
  2867  0E30  0872               	movf	copy_frame@start,w
  2868  0E31  00F9               	movwf	copy_frame@k
  2869  0E32                     l589:	
  2870  0E32  087A               	movf	copy_frame@k+1,w
  2871  0E33  3A80               	xorlw	128
  2872  0E34  00F6               	movwf	??_copy_frame
  2873  0E35  0875               	movf	copy_frame@end+1,w
  2874  0E36  3A80               	xorlw	128
  2875  0E37  0276               	subwf	??_copy_frame,w
  2876  0E38  1D03               	skipz
  2877  0E39  2E3C               	goto	u2135
  2878  0E3A  0874               	movf	copy_frame@end,w
  2879  0E3B  0279               	subwf	copy_frame@k,w
  2880  0E3C                     u2135:	
  2881  0E3C  1803               	btfsc	3,0
  2882  0E3D  2E5E               	goto	l6491
  2883                           
  2884                           ;one_sw_two_dimmmer.c: 1275: {
  2885                           ;one_sw_two_dimmmer.c: 1276: copy[sw]=name[k];
  2886  0E3E  0879               	movf	copy_frame@k,w
  2887  0E3F  3E44               	addlw	(low (_name| (0+256)))& (0+255)
  2888  0E40  0086               	movwf	6
  2889  0E41  3001               	movlw	1	; select bank2/3
  2890  0E42  0087               	movwf	7
  2891  0E43  0801               	movf	1,w
  2892  0E44  00F6               	movwf	??_copy_frame
  2893  0E45  0877               	movf	copy_frame@sw,w
  2894  0E46  3E20               	addlw	(low (_copy| (0+256)))& (0+255)
  2895  0E47  0086               	movwf	6
  2896  0E48  3001               	movlw	1	; select bank2/3
  2897  0E49  0087               	movwf	7
  2898  0E4A  0876               	movf	??_copy_frame,w
  2899  0E4B  0081               	movwf	1
  2900                           
  2901                           ;one_sw_two_dimmmer.c: 1277: sw++;
  2902  0E4C  3001               	movlw	1
  2903  0E4D  07F7               	addwf	copy_frame@sw,f
  2904  0E4E  3000               	movlw	0
  2905  0E4F  3DF8               	addwfc	copy_frame@sw+1,f
  2906                           
  2907                           ;one_sw_two_dimmmer.c: 1278: name[k] = '#';
  2908  0E50  3023               	movlw	35
  2909  0E51  00F6               	movwf	??_copy_frame
  2910  0E52  0879               	movf	copy_frame@k,w
  2911  0E53  3E44               	addlw	(low (_name| (0+256)))& (0+255)
  2912  0E54  0086               	movwf	6
  2913  0E55  3001               	movlw	1	; select bank2/3
  2914  0E56  0087               	movwf	7
  2915  0E57  0876               	movf	??_copy_frame,w
  2916  0E58  0081               	movwf	1
  2917  0E59  3001               	movlw	1
  2918  0E5A  07F9               	addwf	copy_frame@k,f
  2919  0E5B  3000               	movlw	0
  2920  0E5C  3DFA               	addwfc	copy_frame@k+1,f
  2921  0E5D  2E32               	goto	l589
  2922  0E5E                     l6491:	
  2923                           
  2924                           ;one_sw_two_dimmmer.c: 1279: }
  2925                           ;one_sw_two_dimmmer.c: 1281: COPY_FLAG=0;
  2926  0E5E  0020               	movlb	0	; select bank0
  2927  0E5F  01CB               	clrf	_COPY_FLAG
  2928  0E60  01CC               	clrf	_COPY_FLAG+1
  2929  0E61  0008               	return
  2930  0E62                     __end_of_copy_frame:	
  2931                           
  2932                           	psect	text14
  2933  0ECD                     __ptext14:	
  2934 ;; *************** function _ACTION *****************
  2935 ;; Defined at:
  2936 ;;		line 1284 in file "one_sw_two_dimmmer.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;  Switch_Num_1    1    wreg     unsigned char 
  2939 ;;  Switch_Num_1    1    6[BANK0 ] unsigned char 
  2940 ;;  sw_status       1    7[BANK0 ] unsigned char 
  2941 ;;  speed_bitHig    1    8[BANK0 ] unsigned char 
  2942 ;;  speed_bitLow    1    9[BANK0 ] unsigned char 
  2943 ;;  parent          1   10[BANK0 ] unsigned char 
  2944 ;;  finalFrameSt    1   11[BANK0 ] unsigned char 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  Switch_Num_1    1   20[BANK0 ] unsigned char 
  2947 ;;  SwNumString     2   23[BANK0 ] unsigned char [2]
  2948 ;;  FanSpeedStri    2   21[BANK0 ] unsigned char [2]
  2949 ;;  child_lock_n    2   18[BANK0 ] int 
  2950 ;;  children        2   16[BANK0 ] int 
  2951 ;;  FanSpeed        2   14[BANK0 ] int 
  2952 ;;  switch_statu    2   29[BANK0 ] int 
  2953 ;;  response_sta    2   27[BANK0 ] int 
  2954 ;;  SwNum           2   25[BANK0 ] int 
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  2964 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0
  2965 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0
  2966 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  2967 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0
  2968 ;;Total ram usage:       25 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; Hardware stack levels required when called:    3
  2971 ;; This function calls:
  2972 ;;		_atoi
  2973 ;;		_writeUART
  2974 ;; This function is called by:
  2975 ;;		_main
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           
  2980                           ;psect for function _ACTION
  2981  0ECD                     _ACTION:	
  2982                           
  2983                           ;incstack = 0
  2984                           ; Regs used in _ACTION: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2985                           ;ACTION@Switch_Num_10s stored from wreg
  2986  0ECD  0020               	movlb	0	; select bank0
  2987  0ECE  00B4               	movwf	ACTION@Switch_Num_10s
  2988                           
  2989                           ;one_sw_two_dimmmer.c: 1286: int response_starts=0;
  2990  0ECF  01BB               	clrf	ACTION@response_starts
  2991  0ED0  01BC               	clrf	ACTION@response_starts+1
  2992                           
  2993                           ;one_sw_two_dimmmer.c: 1287: int switch_status=0;
  2994  0ED1  01BD               	clrf	ACTION@switch_status
  2995  0ED2  01BE               	clrf	ACTION@switch_status+1
  2996                           
  2997                           ;one_sw_two_dimmmer.c: 1288: int SwNum=0;
  2998  0ED3  01B9               	clrf	ACTION@SwNum
  2999  0ED4  01BA               	clrf	ACTION@SwNum+1
  3000                           
  3001                           ;one_sw_two_dimmmer.c: 1290: if(Switch_Num_1s != 'T')
  3002  0ED5  3054               	movlw	84
  3003  0ED6  0626               	xorwf	ACTION@Switch_Num_1s,w
  3004  0ED7  1903               	btfsc	3,2
  3005  0ED8  2FEF               	goto	l6575
  3006                           
  3007                           ;one_sw_two_dimmmer.c: 1291: {
  3008                           ;one_sw_two_dimmmer.c: 1292: unsigned char FanSpeedString[2], SwNumString[2];
  3009                           ;one_sw_two_dimmmer.c: 1293: int FanSpeed=0;
  3010  0ED9  01AE               	clrf	ACTION@FanSpeed
  3011  0EDA  01AF               	clrf	ACTION@FanSpeed+1
  3012                           
  3013                           ;one_sw_two_dimmmer.c: 1295: switch_status=sw_status - '0';
  3014  0EDB  0827               	movf	ACTION@sw_status,w
  3015  0EDC  3ED0               	addlw	208
  3016  0EDD  00BD               	movwf	ACTION@switch_status
  3017  0EDE  30FF               	movlw	255
  3018  0EDF  1803               	skipnc
  3019  0EE0  3000               	movlw	0
  3020  0EE1  00BE               	movwf	ACTION@switch_status+1
  3021                           
  3022                           ;one_sw_two_dimmmer.c: 1297: SwNumString[0]=Switch_Num_10s;
  3023  0EE2  0834               	movf	ACTION@Switch_Num_10s,w
  3024  0EE3  00AC               	movwf	??_ACTION
  3025  0EE4  082C               	movf	??_ACTION,w
  3026  0EE5  00B7               	movwf	ACTION@SwNumString
  3027                           
  3028                           ;one_sw_two_dimmmer.c: 1298: SwNumString[1]=Switch_Num_1s;
  3029  0EE6  0826               	movf	ACTION@Switch_Num_1s,w
  3030  0EE7  00AC               	movwf	??_ACTION
  3031  0EE8  082C               	movf	??_ACTION,w
  3032  0EE9  00B8               	movwf	ACTION@SwNumString+1
  3033                           
  3034                           ;one_sw_two_dimmmer.c: 1299: SwNum=atoi(SwNumString);
  3035  0EEA  3037               	movlw	(low (ACTION@SwNumString| 0))& (0+255)
  3036  0EEB  318E  2662  318E   	fcall	_atoi
  3037  0EEE  0879               	movf	?_atoi+1,w
  3038  0EEF  0020               	movlb	0	; select bank0
  3039  0EF0  00BA               	movwf	ACTION@SwNum+1
  3040  0EF1  0878               	movf	?_atoi,w
  3041  0EF2  00B9               	movwf	ACTION@SwNum
  3042                           
  3043                           ;one_sw_two_dimmmer.c: 1301: FanSpeedString[0] = speed_bitHigh;
  3044  0EF3  0828               	movf	ACTION@speed_bitHigh,w
  3045  0EF4  00AC               	movwf	??_ACTION
  3046  0EF5  082C               	movf	??_ACTION,w
  3047  0EF6  00B5               	movwf	ACTION@FanSpeedString
  3048                           
  3049                           ;one_sw_two_dimmmer.c: 1302: FanSpeedString[1] = speed_bitLow;
  3050  0EF7  0829               	movf	ACTION@speed_bitLow,w
  3051  0EF8  00AC               	movwf	??_ACTION
  3052  0EF9  082C               	movf	??_ACTION,w
  3053  0EFA  00B6               	movwf	ACTION@FanSpeedString+1
  3054                           
  3055                           ;one_sw_two_dimmmer.c: 1303: FanSpeed = atoi(FanSpeedString);
  3056  0EFB  3035               	movlw	(low (ACTION@FanSpeedString| 0))& (0+255)
  3057  0EFC  318E  2662  318E   	fcall	_atoi
  3058  0EFF  0879               	movf	?_atoi+1,w
  3059  0F00  0020               	movlb	0	; select bank0
  3060  0F01  00AF               	movwf	ACTION@FanSpeed+1
  3061  0F02  0878               	movf	?_atoi,w
  3062  0F03  00AE               	movwf	ACTION@FanSpeed
  3063                           
  3064                           ;one_sw_two_dimmmer.c: 1305: int children=parent - '0';
  3065  0F04  082A               	movf	ACTION@parent,w
  3066  0F05  3ED0               	addlw	208
  3067  0F06  00B0               	movwf	ACTION@children
  3068  0F07  30FF               	movlw	255
  3069  0F08  1803               	skipnc
  3070  0F09  3000               	movlw	0
  3071  0F0A  00B1               	movwf	ACTION@children+1
  3072                           
  3073                           ;one_sw_two_dimmmer.c: 1306: int child_lock_num=(2*(SwNum)-1);
  3074  0F0B  083A               	movf	ACTION@SwNum+1,w
  3075  0F0C  00AD               	movwf	??_ACTION+1
  3076  0F0D  0839               	movf	ACTION@SwNum,w
  3077  0F0E  00AC               	movwf	??_ACTION
  3078  0F0F  35AC               	lslf	??_ACTION,f
  3079  0F10  0DAD               	rlf	??_ACTION+1,f
  3080  0F11  082C               	movf	??_ACTION,w
  3081  0F12  3EFF               	addlw	255
  3082  0F13  00B2               	movwf	ACTION@child_lock_num
  3083  0F14  30FF               	movlw	255
  3084  0F15  3D2D               	addwfc	??_ACTION+1,w
  3085  0F16  00B3               	movwf	ACTION@child_lock_num+1
  3086                           
  3087                           ;one_sw_two_dimmmer.c: 1307: child_LOCK[child_lock_num]=children;
  3088  0F17  3532               	lslf	ACTION@child_lock_num,w
  3089  0F18  3EA0               	addlw	(low (_child_LOCK| 0))& (0+255)
  3090  0F19  0086               	movwf	6
  3091  0F1A  0187               	clrf	7
  3092  0F1B  0830               	movf	ACTION@children,w
  3093  0F1C  3FC0               	movwi [0]fsr1
  3094  0F1D  0831               	movf	ACTION@children+1,w
  3095  0F1E  3FC1               	movwi [1]fsr1
  3096                           
  3097                           ;one_sw_two_dimmmer.c: 1309: response_starts=((1+4*(SwNum))-4);
  3098  0F1F  083A               	movf	ACTION@SwNum+1,w
  3099  0F20  00AD               	movwf	??_ACTION+1
  3100  0F21  0839               	movf	ACTION@SwNum,w
  3101  0F22  00AC               	movwf	??_ACTION
  3102  0F23  35AC               	lslf	??_ACTION,f
  3103  0F24  0DAD               	rlf	??_ACTION+1,f
  3104  0F25  35AC               	lslf	??_ACTION,f
  3105  0F26  0DAD               	rlf	??_ACTION+1,f
  3106  0F27  082C               	movf	??_ACTION,w
  3107  0F28  3EFD               	addlw	253
  3108  0F29  00BB               	movwf	ACTION@response_starts
  3109  0F2A  30FF               	movlw	255
  3110  0F2B  3D2D               	addwfc	??_ACTION+1,w
  3111  0F2C  00BC               	movwf	ACTION@response_starts+1
  3112                           
  3113                           ;one_sw_two_dimmmer.c: 1310: st[response_starts++]='G';
  3114  0F2D  3047               	movlw	71
  3115  0F2E  00AC               	movwf	??_ACTION
  3116  0F2F  083B               	movf	ACTION@response_starts,w
  3117  0F30  3EB4               	addlw	(low (_st| 0))& (0+255)
  3118  0F31  0086               	movwf	6
  3119  0F32  0187               	clrf	7
  3120  0F33  082C               	movf	??_ACTION,w
  3121  0F34  0081               	movwf	1
  3122  0F35  3001               	movlw	1
  3123  0F36  07BB               	addwf	ACTION@response_starts,f
  3124  0F37  3000               	movlw	0
  3125  0F38  3DBC               	addwfc	ACTION@response_starts+1,f
  3126                           
  3127                           ;one_sw_two_dimmmer.c: 1311: st[response_starts++]=sw_status;
  3128  0F39  0827               	movf	ACTION@sw_status,w
  3129  0F3A  00AC               	movwf	??_ACTION
  3130  0F3B  083B               	movf	ACTION@response_starts,w
  3131  0F3C  3EB4               	addlw	(low (_st| 0))& (0+255)
  3132  0F3D  0086               	movwf	6
  3133  0F3E  0187               	clrf	7
  3134  0F3F  082C               	movf	??_ACTION,w
  3135  0F40  0081               	movwf	1
  3136  0F41  3001               	movlw	1
  3137  0F42  07BB               	addwf	ACTION@response_starts,f
  3138  0F43  3000               	movlw	0
  3139  0F44  3DBC               	addwfc	ACTION@response_starts+1,f
  3140                           
  3141                           ;one_sw_two_dimmmer.c: 1312: st[response_starts++]=Switch_Num_10s;
  3142  0F45  0834               	movf	ACTION@Switch_Num_10s,w
  3143  0F46  00AC               	movwf	??_ACTION
  3144  0F47  083B               	movf	ACTION@response_starts,w
  3145  0F48  3EB4               	addlw	(low (_st| 0))& (0+255)
  3146  0F49  0086               	movwf	6
  3147  0F4A  0187               	clrf	7
  3148  0F4B  082C               	movf	??_ACTION,w
  3149  0F4C  0081               	movwf	1
  3150  0F4D  3001               	movlw	1
  3151  0F4E  07BB               	addwf	ACTION@response_starts,f
  3152  0F4F  3000               	movlw	0
  3153  0F50  3DBC               	addwfc	ACTION@response_starts+1,f
  3154                           
  3155                           ;one_sw_two_dimmmer.c: 1313: st[response_starts]=Switch_Num_1s;
  3156  0F51  0826               	movf	ACTION@Switch_Num_1s,w
  3157  0F52  00AC               	movwf	??_ACTION
  3158  0F53  083B               	movf	ACTION@response_starts,w
  3159  0F54  3EB4               	addlw	(low (_st| 0))& (0+255)
  3160  0F55  0086               	movwf	6
  3161  0F56  0187               	clrf	7
  3162  0F57  082C               	movf	??_ACTION,w
  3163  0F58  0081               	movwf	1
  3164                           
  3165                           ;one_sw_two_dimmmer.c: 1315: response_starts-=3;
  3166  0F59  30FD               	movlw	253
  3167  0F5A  07BB               	addwf	ACTION@response_starts,f
  3168  0F5B  30FF               	movlw	255
  3169  0F5C  3DBC               	addwfc	ACTION@response_starts+1,f
  3170                           
  3171                           ;one_sw_two_dimmmer.c: 1316: if(finalFrameStat=='1')
  3172  0F5D  3031               	movlw	49
  3173  0F5E  062B               	xorwf	ACTION@finalFrameStat,w
  3174  0F5F  1D03               	btfss	3,2
  3175  0F60  2F66               	goto	l6541
  3176                           
  3177                           ;one_sw_two_dimmmer.c: 1317: {
  3178                           ;one_sw_two_dimmmer.c: 1318: writeUART(st+response_starts);
  3179  0F61  083B               	movf	ACTION@response_starts,w
  3180  0F62  3EB4               	addlw	(low (_st| 0))& (0+255)
  3181  0F63  318D  258A  318E   	fcall	_writeUART
  3182  0F66                     l6541:	
  3183                           
  3184                           ;one_sw_two_dimmmer.c: 1319: }
  3185                           ;one_sw_two_dimmmer.c: 1320: man=0;
  3186  0F66  0020               	movlb	0	; select bank0
  3187  0F67  01DF               	clrf	_man
  3188  0F68  01E0               	clrf	_man+1
  3189                           
  3190                           ;one_sw_two_dimmmer.c: 1321: }
  3191                           ;one_sw_two_dimmmer.c: 1324: switch(SwNum)
  3192  0F69  2FEF               	goto	l6575
  3193  0F6A                     l598:	
  3194                           ;one_sw_two_dimmmer.c: 1325: {
  3195                           ;one_sw_two_dimmmer.c: 1326: case 1:
  3196                           
  3197                           
  3198                           ;one_sw_two_dimmmer.c: 1327: RF0=switch_status;
  3199  0F6A  1C3D               	btfss	ACTION@switch_status,0
  3200  0F6B  2F6F               	goto	u2160
  3201  0F6C  0025               	movlb	5	; select bank5
  3202  0F6D  140C               	bsf	12,0	;volatile
  3203  0F6E  2F71               	goto	l6543
  3204  0F6F                     u2160:	
  3205  0F6F  0025               	movlb	5	; select bank5
  3206  0F70  100C               	bcf	12,0	;volatile
  3207  0F71                     l6543:	
  3208                           
  3209                           ;one_sw_two_dimmmer.c: 1328: M1=switch_status;
  3210  0F71  0020               	movlb	0	; select bank0
  3211  0F72  083E               	movf	ACTION@switch_status+1,w
  3212  0F73  00CA               	movwf	_M1+1
  3213  0F74  083D               	movf	ACTION@switch_status,w
  3214  0F75  00C9               	movwf	_M1
  3215                           
  3216                           ;one_sw_two_dimmmer.c: 1329: break;
  3217  0F76  0008               	return
  3218  0F77                     l6545:	
  3219                           ;one_sw_two_dimmmer.c: 1330: case 2:
  3220                           
  3221                           
  3222                           ;one_sw_two_dimmmer.c: 1331: FAN_FLAG1 = switch_status;
  3223  0F77  083E               	movf	ACTION@switch_status+1,w
  3224  0F78  0021               	movlb	1	; select bank1
  3225  0F79  00D7               	movwf	(_FAN_FLAG1+1)^(0+128)
  3226  0F7A  0020               	movlb	0	; select bank0
  3227  0F7B  083D               	movf	ACTION@switch_status,w
  3228  0F7C  0021               	movlb	1	; select bank1
  3229  0F7D  00D6               	movwf	_FAN_FLAG1^(0+128)
  3230                           
  3231                           ;one_sw_two_dimmmer.c: 1332: if(switch_status==0)
  3232  0F7E  0020               	movlb	0	; select bank0
  3233  0F7F  083D               	movf	ACTION@switch_status,w
  3234  0F80  043E               	iorwf	ACTION@switch_status+1,w
  3235  0F81  1D03               	btfss	3,2
  3236  0F82  2F92               	goto	l6553
  3237                           
  3238                           ;one_sw_two_dimmmer.c: 1333: {
  3239                           ;one_sw_two_dimmmer.c: 1334: T2CONbits.TMR2ON=0;
  3240  0F83  111C               	bcf	28,2	;volatile
  3241                           
  3242                           ;one_sw_two_dimmmer.c: 1335: T1CONbits.TMR1ON = 0;
  3243  0F84  1018               	bcf	24,0	;volatile
  3244                           
  3245                           ;one_sw_two_dimmmer.c: 1336: PIE1bits.CCP1IE = 0;
  3246  0F85  0021               	movlb	1	; select bank1
  3247  0F86  1111               	bcf	17,2	;volatile
  3248                           
  3249                           ;one_sw_two_dimmmer.c: 1337: RA2 =(switch_status^1);
  3250  0F87  0020               	movlb	0	; select bank0
  3251  0F88  183D               	btfsc	ACTION@switch_status,0
  3252  0F89  2F8D               	goto	u2190
  3253  0F8A  0020               	movlb	0	; select bank0
  3254  0F8B  150C               	bsf	12,2	;volatile
  3255  0F8C  2F8F               	goto	l6551
  3256  0F8D                     u2190:	
  3257  0F8D  0020               	movlb	0	; select bank0
  3258  0F8E  110C               	bcf	12,2	;volatile
  3259  0F8F                     l6551:	
  3260                           
  3261                           ;one_sw_two_dimmmer.c: 1338: pk=0;
  3262  0F8F  01D9               	clrf	_pk
  3263  0F90  01DA               	clrf	_pk+1
  3264                           
  3265                           ;one_sw_two_dimmmer.c: 1339: }
  3266  0F91  2FAF               	goto	l602
  3267  0F92                     l6553:	
  3268                           
  3269                           ;one_sw_two_dimmmer.c: 1340: else if(switch_status==1)
  3270  0F92  033D               	decf	ACTION@switch_status,w
  3271  0F93  043E               	iorwf	ACTION@switch_status+1,w
  3272  0F94  1D03               	btfss	3,2
  3273  0F95  2FAF               	goto	l602
  3274                           
  3275                           ;one_sw_two_dimmmer.c: 1341: {
  3276                           ;one_sw_two_dimmmer.c: 1342: PIE1bits.CCP1IE = 1;
  3277  0F96  0021               	movlb	1	; select bank1
  3278  0F97  1511               	bsf	17,2	;volatile
  3279                           
  3280                           ;one_sw_two_dimmmer.c: 1343: dimmer1=speed_bitHigh;
  3281  0F98  0020               	movlb	0	; select bank0
  3282  0F99  0828               	movf	ACTION@speed_bitHigh,w
  3283  0F9A  00AC               	movwf	??_ACTION
  3284  0F9B  082C               	movf	??_ACTION,w
  3285  0F9C  00DE               	movwf	_dimmer1
  3286                           
  3287                           ;one_sw_two_dimmmer.c: 1344: pk=1;
  3288  0F9D  3001               	movlw	1
  3289  0F9E  00D9               	movwf	_pk
  3290  0F9F  3000               	movlw	0
  3291  0FA0  00DA               	movwf	_pk+1
  3292                           
  3293                           ;one_sw_two_dimmmer.c: 1345: FAN_SPEED1_10s = speed_bitHigh;
  3294  0FA1  0828               	movf	ACTION@speed_bitHigh,w
  3295  0FA2  00AC               	movwf	??_ACTION
  3296  0FA3  01AD               	clrf	??_ACTION+1
  3297  0FA4  082C               	movf	??_ACTION,w
  3298  0FA5  00D5               	movwf	_FAN_SPEED1_10s
  3299  0FA6  082D               	movf	??_ACTION+1,w
  3300  0FA7  00D6               	movwf	_FAN_SPEED1_10s+1
  3301                           
  3302                           ;one_sw_two_dimmmer.c: 1346: FAN_SPEED1_1s= speed_bitLow;
  3303  0FA8  0829               	movf	ACTION@speed_bitLow,w
  3304  0FA9  00AC               	movwf	??_ACTION
  3305  0FAA  01AD               	clrf	??_ACTION+1
  3306  0FAB  082C               	movf	??_ACTION,w
  3307  0FAC  00D3               	movwf	_FAN_SPEED1_1s
  3308  0FAD  082D               	movf	??_ACTION+1,w
  3309  0FAE  00D4               	movwf	_FAN_SPEED1_1s+1
  3310  0FAF                     l602:	
  3311                           
  3312                           ;one_sw_two_dimmmer.c: 1348: }
  3313                           ;one_sw_two_dimmmer.c: 1349: M3=switch_status;
  3314  0FAF  083E               	movf	ACTION@switch_status+1,w
  3315  0FB0  00C8               	movwf	_M3+1
  3316  0FB1  083D               	movf	ACTION@switch_status,w
  3317  0FB2  00C7               	movwf	_M3
  3318                           
  3319                           ;one_sw_two_dimmmer.c: 1350: break;
  3320  0FB3  0008               	return
  3321  0FB4                     l6559:	
  3322                           ;one_sw_two_dimmmer.c: 1351: case 3:
  3323                           
  3324                           
  3325                           ;one_sw_two_dimmmer.c: 1352: FAN_FLAG2 = switch_status;
  3326  0FB4  083E               	movf	ACTION@switch_status+1,w
  3327  0FB5  0021               	movlb	1	; select bank1
  3328  0FB6  00D5               	movwf	(_FAN_FLAG2+1)^(0+128)
  3329  0FB7  0020               	movlb	0	; select bank0
  3330  0FB8  083D               	movf	ACTION@switch_status,w
  3331  0FB9  0021               	movlb	1	; select bank1
  3332  0FBA  00D4               	movwf	_FAN_FLAG2^(0+128)
  3333                           
  3334                           ;one_sw_two_dimmmer.c: 1353: if(switch_status==0)
  3335  0FBB  0020               	movlb	0	; select bank0
  3336  0FBC  083D               	movf	ACTION@switch_status,w
  3337  0FBD  043E               	iorwf	ACTION@switch_status+1,w
  3338  0FBE  1D03               	btfss	3,2
  3339  0FBF  2FCD               	goto	l6567
  3340                           
  3341                           ;one_sw_two_dimmmer.c: 1354: {
  3342                           ;one_sw_two_dimmmer.c: 1355: PIE3bits.CCP3IE = 0;
  3343  0FC0  0021               	movlb	1	; select bank1
  3344  0FC1  1213               	bcf	19,4	;volatile
  3345                           
  3346                           ;one_sw_two_dimmmer.c: 1356: RA3 =(switch_status^1);
  3347  0FC2  0020               	movlb	0	; select bank0
  3348  0FC3  183D               	btfsc	ACTION@switch_status,0
  3349  0FC4  2FC8               	goto	u2230
  3350  0FC5  0020               	movlb	0	; select bank0
  3351  0FC6  158C               	bsf	12,3	;volatile
  3352  0FC7  2FCA               	goto	l6565
  3353  0FC8                     u2230:	
  3354  0FC8  0020               	movlb	0	; select bank0
  3355  0FC9  118C               	bcf	12,3	;volatile
  3356  0FCA                     l6565:	
  3357                           
  3358                           ;one_sw_two_dimmmer.c: 1357: ak=0;
  3359  0FCA  01D7               	clrf	_ak
  3360  0FCB  01D8               	clrf	_ak+1
  3361                           
  3362                           ;one_sw_two_dimmmer.c: 1358: }
  3363  0FCC  2FEA               	goto	l606
  3364  0FCD                     l6567:	
  3365                           
  3366                           ;one_sw_two_dimmmer.c: 1359: else if(switch_status==1)
  3367  0FCD  033D               	decf	ACTION@switch_status,w
  3368  0FCE  043E               	iorwf	ACTION@switch_status+1,w
  3369  0FCF  1D03               	btfss	3,2
  3370  0FD0  2FEA               	goto	l606
  3371                           
  3372                           ;one_sw_two_dimmmer.c: 1360: {
  3373                           ;one_sw_two_dimmmer.c: 1361: PIE3bits.CCP3IE = 1;
  3374  0FD1  0021               	movlb	1	; select bank1
  3375  0FD2  1613               	bsf	19,4	;volatile
  3376                           
  3377                           ;one_sw_two_dimmmer.c: 1362: dimmer2=speed_bitHigh;
  3378  0FD3  0020               	movlb	0	; select bank0
  3379  0FD4  0828               	movf	ACTION@speed_bitHigh,w
  3380  0FD5  00AC               	movwf	??_ACTION
  3381  0FD6  082C               	movf	??_ACTION,w
  3382  0FD7  00DD               	movwf	_dimmer2
  3383                           
  3384                           ;one_sw_two_dimmmer.c: 1363: ak=1;
  3385  0FD8  3001               	movlw	1
  3386  0FD9  00D7               	movwf	_ak
  3387  0FDA  3000               	movlw	0
  3388  0FDB  00D8               	movwf	_ak+1
  3389                           
  3390                           ;one_sw_two_dimmmer.c: 1364: FAN_SPEED2_10s = speed_bitHigh;
  3391  0FDC  0828               	movf	ACTION@speed_bitHigh,w
  3392  0FDD  00AC               	movwf	??_ACTION
  3393  0FDE  01AD               	clrf	??_ACTION+1
  3394  0FDF  082C               	movf	??_ACTION,w
  3395  0FE0  00D1               	movwf	_FAN_SPEED2_10s
  3396  0FE1  082D               	movf	??_ACTION+1,w
  3397  0FE2  00D2               	movwf	_FAN_SPEED2_10s+1
  3398                           
  3399                           ;one_sw_two_dimmmer.c: 1365: FAN_SPEED2_1s= speed_bitLow;
  3400  0FE3  0829               	movf	ACTION@speed_bitLow,w
  3401  0FE4  00AC               	movwf	??_ACTION
  3402  0FE5  01AD               	clrf	??_ACTION+1
  3403  0FE6  082C               	movf	??_ACTION,w
  3404  0FE7  00CF               	movwf	_FAN_SPEED2_1s
  3405  0FE8  082D               	movf	??_ACTION+1,w
  3406  0FE9  00D0               	movwf	_FAN_SPEED2_1s+1
  3407  0FEA                     l606:	
  3408                           
  3409                           ;one_sw_two_dimmmer.c: 1367: }
  3410                           ;one_sw_two_dimmmer.c: 1368: M4=switch_status;
  3411  0FEA  083E               	movf	ACTION@switch_status+1,w
  3412  0FEB  00C6               	movwf	_M4+1
  3413  0FEC  083D               	movf	ACTION@switch_status,w
  3414  0FED  00C5               	movwf	_M4
  3415                           
  3416                           ;one_sw_two_dimmmer.c: 1373: }
  3417                           
  3418                           ;one_sw_two_dimmmer.c: 1372: break;
  3419                           
  3420                           ;one_sw_two_dimmmer.c: 1371: default:
  3421                           
  3422                           ;one_sw_two_dimmmer.c: 1370: break;
  3423  0FEE  0008               	return
  3424  0FEF                     l6575:	
  3425                           
  3426                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3427                           ; Switch size 1, requested type "space"
  3428                           ; Number of cases is 1, Range of values is 0 to 0
  3429                           ; switch strategies available:
  3430                           ; Name         Instructions Cycles
  3431                           ; simple_byte            4     3 (average)
  3432                           ; direct_byte            8     6 (fixed)
  3433                           ; jumptable            260     6 (fixed)
  3434                           ;	Chosen strategy is simple_byte
  3435  0FEF  083A               	movf	ACTION@SwNum+1,w
  3436  0FF0  3A00               	xorlw	0	; case 0
  3437  0FF1  1903               	skipnz
  3438  0FF2  2FF4               	goto	l7719
  3439  0FF3  2FFF               	goto	l609
  3440  0FF4                     l7719:	
  3441                           
  3442                           ; Switch size 1, requested type "space"
  3443                           ; Number of cases is 3, Range of values is 1 to 3
  3444                           ; switch strategies available:
  3445                           ; Name         Instructions Cycles
  3446                           ; simple_byte           10     6 (average)
  3447                           ; direct_byte           15     9 (fixed)
  3448                           ; jumptable            263     9 (fixed)
  3449                           ;	Chosen strategy is simple_byte
  3450  0FF4  0839               	movf	ACTION@SwNum,w
  3451  0FF5  3A01               	xorlw	1	; case 1
  3452  0FF6  1903               	skipnz
  3453  0FF7  2F6A               	goto	l598
  3454  0FF8  3A03               	xorlw	3	; case 2
  3455  0FF9  1903               	skipnz
  3456  0FFA  2F77               	goto	l6545
  3457  0FFB  3A01               	xorlw	1	; case 3
  3458  0FFC  1903               	skipnz
  3459  0FFD  2FB4               	goto	l6559
  3460  0FFE  2FFF               	goto	l609
  3461  0FFF                     l609:	
  3462  0FFF  0008               	return
  3463  1000                     __end_of_ACTION:	
  3464                           
  3465                           	psect	text15
  3466  0D8A                     __ptext15:	
  3467 ;; *************** function _writeUART *****************
  3468 ;; Defined at:
  3469 ;;		line 1377 in file "one_sw_two_dimmmer.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;  str2Write       1    wreg     PTR unsigned char 
  3472 ;;		 -> st(26), 
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;  str2Write       1    5[COMMON] PTR unsigned char 
  3475 ;;		 -> st(26), 
  3476 ;;  Tx_count        2    3[COMMON] int 
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  1    wreg      void 
  3479 ;; Registers used:
  3480 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  3487 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0
  3488 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0
  3489 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0
  3490 ;;Total ram usage:        4 bytes
  3491 ;; Hardware stack levels used:    1
  3492 ;; Hardware stack levels required when called:    1
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		_main
  3497 ;;		_ACTION
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           
  3502                           ;psect for function _writeUART
  3503  0D8A                     _writeUART:	
  3504                           
  3505                           ;incstack = 0
  3506                           ; Regs used in _writeUART: [wreg+fsr1l+fsr1h+status,2+status,0]
  3507                           ;writeUART@str2Write stored from wreg
  3508  0D8A  00F5               	movwf	writeUART@str2Write
  3509                           
  3510                           ;one_sw_two_dimmmer.c: 1379: int Tx_count=0;
  3511  0D8B  01F3               	clrf	writeUART@Tx_count
  3512  0D8C  01F4               	clrf	writeUART@Tx_count+1
  3513  0D8D                     l6403:	
  3514                           ;one_sw_two_dimmmer.c: 1381: while(Tx_count!=4)
  3515                           
  3516  0D8D  3004               	movlw	4
  3517  0D8E  0673               	xorwf	writeUART@Tx_count,w
  3518  0D8F  0474               	iorwf	writeUART@Tx_count+1,w
  3519  0D90  1903               	btfsc	3,2
  3520  0D91  0008               	return
  3521  0D92                     l614:	
  3522                           ;one_sw_two_dimmmer.c: 1382: {
  3523                           ;one_sw_two_dimmmer.c: 1384: while (!TX1STAbits.TRMT);
  3524                           
  3525  0D92  0023               	movlb	3	; select bank3
  3526  0D93  1C9E               	btfss	30,1	;volatile
  3527  0D94  2D92               	goto	l614
  3528                           
  3529                           ;one_sw_two_dimmmer.c: 1385: TX1REG = *str2Write;
  3530  0D95  0875               	movf	writeUART@str2Write,w
  3531  0D96  0086               	movwf	6
  3532  0D97  0187               	clrf	7
  3533  0D98  0801               	movf	1,w
  3534  0D99  009A               	movwf	26	;volatile
  3535                           
  3536                           ;one_sw_two_dimmmer.c: 1386: *str2Write++;
  3537  0D9A  3001               	movlw	1
  3538  0D9B  00F2               	movwf	??_writeUART
  3539  0D9C  0872               	movf	??_writeUART,w
  3540  0D9D  07F5               	addwf	writeUART@str2Write,f
  3541                           
  3542                           ;one_sw_two_dimmmer.c: 1387: Tx_count++;
  3543  0D9E  3001               	movlw	1
  3544  0D9F  07F3               	addwf	writeUART@Tx_count,f
  3545  0DA0  3000               	movlw	0
  3546  0DA1  3DF4               	addwfc	writeUART@Tx_count+1,f
  3547  0DA2  2D8D               	goto	l6403
  3548  0DA3                     __end_of_writeUART:	
  3549                           
  3550                           	psect	text16
  3551  0E62                     __ptext16:	
  3552 ;; *************** function _atoi *****************
  3553 ;; Defined at:
  3554 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  s               1    wreg     PTR const unsigned char 
  3557 ;;		 -> ACTION@FanSpeedString(2), ACTION@SwNumString(2), 
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  3560 ;;		 -> ACTION@FanSpeedString(2), ACTION@SwNumString(2), 
  3561 ;;  a               2    3[BANK0 ] int 
  3562 ;;  sign            1    2[BANK0 ] unsigned char 
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  2    8[COMMON] int 
  3565 ;; Registers used:
  3566 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0
  3573 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0
  3574 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  3575 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0
  3576 ;;Total ram usage:        8 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; Hardware stack levels required when called:    2
  3579 ;; This function calls:
  3580 ;;		___wmul
  3581 ;;		_isdigit
  3582 ;; This function is called by:
  3583 ;;		_ACTION
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587                           
  3588                           ;psect for function _atoi
  3589  0E62                     _atoi:	
  3590                           
  3591                           ;incstack = 0
  3592                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3593                           ;atoi@s stored from wreg
  3594  0E62  0020               	movlb	0	; select bank0
  3595  0E63  00A5               	movwf	atoi@s
  3596  0E64                     l6409:	
  3597  0E64  0825               	movf	atoi@s,w
  3598  0E65  0086               	movwf	6
  3599  0E66  0187               	clrf	7
  3600  0E67  3020               	movlw	32
  3601  0E68  0601               	xorwf	1,w
  3602  0E69  1D03               	btfss	3,2
  3603  0E6A  2E70               	goto	l6411
  3604  0E6B                     l6407:	
  3605  0E6B  3001               	movlw	1
  3606  0E6C  00A0               	movwf	??_atoi
  3607  0E6D  0820               	movf	??_atoi,w
  3608  0E6E  07A5               	addwf	atoi@s,f
  3609  0E6F  2E64               	goto	l6409
  3610  0E70                     l6411:	
  3611  0E70  0825               	movf	atoi@s,w
  3612  0E71  0086               	movwf	6
  3613  0E72  0187               	clrf	7
  3614  0E73  3009               	movlw	9
  3615  0E74  0601               	xorwf	1,w
  3616  0E75  1903               	btfsc	3,2
  3617  0E76  2E6B               	goto	l6407
  3618  0E77  01A3               	clrf	atoi@a
  3619  0E78  01A4               	clrf	atoi@a+1
  3620  0E79  01A2               	clrf	atoi@sign
  3621  0E7A  0825               	movf	atoi@s,w
  3622  0E7B  0086               	movwf	6
  3623  0E7C  0187               	clrf	7
  3624  0E7D  302D               	movlw	45
  3625  0E7E  0601               	xorwf	1,w
  3626  0E7F  1D03               	btfss	3,2
  3627  0E80  2E86               	goto	l6419
  3628  0E81  3001               	movlw	1
  3629  0E82  00A0               	movwf	??_atoi
  3630  0E83  0820               	movf	??_atoi,w
  3631  0E84  07A2               	addwf	atoi@sign,f
  3632  0E85  2E8D               	goto	l6425
  3633  0E86                     l6419:	
  3634  0E86  0825               	movf	atoi@s,w
  3635  0E87  0086               	movwf	6
  3636  0E88  0187               	clrf	7
  3637  0E89  302B               	movlw	43
  3638  0E8A  0601               	xorwf	1,w
  3639  0E8B  1D03               	btfss	3,2
  3640  0E8C  2E91               	goto	l6427
  3641  0E8D                     l6425:	
  3642  0E8D  3001               	movlw	1
  3643  0E8E  00A0               	movwf	??_atoi
  3644  0E8F  0820               	movf	??_atoi,w
  3645  0E90  07A5               	addwf	atoi@s,f
  3646  0E91                     l6427:	
  3647  0E91  0825               	movf	atoi@s,w
  3648  0E92  0086               	movwf	6
  3649  0E93  0187               	clrf	7
  3650  0E94  0801               	movf	1,w
  3651  0E95  3187  27EE  318E   	fcall	_isdigit
  3652  0E98  1C03               	btfss	3,0
  3653  0E99  2EB8               	goto	l6429
  3654  0E9A  0020               	movlb	0	; select bank0
  3655  0E9B  0824               	movf	atoi@a+1,w
  3656  0E9C  00F3               	movwf	___wmul@multiplier+1
  3657  0E9D  0823               	movf	atoi@a,w
  3658  0E9E  00F2               	movwf	___wmul@multiplier
  3659  0E9F  300A               	movlw	10
  3660  0EA0  00F4               	movwf	___wmul@multiplicand
  3661  0EA1  3000               	movlw	0
  3662  0EA2  00F5               	movwf	___wmul@multiplicand+1
  3663  0EA3  318D  25A3  318E   	fcall	___wmul
  3664  0EA6  0020               	movlb	0	; select bank0
  3665  0EA7  0825               	movf	atoi@s,w
  3666  0EA8  0086               	movwf	6
  3667  0EA9  0187               	clrf	7
  3668  0EAA  0801               	movf	1,w
  3669  0EAB  0772               	addwf	?___wmul,w
  3670  0EAC  00A0               	movwf	??_atoi
  3671  0EAD  0873               	movf	?___wmul+1,w
  3672  0EAE  1803               	skipnc
  3673  0EAF  0A73               	incf	?___wmul+1,w
  3674  0EB0  00A1               	movwf	??_atoi+1
  3675  0EB1  0820               	movf	??_atoi,w
  3676  0EB2  3ED0               	addlw	208
  3677  0EB3  00A3               	movwf	atoi@a
  3678  0EB4  30FF               	movlw	255
  3679  0EB5  3D21               	addwfc	??_atoi+1,w
  3680  0EB6  00A4               	movwf	atoi@a+1
  3681  0EB7  2E8D               	goto	l6425
  3682  0EB8                     l6429:	
  3683  0EB8  0020               	movlb	0	; select bank0
  3684  0EB9  0822               	movf	atoi@sign,w
  3685  0EBA  1903               	btfsc	3,2
  3686  0EBB  2EC8               	goto	l6435
  3687  0EBC  0923               	comf	atoi@a,w
  3688  0EBD  00A0               	movwf	??_atoi
  3689  0EBE  0924               	comf	atoi@a+1,w
  3690  0EBF  00A1               	movwf	??_atoi+1
  3691  0EC0  0AA0               	incf	??_atoi,f
  3692  0EC1  1903               	skipnz
  3693  0EC2  0AA1               	incf	??_atoi+1,f
  3694  0EC3  0820               	movf	??_atoi,w
  3695  0EC4  00F8               	movwf	?_atoi
  3696  0EC5  0821               	movf	??_atoi+1,w
  3697  0EC6  00F9               	movwf	?_atoi+1
  3698  0EC7  0008               	return
  3699  0EC8                     l6435:	
  3700  0EC8  0824               	movf	atoi@a+1,w
  3701  0EC9  00F9               	movwf	?_atoi+1
  3702  0ECA  0823               	movf	atoi@a,w
  3703  0ECB  00F8               	movwf	?_atoi
  3704  0ECC  0008               	return
  3705  0ECD                     __end_of_atoi:	
  3706                           
  3707                           	psect	text17
  3708  07EE                     __ptext17:	
  3709 ;; *************** function _isdigit *****************
  3710 ;; Defined at:
  3711 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  c               1    wreg     unsigned char 
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;  c               1    3[COMMON] unsigned char 
  3716 ;; Return value:  Size  Location     Type
  3717 ;;		None               void
  3718 ;; Registers used:
  3719 ;;		wreg, status,2, status,0
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  3726 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0
  3727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  3728 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0
  3729 ;;Total ram usage:        2 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; Hardware stack levels required when called:    1
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_atoi
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           
  3740                           ;psect for function _isdigit
  3741  07EE                     _isdigit:	
  3742                           
  3743                           ;incstack = 0
  3744                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3745                           ;isdigit@c stored from wreg
  3746  07EE  00F3               	movwf	isdigit@c
  3747  07EF  01F2               	clrf	_isdigit$901
  3748  07F0  303A               	movlw	58
  3749  07F1  0273               	subwf	isdigit@c,w
  3750  07F2  1803               	skipnc
  3751  07F3  2FFA               	goto	l6293
  3752  07F4  3030               	movlw	48
  3753  07F5  0273               	subwf	isdigit@c,w
  3754  07F6  1C03               	skipc
  3755  07F7  2FFA               	goto	l6293
  3756  07F8  01F2               	clrf	_isdigit$901
  3757  07F9  0AF2               	incf	_isdigit$901,f
  3758  07FA                     l6293:	
  3759  07FA  0C72               	rrf	_isdigit$901,w
  3760  07FB  0008               	return
  3761  07FC                     __end_of_isdigit:	
  3762                           
  3763                           	psect	text18
  3764  0DA3                     __ptext18:	
  3765 ;; *************** function ___wmul *****************
  3766 ;; Defined at:
  3767 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;  multiplier      2    2[COMMON] unsigned int 
  3770 ;;  multiplicand    2    4[COMMON] unsigned int 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  product         2    6[COMMON] unsigned int 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  2    2[COMMON] unsigned int 
  3775 ;; Registers used:
  3776 ;;		wreg, status,2, status,0
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3782 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0
  3783 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0
  3784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  3785 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0
  3786 ;;Total ram usage:        6 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    1
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_atoi
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           
  3797                           ;psect for function ___wmul
  3798  0DA3                     ___wmul:	
  3799                           
  3800                           ;incstack = 0
  3801                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3802  0DA3  01F6               	clrf	___wmul@product
  3803  0DA4  01F7               	clrf	___wmul@product+1
  3804  0DA5                     l6273:	
  3805  0DA5  1C72               	btfss	___wmul@multiplier,0
  3806  0DA6  2DAB               	goto	l655
  3807  0DA7  0874               	movf	___wmul@multiplicand,w
  3808  0DA8  07F6               	addwf	___wmul@product,f
  3809  0DA9  0875               	movf	___wmul@multiplicand+1,w
  3810  0DAA  3DF7               	addwfc	___wmul@product+1,f
  3811  0DAB                     l655:	
  3812  0DAB  3001               	movlw	1
  3813  0DAC                     u2005:	
  3814  0DAC  35F4               	lslf	___wmul@multiplicand,f
  3815  0DAD  0DF5               	rlf	___wmul@multiplicand+1,f
  3816  0DAE  0B89               	decfsz	9,f
  3817  0DAF  2DAC               	goto	u2005
  3818  0DB0  3001               	movlw	1
  3819  0DB1                     u2015:	
  3820  0DB1  36F3               	lsrf	___wmul@multiplier+1,f
  3821  0DB2  0CF2               	rrf	___wmul@multiplier,f
  3822  0DB3  0B89               	decfsz	9,f
  3823  0DB4  2DB1               	goto	u2015
  3824  0DB5  0872               	movf	___wmul@multiplier,w
  3825  0DB6  0473               	iorwf	___wmul@multiplier+1,w
  3826  0DB7  1D03               	btfss	3,2
  3827  0DB8  2DA5               	goto	l6273
  3828  0DB9  0877               	movf	___wmul@product+1,w
  3829  0DBA  00F3               	movwf	?___wmul+1
  3830  0DBB  0876               	movf	___wmul@product,w
  3831  0DBC  00F2               	movwf	?___wmul
  3832  0DBD  0008               	return
  3833  0DBE                     __end_of___wmul:	
  3834                           
  3835                           	psect	intentry
  3836  0004                     __pintentry:	
  3837 ;; *************** function _isr *****************
  3838 ;; Defined at:
  3839 ;;		line 75 in file "one_sw_two_dimmmer.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;		None
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;		None
  3844 ;; Return value:  Size  Location     Type
  3845 ;;                  1    wreg      void 
  3846 ;; Registers used:
  3847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  3854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  3855 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0
  3856 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0
  3857 ;;Total ram usage:        2 bytes
  3858 ;; Hardware stack levels used:    1
  3859 ;; This function calls:
  3860 ;;		Nothing
  3861 ;; This function is called by:
  3862 ;;		Interrupt level 1
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866  0004                     _isr:	
  3867                           
  3868                           ;incstack = 0
  3869  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3870                           
  3871                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0]
  3872  0005  3180               	pagesel	$
  3873  0006  0020               	movlb	0	; select bank0
  3874  0007  087F               	movf	127,w
  3875  0008  00F1               	movwf	??_isr+1
  3876                           
  3877                           ;one_sw_two_dimmmer.c: 79: if(RCIF == 1)
  3878  0009  1E91               	btfss	17,5	;volatile
  3879  000A  2859               	goto	i1l3999
  3880                           
  3881                           ;one_sw_two_dimmmer.c: 80: {
  3882                           ;one_sw_two_dimmmer.c: 81: if(RC1STAbits.OERR)
  3883  000B  0023               	movlb	3	; select bank3
  3884  000C  1C9D               	btfss	29,1	;volatile
  3885  000D  2819               	goto	i1l3979
  3886                           
  3887                           ;one_sw_two_dimmmer.c: 82: {
  3888                           ;one_sw_two_dimmmer.c: 83: RC1STAbits.CREN = 0;
  3889  000E  121D               	bcf	29,4	;volatile
  3890                           
  3891                           ;one_sw_two_dimmmer.c: 84: RC1STAbits.CREN = 1;
  3892  000F  161D               	bsf	29,4	;volatile
  3893  0010                     i1l231:	
  3894                           ;one_sw_two_dimmmer.c: 86: while(PIR1bits.TXIF==0);
  3895                           
  3896  0010  0020               	movlb	0	; select bank0
  3897  0011  1E11               	btfss	17,4	;volatile
  3898  0012  2810               	goto	i1l231
  3899                           
  3900                           ;one_sw_two_dimmmer.c: 87: TX1REG='F';
  3901  0013  3046               	movlw	70
  3902  0014  0023               	movlb	3	; select bank3
  3903  0015  009A               	movwf	26	;volatile
  3904  0016                     i1l234:	
  3905                           ;one_sw_two_dimmmer.c: 88: while(PIR1bits.TXIF==0);
  3906                           
  3907  0016  0020               	movlb	0	; select bank0
  3908  0017  1E11               	btfss	17,4	;volatile
  3909  0018  2816               	goto	i1l234
  3910  0019                     i1l3979:	
  3911                           
  3912                           ;one_sw_two_dimmmer.c: 90: }
  3913                           ;one_sw_two_dimmmer.c: 91: name[i]=RC1REG;
  3914  0019  0023               	movlb	3	; select bank3
  3915  001A  0819               	movf	25,w	;volatile
  3916  001B  00F0               	movwf	??_isr
  3917  001C  0020               	movlb	0	; select bank0
  3918  001D  085B               	movf	_i,w
  3919  001E  3E44               	addlw	(low (_name| (0+256)))& (0+255)
  3920  001F  0086               	movwf	6
  3921  0020  3001               	movlw	1	; select bank2/3
  3922  0021  0087               	movwf	7
  3923  0022  0870               	movf	??_isr,w
  3924  0023  0081               	movwf	1
  3925                           
  3926                           ;one_sw_two_dimmmer.c: 92: if(name[0]=='%')
  3927  0024  3025               	movlw	37
  3928  0025  0022               	movlb	2	; select bank2
  3929  0026  0644               	xorwf	_name^(0+256),w
  3930  0027  1D03               	btfss	3,2
  3931  0028  2842               	goto	i1l237
  3932                           
  3933                           ;one_sw_two_dimmmer.c: 93: {
  3934                           ;one_sw_two_dimmmer.c: 94: i++;
  3935  0029  3001               	movlw	1
  3936  002A  0020               	movlb	0	; select bank0
  3937  002B  07DB               	addwf	_i,f
  3938  002C  3000               	movlw	0
  3939  002D  3DDC               	addwfc	_i+1,f
  3940                           
  3941                           ;one_sw_two_dimmmer.c: 95: if(i>15)
  3942  002E  085C               	movf	_i+1,w
  3943  002F  3A80               	xorlw	128
  3944  0030  00F0               	movwf	??_isr
  3945  0031  3080               	movlw	128
  3946  0032  0270               	subwf	??_isr,w
  3947  0033  1D03               	skipz
  3948  0034  2837               	goto	u132_25
  3949  0035  3010               	movlw	16
  3950  0036  025B               	subwf	_i,w
  3951  0037                     u132_25:	
  3952  0037  1C03               	skipc
  3953  0038  2859               	goto	i1l3999
  3954                           
  3955                           ;one_sw_two_dimmmer.c: 96: {
  3956                           ;one_sw_two_dimmmer.c: 97: i=0;
  3957  0039  0020               	movlb	0	; select bank0
  3958  003A  01DB               	clrf	_i
  3959  003B  01DC               	clrf	_i+1
  3960                           
  3961                           ;one_sw_two_dimmmer.c: 98: TX_FLAG = 1;
  3962  003C  3001               	movlw	1
  3963  003D  00CD               	movwf	_TX_FLAG
  3964  003E  3000               	movlw	0
  3965  003F  00CE               	movwf	_TX_FLAG+1
  3966                           
  3967                           ;one_sw_two_dimmmer.c: 99: RCIF=0;
  3968  0040  1291               	bcf	17,5	;volatile
  3969                           
  3970                           ;one_sw_two_dimmmer.c: 100: }
  3971                           ;one_sw_two_dimmmer.c: 101: }
  3972  0041  2859               	goto	i1l3999
  3973  0042                     i1l237:	
  3974                           
  3975                           ;one_sw_two_dimmmer.c: 102: else
  3976                           ;one_sw_two_dimmmer.c: 103: {
  3977                           ;one_sw_two_dimmmer.c: 104: RC1STAbits.CREN = 0;
  3978  0042  0023               	movlb	3	; select bank3
  3979  0043  121D               	bcf	29,4	;volatile
  3980                           
  3981                           ;one_sw_two_dimmmer.c: 105: RC1STAbits.CREN = 1;
  3982  0044  161D               	bsf	29,4	;volatile
  3983                           
  3984                           ;one_sw_two_dimmmer.c: 107: i=0;
  3985  0045  0020               	movlb	0	; select bank0
  3986  0046  01DB               	clrf	_i
  3987  0047  01DC               	clrf	_i+1
  3988  0048                     i1l240:	
  3989                           ;one_sw_two_dimmmer.c: 108: while(PIR1bits.TXIF==0);
  3990                           
  3991  0048  1E11               	btfss	17,4	;volatile
  3992  0049  2848               	goto	i1l240
  3993                           
  3994                           ;one_sw_two_dimmmer.c: 109: TX1REG='F';
  3995  004A  3046               	movlw	70
  3996  004B  0023               	movlb	3	; select bank3
  3997  004C  009A               	movwf	26	;volatile
  3998  004D                     i1l243:	
  3999                           ;one_sw_two_dimmmer.c: 110: while(PIR1bits.TXIF==0);
  4000                           
  4001  004D  0020               	movlb	0	; select bank0
  4002  004E  1E11               	btfss	17,4	;volatile
  4003  004F  284D               	goto	i1l243
  4004                           
  4005                           ;one_sw_two_dimmmer.c: 111: TX1REG='R';
  4006  0050  3052               	movlw	82
  4007  0051  0023               	movlb	3	; select bank3
  4008  0052  009A               	movwf	26	;volatile
  4009  0053                     i1l246:	
  4010                           ;one_sw_two_dimmmer.c: 112: while(PIR1bits.TXIF==0);
  4011                           
  4012  0053  0020               	movlb	0	; select bank0
  4013  0054  1E11               	btfss	17,4	;volatile
  4014  0055  2853               	goto	i1l246
  4015                           
  4016                           ;one_sw_two_dimmmer.c: 113: TX1REG='R';
  4017  0056  3052               	movlw	82
  4018  0057  0023               	movlb	3	; select bank3
  4019  0058  009A               	movwf	26	;volatile
  4020  0059                     i1l3999:	
  4021                           
  4022                           ;one_sw_two_dimmmer.c: 114: }
  4023                           ;one_sw_two_dimmmer.c: 115: }
  4024                           ;one_sw_two_dimmmer.c: 118: if(PIE1bits.TMR2IE==1 && PIR1bits.TMR2IF==1)
  4025  0059  0021               	movlb	1	; select bank1
  4026  005A  1C91               	btfss	17,1	;volatile
  4027  005B  2862               	goto	i1l249
  4028  005C  0020               	movlb	0	; select bank0
  4029  005D  1C91               	btfss	17,1	;volatile
  4030  005E  2862               	goto	i1l249
  4031                           
  4032                           ;one_sw_two_dimmmer.c: 119: {
  4033                           ;one_sw_two_dimmmer.c: 120: PIR1bits.TMR2IF=0;
  4034  005F  1091               	bcf	17,1	;volatile
  4035                           
  4036                           ;one_sw_two_dimmmer.c: 121: RA2=1;
  4037  0060  150C               	bsf	12,2	;volatile
  4038                           
  4039                           ;one_sw_two_dimmmer.c: 122: T2CONbits.TMR2ON=0;
  4040  0061  111C               	bcf	28,2	;volatile
  4041  0062                     i1l249:	
  4042                           
  4043                           ;one_sw_two_dimmmer.c: 123: }
  4044                           ;one_sw_two_dimmmer.c: 125: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF==1)
  4045  0062  0021               	movlb	1	; select bank1
  4046  0063  1C11               	btfss	17,0	;volatile
  4047  0064  286E               	goto	i1l4013
  4048  0065  0020               	movlb	0	; select bank0
  4049  0066  1C11               	btfss	17,0	;volatile
  4050  0067  286E               	goto	i1l4013
  4051                           
  4052                           ;one_sw_two_dimmmer.c: 126: {
  4053                           ;one_sw_two_dimmmer.c: 127: PIR1bits.TMR1IF=0;
  4054  0068  1011               	bcf	17,0	;volatile
  4055                           
  4056                           ;one_sw_two_dimmmer.c: 128: T1CONbits.TMR1ON = 0;
  4057  0069  1018               	bcf	24,0	;volatile
  4058                           
  4059                           ;one_sw_two_dimmmer.c: 129: RA2=0;
  4060  006A  110C               	bcf	12,2	;volatile
  4061                           
  4062                           ;one_sw_two_dimmmer.c: 130: PR2=0x9F;
  4063  006B  309F               	movlw	159
  4064  006C  009B               	movwf	27	;volatile
  4065                           
  4066                           ;one_sw_two_dimmmer.c: 131: T2CONbits.TMR2ON=1;
  4067  006D  151C               	bsf	28,2	;volatile
  4068  006E                     i1l4013:	
  4069                           
  4070                           ;one_sw_two_dimmmer.c: 133: }
  4071                           ;one_sw_two_dimmmer.c: 137: if(PIE3bits.TMR4IE==1 && PIR3bits.TMR4IF==1)
  4072  006E  0021               	movlb	1	; select bank1
  4073  006F  1C93               	btfss	19,1	;volatile
  4074  0070  2878               	goto	i1l251
  4075  0071  0020               	movlb	0	; select bank0
  4076  0072  1C93               	btfss	19,1	;volatile
  4077  0073  2878               	goto	i1l251
  4078                           
  4079                           ;one_sw_two_dimmmer.c: 138: {
  4080                           ;one_sw_two_dimmmer.c: 139: PIR3bits.TMR4IF=0;
  4081  0074  1093               	bcf	19,1	;volatile
  4082                           
  4083                           ;one_sw_two_dimmmer.c: 140: RA3=1;
  4084  0075  158C               	bsf	12,3	;volatile
  4085                           
  4086                           ;one_sw_two_dimmmer.c: 141: T4CONbits.TMR4ON=0;
  4087  0076  0028               	movlb	8	; select bank8
  4088  0077  1117               	bcf	23,2	;volatile
  4089  0078                     i1l251:	
  4090                           
  4091                           ;one_sw_two_dimmmer.c: 143: }
  4092                           ;one_sw_two_dimmmer.c: 145: if(PIE3bits.TMR3IE == 1 && PIR3bits.TMR3IF==1)
  4093  0078  0021               	movlb	1	; select bank1
  4094  0079  1C13               	btfss	19,0	;volatile
  4095  007A  2885               	goto	i1l4029
  4096  007B  0020               	movlb	0	; select bank0
  4097  007C  1C13               	btfss	19,0	;volatile
  4098  007D  2885               	goto	i1l4029
  4099                           
  4100                           ;one_sw_two_dimmmer.c: 146: {
  4101                           ;one_sw_two_dimmmer.c: 147: PIR3bits.TMR3IF=0;
  4102  007E  1013               	bcf	19,0	;volatile
  4103                           
  4104                           ;one_sw_two_dimmmer.c: 149: RA3=0;
  4105  007F  118C               	bcf	12,3	;volatile
  4106                           
  4107                           ;one_sw_two_dimmmer.c: 150: PR4=0x9F;
  4108  0080  309F               	movlw	159
  4109  0081  0028               	movlb	8	; select bank8
  4110  0082  0096               	movwf	22	;volatile
  4111                           
  4112                           ;one_sw_two_dimmmer.c: 152: T4CONbits.TMR4ON=1;
  4113  0083  1517               	bsf	23,2	;volatile
  4114                           
  4115                           ;one_sw_two_dimmmer.c: 153: T3CONbits.TMR3ON = 0;
  4116  0084  1013               	bcf	19,0	;volatile
  4117  0085                     i1l4029:	
  4118                           
  4119                           ;one_sw_two_dimmmer.c: 154: }
  4120                           ;one_sw_two_dimmmer.c: 175: if(PIR1bits.CCP1IF==1 || PIR3bits.CCP3IF == 1 )
  4121  0085  0020               	movlb	0	; select bank0
  4122  0086  1911               	btfsc	17,2	;volatile
  4123  0087  288A               	goto	i1l255
  4124  0088  1E13               	btfss	19,4	;volatile
  4125  0089  2C86               	goto	i1l546
  4126  008A                     i1l255:	
  4127                           
  4128                           ;one_sw_two_dimmmer.c: 176: {
  4129                           ;one_sw_two_dimmmer.c: 177: if(PIR1bits.CCP1IF == 1)
  4130  008A  1D11               	btfss	17,2	;volatile
  4131  008B  2A73               	goto	i1l256
  4132                           
  4133                           ;one_sw_two_dimmmer.c: 178: {
  4134                           ;one_sw_two_dimmmer.c: 179: PIR1bits.CCP1IF = 0;
  4135  008C  1111               	bcf	17,2	;volatile
  4136                           
  4137                           ;one_sw_two_dimmmer.c: 181: if(FAN_FLAG1==1 && pk==1)
  4138  008D  0021               	movlb	1	; select bank1
  4139  008E  0356               	decf	_FAN_FLAG1^(0+128),w
  4140  008F  0457               	iorwf	(_FAN_FLAG1+1)^(0+128),w
  4141  0090  1D03               	btfss	3,2
  4142  0091  2A71               	goto	i1l257
  4143  0092  0020               	movlb	0	; select bank0
  4144  0093  0359               	decf	_pk,w
  4145  0094  045A               	iorwf	_pk+1,w
  4146  0095  1903               	btfsc	3,2
  4147  0096  2A5F               	goto	i1l4493
  4148  0097  2A71               	goto	i1l257
  4149  0098                     i1l4041:	
  4150                           ;one_sw_two_dimmmer.c: 187: {
  4151                           ;one_sw_two_dimmmer.c: 188: case '0':
  4152                           
  4153                           ;one_sw_two_dimmmer.c: 186: switch(FAN_SPEED1_1s)
  4154                           
  4155                           ;one_sw_two_dimmmer.c: 184: {
  4156                           ;one_sw_two_dimmmer.c: 185: case '0':
  4157                           
  4158                           ;one_sw_two_dimmmer.c: 182: {
  4159                           ;one_sw_two_dimmmer.c: 183: switch(FAN_SPEED1_10s)
  4160                           
  4161                           
  4162                           ;one_sw_two_dimmmer.c: 189: TMR1H=0x7B; TMR1L=0x30; T1CONbits.TMR1ON = 1; break;
  4163  0098  307B               	movlw	123
  4164  0099  2A3B               	goto	L49
  4165  009A                     i1l4045:	
  4166                           ;one_sw_two_dimmmer.c: 190: case '1':
  4167                           
  4168                           
  4169                           ;one_sw_two_dimmmer.c: 191: TMR1H=0x7C; TMR1L=0xC0; T1CONbits.TMR1ON = 1; break;
  4170  009A  307C               	movlw	124
  4171  009B  2A3F               	goto	L50
  4172  009C                     i1l4049:	
  4173                           ;one_sw_two_dimmmer.c: 192: case '2':
  4174                           
  4175                           
  4176                           ;one_sw_two_dimmmer.c: 193: TMR1H=0x7D; TMR1L=0x88; T1CONbits.TMR1ON = 1; break;
  4177  009C  307D               	movlw	125
  4178  009D  0097               	movwf	23	;volatile
  4179  009E  3088               	movlw	136
  4180  009F  2A49               	goto	L4
  4181  00A0                     i1l4053:	
  4182                           ;one_sw_two_dimmmer.c: 194: case '3':
  4183                           
  4184                           
  4185                           ;one_sw_two_dimmmer.c: 195: TMR1H=0x7F; TMR1L=0x18; T1CONbits.TMR1ON = 1; break;
  4186  00A0  307F               	movlw	127
  4187  00A1  0097               	movwf	23	;volatile
  4188  00A2  3018               	movlw	24
  4189  00A3  2A49               	goto	L4
  4190  00A4                     i1l4057:	
  4191                           ;one_sw_two_dimmmer.c: 196: case '4':
  4192                           
  4193                           
  4194                           ;one_sw_two_dimmmer.c: 197: TMR1H=0x80; TMR1L=0xA8; T1CONbits.TMR1ON = 1; break;
  4195  00A4  3080               	movlw	128
  4196  00A5  29EC               	goto	L100
  4197  00A6                     i1l4061:	
  4198                           ;one_sw_two_dimmmer.c: 198: case '5':
  4199                           
  4200                           
  4201                           ;one_sw_two_dimmmer.c: 199: TMR1H=0x81; TMR1L=0x70; T1CONbits.TMR1ON = 1; break;
  4202  00A6  3081               	movlw	129
  4203  00A7  29F0               	goto	L37
  4204  00A8                     i1l4065:	
  4205                           ;one_sw_two_dimmmer.c: 200: case '6':
  4206                           
  4207                           
  4208                           ;one_sw_two_dimmmer.c: 201: TMR1H=0x83; TMR1L=0x00; T1CONbits.TMR1ON = 1; break;
  4209  00A8  3083               	movlw	131
  4210  00A9  29F8               	goto	L38
  4211  00AA                     i1l4071:	
  4212                           ;one_sw_two_dimmmer.c: 202: case '7':
  4213                           
  4214                           
  4215                           ;one_sw_two_dimmmer.c: 203: TMR1H=0x83; TMR1L=0xC8; T1CONbits.TMR1ON = 1; break;
  4216  00AA  3083               	movlw	131
  4217  00AB  0097               	movwf	23	;volatile
  4218  00AC  30C8               	movlw	200
  4219  00AD  2A49               	goto	L4
  4220  00AE                     i1l4075:	
  4221                           ;one_sw_two_dimmmer.c: 204: case '8':
  4222                           
  4223  00AE  28CC               	goto	i1l4095
  4224  00AF                     i1l4079:	
  4225                           ;one_sw_two_dimmmer.c: 206: case '9':
  4226                           
  4227                           ;one_sw_two_dimmmer.c: 205: TMR1H=0x87; TMR1L=0xB0; T1CONbits.TMR1ON = 1; break;
  4228                           
  4229                           
  4230                           ;one_sw_two_dimmmer.c: 207: TMR1H=0x85; TMR1L=0x58; T1CONbits.TMR1ON = 1; break;
  4231  00AF  3085               	movlw	133
  4232  00B0  0097               	movwf	23	;volatile
  4233  00B1  3058               	movlw	88
  4234  00B2  2A49               	goto	L4
  4235  00B3                     i1l4085:	
  4236                           ;one_sw_two_dimmmer.c: 210: }
  4237                           
  4238                           ;one_sw_two_dimmmer.c: 209: break;
  4239                           
  4240                           ;one_sw_two_dimmmer.c: 208: default:
  4241                           
  4242                           
  4243                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4244                           ; Switch size 1, requested type "space"
  4245                           ; Number of cases is 1, Range of values is 0 to 0
  4246                           ; switch strategies available:
  4247                           ; Name         Instructions Cycles
  4248                           ; simple_byte            4     3 (average)
  4249                           ; direct_byte            8     6 (fixed)
  4250                           ; jumptable            260     6 (fixed)
  4251                           ;	Chosen strategy is simple_byte
  4252  00B3  0854               	movf	_FAN_SPEED1_1s+1,w
  4253  00B4  3A00               	xorlw	0	; case 0
  4254  00B5  1903               	skipnz
  4255  00B6  28B8               	goto	i1l7721
  4256  00B7  2A71               	goto	i1l257
  4257  00B8                     i1l7721:	
  4258                           
  4259                           ; Switch size 1, requested type "space"
  4260                           ; Number of cases is 10, Range of values is 48 to 57
  4261                           ; switch strategies available:
  4262                           ; Name         Instructions Cycles
  4263                           ; direct_byte           29     9 (fixed)
  4264                           ; simple_byte           31    16 (average)
  4265                           ; jumptable            263     9 (fixed)
  4266                           ;	Chosen strategy is direct_byte
  4267  00B8  0853               	movf	_FAN_SPEED1_1s,w
  4268  00B9  3ED0               	addlw	-48
  4269  00BA  1C03               	skipc
  4270  00BB  2A71               	goto	i1l257
  4271  00BC  0084               	movwf	4
  4272  00BD  300A               	movlw	10
  4273  00BE  0204               	subwf	4,w
  4274  00BF  1803               	skipnc
  4275  00C0  2A71               	goto	i1l257
  4276  00C1  3188               	movlp	high i1S7723
  4277  00C2  3504               	lslf	4,w
  4278  00C3  3E00               	addlw	low i1S7723
  4279  00C4  0082               	movwf	2
  4280                           
  4281                           ;one_sw_two_dimmmer.c: 211: break;
  4282  00C5  2A71               	goto	i1l257
  4283  00C6                     i1l4087:	
  4284                           ;one_sw_two_dimmmer.c: 215: {
  4285                           ;one_sw_two_dimmmer.c: 216: case '0':
  4286                           
  4287                           ;one_sw_two_dimmmer.c: 214: switch(FAN_SPEED1_1s)
  4288                           
  4289                           ;one_sw_two_dimmmer.c: 212: case '1':
  4290                           
  4291                           
  4292                           ;one_sw_two_dimmmer.c: 217: TMR1H=0x86; TMR1L=0x20; T1CONbits.TMR1ON = 1; break;
  4293  00C6  3086               	movlw	134
  4294  00C7  2A00               	goto	L40
  4295  00C8                     i1l4091:	
  4296                           ;one_sw_two_dimmmer.c: 218: case '1':
  4297                           
  4298                           
  4299                           ;one_sw_two_dimmmer.c: 219: TMR1H=0x86; TMR1L=0xE8; T1CONbits.TMR1ON = 1; break;
  4300  00C8  3086               	movlw	134
  4301  00C9  0097               	movwf	23	;volatile
  4302  00CA  30E8               	movlw	232
  4303  00CB  2A49               	goto	L4
  4304  00CC                     i1l4095:	
  4305                           ;one_sw_two_dimmmer.c: 220: case '2':
  4306                           
  4307                           
  4308                           ;one_sw_two_dimmmer.c: 221: TMR1H=0x87; TMR1L=0xB0; T1CONbits.TMR1ON = 1; break;
  4309  00CC  3087               	movlw	135
  4310  00CD  2A04               	goto	L41
  4311  00CE                     i1l4099:	
  4312                           ;one_sw_two_dimmmer.c: 222: case '3':
  4313                           
  4314                           
  4315                           ;one_sw_two_dimmmer.c: 223: TMR1H=0x88; TMR1L=0x78; T1CONbits.TMR1ON = 1; break;
  4316  00CE  3088               	movlw	136
  4317  00CF  2A08               	goto	L102
  4318  00D0                     i1l4103:	
  4319                           ;one_sw_two_dimmmer.c: 224: case '4':
  4320                           
  4321                           
  4322                           ;one_sw_two_dimmmer.c: 225: TMR1H=0x89; TMR1L=0x40; T1CONbits.TMR1ON = 1; break;
  4323  00D0  3089               	movlw	137
  4324  00D1  2A0C               	goto	L42
  4325  00D2                     i1l4107:	
  4326                           ;one_sw_two_dimmmer.c: 226: case '5':
  4327                           
  4328                           
  4329                           ;one_sw_two_dimmmer.c: 227: TMR1H=0x8A; TMR1L=0x08; T1CONbits.TMR1ON = 1; break;
  4330  00D2  308A               	movlw	138
  4331  00D3  0097               	movwf	23	;volatile
  4332  00D4  3008               	movlw	8
  4333  00D5  2A49               	goto	L4
  4334  00D6                     i1l4111:	
  4335                           ;one_sw_two_dimmmer.c: 228: case '6':
  4336                           
  4337                           
  4338                           ;one_sw_two_dimmmer.c: 229: TMR1H=0x8A; TMR1L=0xD0; T1CONbits.TMR1ON = 1; break;
  4339  00D6  308A               	movlw	138
  4340  00D7  2A23               	goto	L43
  4341  00D8                     i1l4115:	
  4342                           ;one_sw_two_dimmmer.c: 230: case '7':
  4343                           
  4344                           
  4345                           ;one_sw_two_dimmmer.c: 231: TMR1H=0x8B; TMR1L=0x98; T1CONbits.TMR1ON = 1; break;
  4346  00D8  308B               	movlw	139
  4347  00D9  0097               	movwf	23	;volatile
  4348  00DA  3098               	movlw	152
  4349  00DB  2A49               	goto	L4
  4350  00DC                     i1l4119:	
  4351                           ;one_sw_two_dimmmer.c: 232: case '8':
  4352                           
  4353                           
  4354                           ;one_sw_two_dimmmer.c: 233: TMR1H=0x8C; TMR1L=0x60; T1CONbits.TMR1ON = 1; break;
  4355  00DC  308C               	movlw	140
  4356  00DD  2A27               	goto	L44
  4357  00DE                     i1l4123:	
  4358                           ;one_sw_two_dimmmer.c: 234: case '9':
  4359                           
  4360                           
  4361                           ;one_sw_two_dimmmer.c: 235: TMR1H=0x8D; TMR1L=0x28; T1CONbits.TMR1ON = 1; break;
  4362  00DE  308D               	movlw	141
  4363  00DF  0097               	movwf	23	;volatile
  4364  00E0  3028               	movlw	40
  4365  00E1  2A49               	goto	L4
  4366  00E2                     i1l4129:	
  4367                           ;one_sw_two_dimmmer.c: 238: }
  4368                           
  4369                           ;one_sw_two_dimmmer.c: 237: break;
  4370                           
  4371                           ;one_sw_two_dimmmer.c: 236: default:
  4372                           
  4373                           
  4374                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4375                           ; Switch size 1, requested type "space"
  4376                           ; Number of cases is 1, Range of values is 0 to 0
  4377                           ; switch strategies available:
  4378                           ; Name         Instructions Cycles
  4379                           ; simple_byte            4     3 (average)
  4380                           ; direct_byte            8     6 (fixed)
  4381                           ; jumptable            260     6 (fixed)
  4382                           ;	Chosen strategy is simple_byte
  4383  00E2  0854               	movf	_FAN_SPEED1_1s+1,w
  4384  00E3  3A00               	xorlw	0	; case 0
  4385  00E4  1903               	skipnz
  4386  00E5  28E7               	goto	i1l7725
  4387  00E6  2A71               	goto	i1l257
  4388  00E7                     i1l7725:	
  4389                           
  4390                           ; Switch size 1, requested type "space"
  4391                           ; Number of cases is 10, Range of values is 48 to 57
  4392                           ; switch strategies available:
  4393                           ; Name         Instructions Cycles
  4394                           ; direct_byte           29     9 (fixed)
  4395                           ; simple_byte           31    16 (average)
  4396                           ; jumptable            263     9 (fixed)
  4397                           ;	Chosen strategy is direct_byte
  4398  00E7  0853               	movf	_FAN_SPEED1_1s,w
  4399  00E8  3ED0               	addlw	-48
  4400  00E9  1C03               	skipc
  4401  00EA  2A71               	goto	i1l257
  4402  00EB  0084               	movwf	4
  4403  00EC  300A               	movlw	10
  4404  00ED  0204               	subwf	4,w
  4405  00EE  1803               	skipnc
  4406  00EF  2A71               	goto	i1l257
  4407  00F0  3188               	movlp	high i1S7727
  4408  00F1  3504               	lslf	4,w
  4409  00F2  3E14               	addlw	low i1S7727
  4410  00F3  0082               	movwf	2
  4411                           
  4412                           ;one_sw_two_dimmmer.c: 239: break;
  4413  00F4  2A71               	goto	i1l257
  4414  00F5                     i1l4131:	
  4415                           ;one_sw_two_dimmmer.c: 243: {
  4416                           ;one_sw_two_dimmmer.c: 244: case '0':
  4417                           
  4418                           ;one_sw_two_dimmmer.c: 242: switch(FAN_SPEED1_1s)
  4419                           
  4420                           ;one_sw_two_dimmmer.c: 240: case '2':
  4421                           
  4422                           
  4423                           ;one_sw_two_dimmmer.c: 245: TMR1H=0x8D; TMR1L=0xF0; T1CONbits.TMR1ON = 1; break;
  4424  00F5  308D               	movlw	141
  4425  00F6  2A2B               	goto	L45
  4426  00F7                     i1l4135:	
  4427                           ;one_sw_two_dimmmer.c: 246: case '1':
  4428                           
  4429                           
  4430                           ;one_sw_two_dimmmer.c: 247: TMR1H=0x8E; TMR1L=0xB8; T1CONbits.TMR1ON = 1; break;
  4431  00F7  308E               	movlw	142
  4432  00F8  0097               	movwf	23	;volatile
  4433  00F9  30B8               	movlw	184
  4434  00FA  2A49               	goto	L4
  4435  00FB                     i1l4139:	
  4436                           ;one_sw_two_dimmmer.c: 248: case '2':
  4437                           
  4438                           
  4439                           ;one_sw_two_dimmmer.c: 249: TMR1H=0x8F; TMR1L=0x80; T1CONbits.TMR1ON = 1; break;
  4440  00FB  308F               	movlw	143
  4441  00FC  2A2F               	goto	L46
  4442  00FD                     i1l4143:	
  4443                           ;one_sw_two_dimmmer.c: 250: case '3':
  4444                           
  4445                           
  4446                           ;one_sw_two_dimmmer.c: 251: TMR1H=0x90; TMR1L=0x48; T1CONbits.TMR1ON = 1; break;
  4447  00FD  3090               	movlw	144
  4448  00FE  0097               	movwf	23	;volatile
  4449  00FF  3048               	movlw	72
  4450  0100  2A49               	goto	L4
  4451  0101                     i1l4147:	
  4452                           ;one_sw_two_dimmmer.c: 252: case '4':
  4453                           
  4454                           
  4455                           ;one_sw_two_dimmmer.c: 253: TMR1H=0x91; TMR1L=0x10; T1CONbits.TMR1ON = 1; break;
  4456  0101  3091               	movlw	145
  4457  0102  2A33               	goto	L47
  4458  0103                     i1l4151:	
  4459                           ;one_sw_two_dimmmer.c: 254: case '5':
  4460                           
  4461                           
  4462                           ;one_sw_two_dimmmer.c: 255: TMR1H=0x91; TMR1L=0xD8; T1CONbits.TMR1ON = 1; break;
  4463  0103  3091               	movlw	145
  4464  0104  0097               	movwf	23	;volatile
  4465  0105  30D8               	movlw	216
  4466  0106  2A49               	goto	L4
  4467  0107                     i1l4155:	
  4468                           ;one_sw_two_dimmmer.c: 256: case '6':
  4469                           
  4470                           
  4471                           ;one_sw_two_dimmmer.c: 257: TMR1H=0x92; TMR1L=0xA0; T1CONbits.TMR1ON = 1; break;
  4472  0107  3092               	movlw	146
  4473  0108  2A37               	goto	L48
  4474  0109                     i1l4159:	
  4475                           ;one_sw_two_dimmmer.c: 258: case '7':
  4476                           
  4477                           
  4478                           ;one_sw_two_dimmmer.c: 259: TMR1H=0x93; TMR1L=0x68; T1CONbits.TMR1ON = 1; break;
  4479  0109  3093               	movlw	147
  4480  010A  0097               	movwf	23	;volatile
  4481  010B  3068               	movlw	104
  4482  010C  2A49               	goto	L4
  4483  010D                     i1l4163:	
  4484                           ;one_sw_two_dimmmer.c: 260: case '8':
  4485                           
  4486                           
  4487                           ;one_sw_two_dimmmer.c: 261: TMR1H=0x94; TMR1L=0x30; T1CONbits.TMR1ON = 1; break;
  4488  010D  3094               	movlw	148
  4489  010E  2A3B               	goto	L49
  4490  010F                     i1l4167:	
  4491                           ;one_sw_two_dimmmer.c: 262: case '9':
  4492                           
  4493                           
  4494                           ;one_sw_two_dimmmer.c: 263: TMR1H=0x94; TMR1L=0xF8; T1CONbits.TMR1ON = 1; break;
  4495  010F  3094               	movlw	148
  4496  0110  0097               	movwf	23	;volatile
  4497  0111  30F8               	movlw	248
  4498  0112  2A49               	goto	L4
  4499  0113                     i1l4173:	
  4500                           ;one_sw_two_dimmmer.c: 266: }
  4501                           
  4502                           ;one_sw_two_dimmmer.c: 265: break;
  4503                           
  4504                           ;one_sw_two_dimmmer.c: 264: default:
  4505                           
  4506                           
  4507                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4508                           ; Switch size 1, requested type "space"
  4509                           ; Number of cases is 1, Range of values is 0 to 0
  4510                           ; switch strategies available:
  4511                           ; Name         Instructions Cycles
  4512                           ; simple_byte            4     3 (average)
  4513                           ; direct_byte            8     6 (fixed)
  4514                           ; jumptable            260     6 (fixed)
  4515                           ;	Chosen strategy is simple_byte
  4516  0113  0854               	movf	_FAN_SPEED1_1s+1,w
  4517  0114  3A00               	xorlw	0	; case 0
  4518  0115  1903               	skipnz
  4519  0116  2918               	goto	i1l7729
  4520  0117  2A71               	goto	i1l257
  4521  0118                     i1l7729:	
  4522                           
  4523                           ; Switch size 1, requested type "space"
  4524                           ; Number of cases is 10, Range of values is 48 to 57
  4525                           ; switch strategies available:
  4526                           ; Name         Instructions Cycles
  4527                           ; direct_byte           29     9 (fixed)
  4528                           ; simple_byte           31    16 (average)
  4529                           ; jumptable            263     9 (fixed)
  4530                           ;	Chosen strategy is direct_byte
  4531  0118  0853               	movf	_FAN_SPEED1_1s,w
  4532  0119  3ED0               	addlw	-48
  4533  011A  1C03               	skipc
  4534  011B  2A71               	goto	i1l257
  4535  011C  0084               	movwf	4
  4536  011D  300A               	movlw	10
  4537  011E  0204               	subwf	4,w
  4538  011F  1803               	skipnc
  4539  0120  2A71               	goto	i1l257
  4540  0121  3188               	movlp	high i1S7731
  4541  0122  3504               	lslf	4,w
  4542  0123  3E28               	addlw	low i1S7731
  4543  0124  0082               	movwf	2
  4544                           
  4545                           ;one_sw_two_dimmmer.c: 267: break;
  4546  0125  2A71               	goto	i1l257
  4547  0126                     i1l4175:	
  4548                           ;one_sw_two_dimmmer.c: 271: {
  4549                           ;one_sw_two_dimmmer.c: 272: case '0':
  4550                           
  4551                           ;one_sw_two_dimmmer.c: 270: switch(FAN_SPEED1_1s)
  4552                           
  4553                           ;one_sw_two_dimmmer.c: 268: case '3':
  4554                           
  4555                           
  4556                           ;one_sw_two_dimmmer.c: 273: TMR1H=0x95; TMR1L=0xC0; T1CONbits.TMR1ON = 1; break;
  4557  0126  3095               	movlw	149
  4558  0127  2A3F               	goto	L50
  4559  0128                     i1l4179:	
  4560                           ;one_sw_two_dimmmer.c: 274: case '1':
  4561                           
  4562                           
  4563                           ;one_sw_two_dimmmer.c: 275: TMR1H=0x97; TMR1L=0x50; T1CONbits.TMR1ON = 1; break;
  4564  0128  3097               	movlw	151
  4565  0129  2A43               	goto	L51
  4566  012A                     i1l4183:	
  4567                           ;one_sw_two_dimmmer.c: 276: case '2':
  4568                           
  4569                           
  4570                           ;one_sw_two_dimmmer.c: 277: TMR1H=0x98; TMR1L=0xE0; T1CONbits.TMR1ON = 1; break;
  4571  012A  3098               	movlw	152
  4572  012B  2A47               	goto	L21
  4573  012C                     i1l4187:	
  4574                           ;one_sw_two_dimmmer.c: 278: case '3':
  4575                           
  4576                           
  4577                           ;one_sw_two_dimmmer.c: 279: TMR1H=0x9A; TMR1L=0x70; T1CONbits.TMR1ON = 1; break;
  4578  012C  309A               	movlw	154
  4579  012D  29F0               	goto	L37
  4580  012E                     i1l4191:	
  4581                           ;one_sw_two_dimmmer.c: 280: case '4':
  4582                           
  4583                           
  4584                           ;one_sw_two_dimmmer.c: 281: TMR1H=0x9C; TMR1L=0x00; T1CONbits.TMR1ON = 1; break;
  4585  012E  309C               	movlw	156
  4586  012F  29F8               	goto	L38
  4587  0130                     i1l4197:	
  4588                           ;one_sw_two_dimmmer.c: 282: case '5':
  4589                           
  4590                           
  4591                           ;one_sw_two_dimmmer.c: 283: TMR1H=0x9D; TMR1L=0x90; T1CONbits.TMR1ON = 1; break;
  4592  0130  309D               	movlw	157
  4593  0131  29FC               	goto	L39
  4594  0132                     i1l4201:	
  4595                           ;one_sw_two_dimmmer.c: 284: case '6':
  4596                           
  4597                           
  4598                           ;one_sw_two_dimmmer.c: 285: TMR1H=0x9F; TMR1L=0x20; T1CONbits.TMR1ON = 1; break;
  4599  0132  309F               	movlw	159
  4600  0133  2A00               	goto	L40
  4601  0134                     i1l4205:	
  4602                           ;one_sw_two_dimmmer.c: 286: case '7':
  4603                           
  4604                           
  4605                           ;one_sw_two_dimmmer.c: 287: TMR1H=0xA0; TMR1L=0xB0; T1CONbits.TMR1ON = 1; break;
  4606  0134  30A0               	movlw	160
  4607  0135  2A04               	goto	L41
  4608  0136                     i1l4209:	
  4609                           ;one_sw_two_dimmmer.c: 288: case '8':
  4610                           
  4611                           
  4612                           ;one_sw_two_dimmmer.c: 289: TMR1H=0xA2; TMR1L=0x40; T1CONbits.TMR1ON = 1; break;
  4613  0136  30A2               	movlw	162
  4614  0137  2A0C               	goto	L42
  4615  0138                     i1l4213:	
  4616                           ;one_sw_two_dimmmer.c: 290: case '9':
  4617                           
  4618                           
  4619                           ;one_sw_two_dimmmer.c: 291: TMR1H=0xA3; TMR1L=0xD0; T1CONbits.TMR1ON = 1; break;
  4620  0138  30A3               	movlw	163
  4621  0139  2A23               	goto	L43
  4622  013A                     i1l4219:	
  4623                           ;one_sw_two_dimmmer.c: 294: }
  4624                           
  4625                           ;one_sw_two_dimmmer.c: 293: break;
  4626                           
  4627                           ;one_sw_two_dimmmer.c: 292: default:
  4628                           
  4629                           
  4630                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4631                           ; Switch size 1, requested type "space"
  4632                           ; Number of cases is 1, Range of values is 0 to 0
  4633                           ; switch strategies available:
  4634                           ; Name         Instructions Cycles
  4635                           ; simple_byte            4     3 (average)
  4636                           ; direct_byte            8     6 (fixed)
  4637                           ; jumptable            260     6 (fixed)
  4638                           ;	Chosen strategy is simple_byte
  4639  013A  0854               	movf	_FAN_SPEED1_1s+1,w
  4640  013B  3A00               	xorlw	0	; case 0
  4641  013C  1903               	skipnz
  4642  013D  293F               	goto	i1l7733
  4643  013E  2A71               	goto	i1l257
  4644  013F                     i1l7733:	
  4645                           
  4646                           ; Switch size 1, requested type "space"
  4647                           ; Number of cases is 10, Range of values is 48 to 57
  4648                           ; switch strategies available:
  4649                           ; Name         Instructions Cycles
  4650                           ; direct_byte           29     9 (fixed)
  4651                           ; simple_byte           31    16 (average)
  4652                           ; jumptable            263     9 (fixed)
  4653                           ;	Chosen strategy is direct_byte
  4654  013F  0853               	movf	_FAN_SPEED1_1s,w
  4655  0140  3ED0               	addlw	-48
  4656  0141  1C03               	skipc
  4657  0142  2A71               	goto	i1l257
  4658  0143  0084               	movwf	4
  4659  0144  300A               	movlw	10
  4660  0145  0204               	subwf	4,w
  4661  0146  1803               	skipnc
  4662  0147  2A71               	goto	i1l257
  4663  0148  3188               	movlp	high i1S7735
  4664  0149  3504               	lslf	4,w
  4665  014A  3E3C               	addlw	low i1S7735
  4666  014B  0082               	movwf	2
  4667                           
  4668                           ;one_sw_two_dimmmer.c: 295: break;
  4669  014C  2A71               	goto	i1l257
  4670  014D                     i1l4221:	
  4671                           ;one_sw_two_dimmmer.c: 299: {
  4672                           ;one_sw_two_dimmmer.c: 300: case '0':
  4673                           
  4674                           ;one_sw_two_dimmmer.c: 298: switch(FAN_SPEED1_1s)
  4675                           
  4676                           ;one_sw_two_dimmmer.c: 296: case '4':
  4677                           
  4678                           
  4679                           ;one_sw_two_dimmmer.c: 301: TMR1H=0xA5; TMR1L=0x60; T1CONbits.TMR1ON = 1; break;
  4680  014D  30A5               	movlw	165
  4681  014E  2A27               	goto	L44
  4682  014F                     i1l4225:	
  4683                           ;one_sw_two_dimmmer.c: 302: case '1':
  4684                           
  4685                           
  4686                           ;one_sw_two_dimmmer.c: 303: TMR1H=0xA6; TMR1L=0xF0; T1CONbits.TMR1ON = 1; break;
  4687  014F  30A6               	movlw	166
  4688  0150  2A2B               	goto	L45
  4689  0151                     i1l4229:	
  4690                           ;one_sw_two_dimmmer.c: 304: case '2':
  4691                           
  4692                           
  4693                           ;one_sw_two_dimmmer.c: 305: TMR1H=0xA8; TMR1L=0x80; T1CONbits.TMR1ON = 1; break;
  4694  0151  30A8               	movlw	168
  4695  0152  2A2F               	goto	L46
  4696  0153                     i1l4233:	
  4697                           ;one_sw_two_dimmmer.c: 306: case '3':
  4698                           
  4699                           
  4700                           ;one_sw_two_dimmmer.c: 307: TMR1H=0xAA; TMR1L=0x10; T1CONbits.TMR1ON = 1; break;
  4701  0153  30AA               	movlw	170
  4702  0154  2A33               	goto	L47
  4703  0155                     i1l4237:	
  4704                           ;one_sw_two_dimmmer.c: 308: case '4':
  4705                           
  4706                           
  4707                           ;one_sw_two_dimmmer.c: 309: TMR1H=0xAB; TMR1L=0xA0; T1CONbits.TMR1ON = 1; break;
  4708  0155  30AB               	movlw	171
  4709  0156  2A37               	goto	L48
  4710  0157                     i1l4241:	
  4711                           ;one_sw_two_dimmmer.c: 310: case '5':
  4712                           
  4713                           
  4714                           ;one_sw_two_dimmmer.c: 311: TMR1H=0xAD; TMR1L=0x30; T1CONbits.TMR1ON = 1; break;
  4715  0157  30AD               	movlw	173
  4716  0158  2A3B               	goto	L49
  4717  0159                     i1l4245:	
  4718                           ;one_sw_two_dimmmer.c: 312: case '6':
  4719                           
  4720                           
  4721                           ;one_sw_two_dimmmer.c: 313: TMR1H=0xAE; TMR1L=0xC0; T1CONbits.TMR1ON = 1; break;
  4722  0159  30AE               	movlw	174
  4723  015A  2A3F               	goto	L50
  4724  015B                     i1l4249:	
  4725                           ;one_sw_two_dimmmer.c: 314: case '7':
  4726                           
  4727                           
  4728                           ;one_sw_two_dimmmer.c: 315: TMR1H=0xB0; TMR1L=0x50; T1CONbits.TMR1ON = 1; break;
  4729  015B  30B0               	movlw	176
  4730  015C  2A43               	goto	L51
  4731  015D                     i1l4253:	
  4732                           ;one_sw_two_dimmmer.c: 316: case '8':
  4733                           
  4734                           
  4735                           ;one_sw_two_dimmmer.c: 317: TMR1H=0xB1; TMR1L=0xE0; T1CONbits.TMR1ON = 1; break;
  4736  015D  30B1               	movlw	177
  4737  015E  2A47               	goto	L21
  4738  015F                     i1l4257:	
  4739                           ;one_sw_two_dimmmer.c: 318: case '9':
  4740                           
  4741                           
  4742                           ;one_sw_two_dimmmer.c: 319: TMR1H=0xB3; TMR1L=0x70; T1CONbits.TMR1ON = 1; break;
  4743  015F  30B3               	movlw	179
  4744  0160  29F0               	goto	L37
  4745  0161                     i1l4263:	
  4746                           ;one_sw_two_dimmmer.c: 322: }
  4747                           
  4748                           ;one_sw_two_dimmmer.c: 321: break;
  4749                           
  4750                           ;one_sw_two_dimmmer.c: 320: default:
  4751                           
  4752                           
  4753                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4754                           ; Switch size 1, requested type "space"
  4755                           ; Number of cases is 1, Range of values is 0 to 0
  4756                           ; switch strategies available:
  4757                           ; Name         Instructions Cycles
  4758                           ; simple_byte            4     3 (average)
  4759                           ; direct_byte            8     6 (fixed)
  4760                           ; jumptable            260     6 (fixed)
  4761                           ;	Chosen strategy is simple_byte
  4762  0161  0854               	movf	_FAN_SPEED1_1s+1,w
  4763  0162  3A00               	xorlw	0	; case 0
  4764  0163  1903               	skipnz
  4765  0164  2966               	goto	i1l7737
  4766  0165  2A71               	goto	i1l257
  4767  0166                     i1l7737:	
  4768                           
  4769                           ; Switch size 1, requested type "space"
  4770                           ; Number of cases is 10, Range of values is 48 to 57
  4771                           ; switch strategies available:
  4772                           ; Name         Instructions Cycles
  4773                           ; direct_byte           29     9 (fixed)
  4774                           ; simple_byte           31    16 (average)
  4775                           ; jumptable            263     9 (fixed)
  4776                           ;	Chosen strategy is direct_byte
  4777  0166  0853               	movf	_FAN_SPEED1_1s,w
  4778  0167  3ED0               	addlw	-48
  4779  0168  1C03               	skipc
  4780  0169  2A71               	goto	i1l257
  4781  016A  0084               	movwf	4
  4782  016B  300A               	movlw	10
  4783  016C  0204               	subwf	4,w
  4784  016D  1803               	skipnc
  4785  016E  2A71               	goto	i1l257
  4786  016F  3188               	movlp	high i1S7739
  4787  0170  3504               	lslf	4,w
  4788  0171  3E50               	addlw	low i1S7739
  4789  0172  0082               	movwf	2
  4790                           
  4791                           ;one_sw_two_dimmmer.c: 323: break;
  4792  0173  2A71               	goto	i1l257
  4793  0174                     i1l4265:	
  4794                           ;one_sw_two_dimmmer.c: 327: {
  4795                           ;one_sw_two_dimmmer.c: 328: case '0':
  4796                           
  4797                           ;one_sw_two_dimmmer.c: 326: switch(FAN_SPEED1_1s)
  4798                           
  4799                           ;one_sw_two_dimmmer.c: 324: case '5':
  4800                           
  4801                           
  4802                           ;one_sw_two_dimmmer.c: 329: TMR1H=0xB5; TMR1L=0x00; T1CONbits.TMR1ON = 1; break;
  4803  0174  30B5               	movlw	181
  4804  0175  29F8               	goto	L38
  4805  0176                     i1l4271:	
  4806                           ;one_sw_two_dimmmer.c: 330: case '1':
  4807                           
  4808                           
  4809                           ;one_sw_two_dimmmer.c: 331: TMR1H=0xB6; TMR1L=0x90; T1CONbits.TMR1ON = 1; break;
  4810  0176  30B6               	movlw	182
  4811  0177  29FC               	goto	L39
  4812  0178                     i1l4275:	
  4813                           ;one_sw_two_dimmmer.c: 332: case '2':
  4814                           
  4815                           
  4816                           ;one_sw_two_dimmmer.c: 333: TMR1H=0xB8; TMR1L=0x20; T1CONbits.TMR1ON = 1; break;
  4817  0178  30B8               	movlw	184
  4818  0179  2A00               	goto	L40
  4819  017A                     i1l4279:	
  4820                           ;one_sw_two_dimmmer.c: 334: case '3':
  4821                           
  4822                           
  4823                           ;one_sw_two_dimmmer.c: 335: TMR1H=0xB9; TMR1L=0xB0; T1CONbits.TMR1ON = 1; break;
  4824  017A  30B9               	movlw	185
  4825  017B  2A04               	goto	L41
  4826  017C                     i1l4283:	
  4827                           ;one_sw_two_dimmmer.c: 336: case '4':
  4828                           
  4829                           
  4830                           ;one_sw_two_dimmmer.c: 337: TMR1H=0xBB; TMR1L=0x40; T1CONbits.TMR1ON = 1; break;
  4831  017C  30BB               	movlw	187
  4832  017D  2A0C               	goto	L42
  4833  017E                     i1l4287:	
  4834                           ;one_sw_two_dimmmer.c: 338: case '5':
  4835                           
  4836                           
  4837                           ;one_sw_two_dimmmer.c: 339: TMR1H=0xBC; TMR1L=0xD0; T1CONbits.TMR1ON = 1; break;
  4838  017E  30BC               	movlw	188
  4839  017F  2A23               	goto	L43
  4840  0180                     i1l4291:	
  4841                           ;one_sw_two_dimmmer.c: 340: case '6':
  4842                           
  4843                           
  4844                           ;one_sw_two_dimmmer.c: 341: TMR1H=0xBE; TMR1L=0x60; T1CONbits.TMR1ON = 1; break;
  4845  0180  30BE               	movlw	190
  4846  0181  2A27               	goto	L44
  4847  0182                     i1l4295:	
  4848                           ;one_sw_two_dimmmer.c: 342: case '7':
  4849                           
  4850                           
  4851                           ;one_sw_two_dimmmer.c: 343: TMR1H=0xBF; TMR1L=0xF0; T1CONbits.TMR1ON = 1; break;
  4852  0182  30BF               	movlw	191
  4853  0183  2A2B               	goto	L45
  4854  0184                     i1l4299:	
  4855                           ;one_sw_two_dimmmer.c: 344: case '8':
  4856                           
  4857                           
  4858                           ;one_sw_two_dimmmer.c: 345: TMR1H=0xC1; TMR1L=0x80; T1CONbits.TMR1ON = 1; break;
  4859  0184  30C1               	movlw	193
  4860  0185  2A2F               	goto	L46
  4861  0186                     i1l4303:	
  4862                           ;one_sw_two_dimmmer.c: 346: case '9':
  4863                           
  4864                           
  4865                           ;one_sw_two_dimmmer.c: 347: TMR1H=0xC3; TMR1L=0x10; T1CONbits.TMR1ON = 1; break;
  4866  0186  30C3               	movlw	195
  4867  0187  2A33               	goto	L47
  4868  0188                     i1l4309:	
  4869                           ;one_sw_two_dimmmer.c: 350: }
  4870                           
  4871                           ;one_sw_two_dimmmer.c: 349: break;
  4872                           
  4873                           ;one_sw_two_dimmmer.c: 348: default:
  4874                           
  4875                           
  4876                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4877                           ; Switch size 1, requested type "space"
  4878                           ; Number of cases is 1, Range of values is 0 to 0
  4879                           ; switch strategies available:
  4880                           ; Name         Instructions Cycles
  4881                           ; simple_byte            4     3 (average)
  4882                           ; direct_byte            8     6 (fixed)
  4883                           ; jumptable            260     6 (fixed)
  4884                           ;	Chosen strategy is simple_byte
  4885  0188  0854               	movf	_FAN_SPEED1_1s+1,w
  4886  0189  3A00               	xorlw	0	; case 0
  4887  018A  1903               	skipnz
  4888  018B  298D               	goto	i1l7741
  4889  018C  2A71               	goto	i1l257
  4890  018D                     i1l7741:	
  4891                           
  4892                           ; Switch size 1, requested type "space"
  4893                           ; Number of cases is 10, Range of values is 48 to 57
  4894                           ; switch strategies available:
  4895                           ; Name         Instructions Cycles
  4896                           ; direct_byte           29     9 (fixed)
  4897                           ; simple_byte           31    16 (average)
  4898                           ; jumptable            263     9 (fixed)
  4899                           ;	Chosen strategy is direct_byte
  4900  018D  0853               	movf	_FAN_SPEED1_1s,w
  4901  018E  3ED0               	addlw	-48
  4902  018F  1C03               	skipc
  4903  0190  2A71               	goto	i1l257
  4904  0191  0084               	movwf	4
  4905  0192  300A               	movlw	10
  4906  0193  0204               	subwf	4,w
  4907  0194  1803               	skipnc
  4908  0195  2A71               	goto	i1l257
  4909  0196  3188               	movlp	high i1S7743
  4910  0197  3504               	lslf	4,w
  4911  0198  3E64               	addlw	low i1S7743
  4912  0199  0082               	movwf	2
  4913                           
  4914                           ;one_sw_two_dimmmer.c: 351: break;
  4915  019A  2A71               	goto	i1l257
  4916  019B                     i1l4311:	
  4917                           ;one_sw_two_dimmmer.c: 355: {
  4918                           ;one_sw_two_dimmmer.c: 356: case '0':
  4919                           
  4920                           ;one_sw_two_dimmmer.c: 354: switch(FAN_SPEED1_1s)
  4921                           
  4922                           ;one_sw_two_dimmmer.c: 352: case '6':
  4923                           
  4924                           
  4925                           ;one_sw_two_dimmmer.c: 357: TMR1H=0xC4; TMR1L=0xA0; T1CONbits.TMR1ON = 1; break;
  4926  019B  30C4               	movlw	196
  4927  019C  2A37               	goto	L48
  4928  019D                     i1l4315:	
  4929                           ;one_sw_two_dimmmer.c: 358: case '1':
  4930                           
  4931                           
  4932                           ;one_sw_two_dimmmer.c: 359: TMR1H=0xC6; TMR1L=0x30; T1CONbits.TMR1ON = 1; break;
  4933  019D  30C6               	movlw	198
  4934  019E  2A3B               	goto	L49
  4935  019F                     i1l4319:	
  4936                           ;one_sw_two_dimmmer.c: 360: case '2':
  4937                           
  4938                           
  4939                           ;one_sw_two_dimmmer.c: 361: TMR1H=0xC7; TMR1L=0xC0; T1CONbits.TMR1ON = 1; break;
  4940  019F  30C7               	movlw	199
  4941  01A0  2A3F               	goto	L50
  4942  01A1                     i1l4323:	
  4943                           ;one_sw_two_dimmmer.c: 362: case '3':
  4944                           
  4945                           
  4946                           ;one_sw_two_dimmmer.c: 363: TMR1H=0xC9; TMR1L=0x50; T1CONbits.TMR1ON = 1; break;
  4947  01A1  30C9               	movlw	201
  4948  01A2  2A43               	goto	L51
  4949  01A3                     i1l4327:	
  4950                           ;one_sw_two_dimmmer.c: 364: case '4':
  4951                           
  4952                           
  4953                           ;one_sw_two_dimmmer.c: 365: TMR1H=0xCA; TMR1L=0xE0; T1CONbits.TMR1ON = 1; break;
  4954  01A3  30CA               	movlw	202
  4955  01A4  2A47               	goto	L21
  4956  01A5                     i1l4331:	
  4957                           ;one_sw_two_dimmmer.c: 366: case '5':
  4958                           
  4959                           
  4960                           ;one_sw_two_dimmmer.c: 367: TMR1H=0xCC; TMR1L=0x70; T1CONbits.TMR1ON = 1; break;
  4961  01A5  30CC               	movlw	204
  4962  01A6  29F0               	goto	L37
  4963  01A7                     i1l4335:	
  4964                           ;one_sw_two_dimmmer.c: 368: case '6':
  4965                           
  4966                           
  4967                           ;one_sw_two_dimmmer.c: 369: TMR1H=0xCE; TMR1L=0x00; T1CONbits.TMR1ON = 1; break;
  4968  01A7  30CE               	movlw	206
  4969  01A8  29F8               	goto	L38
  4970  01A9                     i1l4341:	
  4971                           ;one_sw_two_dimmmer.c: 370: case '7':
  4972                           
  4973                           
  4974                           ;one_sw_two_dimmmer.c: 371: TMR1H=0xCF; TMR1L=0x90; T1CONbits.TMR1ON = 1; break;
  4975  01A9  30CF               	movlw	207
  4976  01AA  29FC               	goto	L39
  4977  01AB                     i1l4345:	
  4978                           ;one_sw_two_dimmmer.c: 372: case '8':
  4979                           
  4980                           
  4981                           ;one_sw_two_dimmmer.c: 373: TMR1H=0xD1; TMR1L=0x20; T1CONbits.TMR1ON = 1; break;
  4982  01AB  30D1               	movlw	209
  4983  01AC  2A00               	goto	L40
  4984  01AD                     i1l4349:	
  4985                           ;one_sw_two_dimmmer.c: 374: case '9':
  4986                           
  4987                           
  4988                           ;one_sw_two_dimmmer.c: 375: TMR1H=0xD2; TMR1L=0xB0; T1CONbits.TMR1ON = 1; break;
  4989  01AD  30D2               	movlw	210
  4990  01AE  2A04               	goto	L41
  4991  01AF                     i1l4355:	
  4992                           ;one_sw_two_dimmmer.c: 378: }
  4993                           
  4994                           ;one_sw_two_dimmmer.c: 377: break;
  4995                           
  4996                           ;one_sw_two_dimmmer.c: 376: default:
  4997                           
  4998                           
  4999                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5000                           ; Switch size 1, requested type "space"
  5001                           ; Number of cases is 1, Range of values is 0 to 0
  5002                           ; switch strategies available:
  5003                           ; Name         Instructions Cycles
  5004                           ; simple_byte            4     3 (average)
  5005                           ; direct_byte            8     6 (fixed)
  5006                           ; jumptable            260     6 (fixed)
  5007                           ;	Chosen strategy is simple_byte
  5008  01AF  0854               	movf	_FAN_SPEED1_1s+1,w
  5009  01B0  3A00               	xorlw	0	; case 0
  5010  01B1  1903               	skipnz
  5011  01B2  29B4               	goto	i1l7745
  5012  01B3  2A71               	goto	i1l257
  5013  01B4                     i1l7745:	
  5014                           
  5015                           ; Switch size 1, requested type "space"
  5016                           ; Number of cases is 10, Range of values is 48 to 57
  5017                           ; switch strategies available:
  5018                           ; Name         Instructions Cycles
  5019                           ; direct_byte           29     9 (fixed)
  5020                           ; simple_byte           31    16 (average)
  5021                           ; jumptable            263     9 (fixed)
  5022                           ;	Chosen strategy is direct_byte
  5023  01B4  0853               	movf	_FAN_SPEED1_1s,w
  5024  01B5  3ED0               	addlw	-48
  5025  01B6  1C03               	skipc
  5026  01B7  2A71               	goto	i1l257
  5027  01B8  0084               	movwf	4
  5028  01B9  300A               	movlw	10
  5029  01BA  0204               	subwf	4,w
  5030  01BB  1803               	skipnc
  5031  01BC  2A71               	goto	i1l257
  5032  01BD  3188               	movlp	high i1S7747
  5033  01BE  3504               	lslf	4,w
  5034  01BF  3E78               	addlw	low i1S7747
  5035  01C0  0082               	movwf	2
  5036                           
  5037                           ;one_sw_two_dimmmer.c: 379: break;
  5038  01C1  2A71               	goto	i1l257
  5039  01C2                     i1l4357:	
  5040                           ;one_sw_two_dimmmer.c: 383: {
  5041                           ;one_sw_two_dimmmer.c: 384: case '0':
  5042                           
  5043                           ;one_sw_two_dimmmer.c: 382: switch(FAN_SPEED1_1s)
  5044                           
  5045                           ;one_sw_two_dimmmer.c: 380: case '7':
  5046                           
  5047                           
  5048                           ;one_sw_two_dimmmer.c: 385: TMR1H=0xD4; TMR1L=0x40; T1CONbits.TMR1ON = 1; break;
  5049  01C2  30D4               	movlw	212
  5050  01C3  2A0C               	goto	L42
  5051  01C4                     i1l4361:	
  5052                           ;one_sw_two_dimmmer.c: 386: case '1':
  5053                           
  5054                           
  5055                           ;one_sw_two_dimmmer.c: 387: TMR1H=0xD5; TMR1L=0xD0; T1CONbits.TMR1ON = 1; break;
  5056  01C4  30D5               	movlw	213
  5057  01C5  2A23               	goto	L43
  5058  01C6                     i1l4365:	
  5059                           ;one_sw_two_dimmmer.c: 388: case '2':
  5060                           
  5061                           
  5062                           ;one_sw_two_dimmmer.c: 389: TMR1H=0xD7; TMR1L=0x60; T1CONbits.TMR1ON = 1; break;
  5063  01C6  30D7               	movlw	215
  5064  01C7  2A27               	goto	L44
  5065  01C8                     i1l4369:	
  5066                           ;one_sw_two_dimmmer.c: 390: case '3':
  5067                           
  5068                           
  5069                           ;one_sw_two_dimmmer.c: 391: TMR1H=0xD8; TMR1L=0xF0; T1CONbits.TMR1ON = 1; break;
  5070  01C8  30D8               	movlw	216
  5071  01C9  2A2B               	goto	L45
  5072  01CA                     i1l4373:	
  5073                           ;one_sw_two_dimmmer.c: 392: case '4':
  5074                           
  5075                           
  5076                           ;one_sw_two_dimmmer.c: 393: TMR1H=0xDA; TMR1L=0x80; T1CONbits.TMR1ON = 1; break;
  5077  01CA  30DA               	movlw	218
  5078  01CB  2A2F               	goto	L46
  5079  01CC                     i1l4377:	
  5080                           ;one_sw_two_dimmmer.c: 394: case '5':
  5081                           
  5082                           
  5083                           ;one_sw_two_dimmmer.c: 395: TMR1H=0xDC; TMR1L=0x10; T1CONbits.TMR1ON = 1; break;
  5084  01CC  30DC               	movlw	220
  5085  01CD  2A33               	goto	L47
  5086  01CE                     i1l4381:	
  5087                           ;one_sw_two_dimmmer.c: 396: case '6':
  5088                           
  5089                           
  5090                           ;one_sw_two_dimmmer.c: 397: TMR1H=0xDD; TMR1L=0xA0; T1CONbits.TMR1ON = 1; break;
  5091  01CE  30DD               	movlw	221
  5092  01CF  2A37               	goto	L48
  5093  01D0                     i1l4385:	
  5094                           ;one_sw_two_dimmmer.c: 398: case '7':
  5095                           
  5096                           
  5097                           ;one_sw_two_dimmmer.c: 399: TMR1H=0xDF; TMR1L=0x30; T1CONbits.TMR1ON = 1; break;
  5098  01D0  30DF               	movlw	223
  5099  01D1  2A3B               	goto	L49
  5100  01D2                     i1l4389:	
  5101                           ;one_sw_two_dimmmer.c: 400: case '8':
  5102                           
  5103                           
  5104                           ;one_sw_two_dimmmer.c: 401: TMR1H=0xE0; TMR1L=0xC0; T1CONbits.TMR1ON = 1; break;
  5105  01D2  30E0               	movlw	224
  5106  01D3  2A3F               	goto	L50
  5107  01D4                     i1l4393:	
  5108                           ;one_sw_two_dimmmer.c: 402: case '9':
  5109                           
  5110                           
  5111                           ;one_sw_two_dimmmer.c: 403: TMR1H=0xE2; TMR1L=0x50; T1CONbits.TMR1ON = 1; break;
  5112  01D4  30E2               	movlw	226
  5113  01D5  2A43               	goto	L51
  5114  01D6                     i1l4399:	
  5115                           ;one_sw_two_dimmmer.c: 406: }
  5116                           
  5117                           ;one_sw_two_dimmmer.c: 405: break;
  5118                           
  5119                           ;one_sw_two_dimmmer.c: 404: default:
  5120                           
  5121                           
  5122                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5123                           ; Switch size 1, requested type "space"
  5124                           ; Number of cases is 1, Range of values is 0 to 0
  5125                           ; switch strategies available:
  5126                           ; Name         Instructions Cycles
  5127                           ; simple_byte            4     3 (average)
  5128                           ; direct_byte            8     6 (fixed)
  5129                           ; jumptable            260     6 (fixed)
  5130                           ;	Chosen strategy is simple_byte
  5131  01D6  0854               	movf	_FAN_SPEED1_1s+1,w
  5132  01D7  3A00               	xorlw	0	; case 0
  5133  01D8  1903               	skipnz
  5134  01D9  29DB               	goto	i1l7749
  5135  01DA  2A71               	goto	i1l257
  5136  01DB                     i1l7749:	
  5137                           
  5138                           ; Switch size 1, requested type "space"
  5139                           ; Number of cases is 10, Range of values is 48 to 57
  5140                           ; switch strategies available:
  5141                           ; Name         Instructions Cycles
  5142                           ; direct_byte           29     9 (fixed)
  5143                           ; simple_byte           31    16 (average)
  5144                           ; jumptable            263     9 (fixed)
  5145                           ;	Chosen strategy is direct_byte
  5146  01DB  0853               	movf	_FAN_SPEED1_1s,w
  5147  01DC  3ED0               	addlw	-48
  5148  01DD  1C03               	skipc
  5149  01DE  2A71               	goto	i1l257
  5150  01DF  0084               	movwf	4
  5151  01E0  300A               	movlw	10
  5152  01E1  0204               	subwf	4,w
  5153  01E2  1803               	skipnc
  5154  01E3  2A71               	goto	i1l257
  5155  01E4  3188               	movlp	high i1S7751
  5156  01E5  3504               	lslf	4,w
  5157  01E6  3E8C               	addlw	low i1S7751
  5158  01E7  0082               	movwf	2
  5159                           
  5160                           ;one_sw_two_dimmmer.c: 407: break;
  5161  01E8  2A71               	goto	i1l257
  5162  01E9                     i1l4401:	
  5163                           ;one_sw_two_dimmmer.c: 411: {
  5164                           ;one_sw_two_dimmmer.c: 412: case '0':
  5165                           
  5166                           ;one_sw_two_dimmmer.c: 410: switch(FAN_SPEED1_1s)
  5167                           
  5168                           ;one_sw_two_dimmmer.c: 408: case '8':
  5169                           
  5170                           
  5171                           ;one_sw_two_dimmmer.c: 413: TMR1H=0xE3; TMR1L=0xE0; T1CONbits.TMR1ON = 1; break;
  5172  01E9  30E3               	movlw	227
  5173  01EA  2A47               	goto	L21
  5174  01EB                     i1l4405:	
  5175                           ;one_sw_two_dimmmer.c: 414: case '1':
  5176                           
  5177                           
  5178                           ;one_sw_two_dimmmer.c: 415: TMR1H=0xE4; TMR1L=0xA8; T1CONbits.TMR1ON = 1; break;
  5179  01EB  30E4               	movlw	228
  5180  01EC                     L100:	
  5181  01EC  0097               	movwf	23	;volatile
  5182  01ED  30A8               	movlw	168
  5183  01EE  2A49               	goto	L4
  5184  01EF                     i1l4409:	
  5185                           ;one_sw_two_dimmmer.c: 416: case '2':
  5186                           
  5187                           
  5188                           ;one_sw_two_dimmmer.c: 417: TMR1H=0xE5; TMR1L=0x70; T1CONbits.TMR1ON = 1; break;
  5189  01EF  30E5               	movlw	229
  5190  01F0                     L37:	
  5191  01F0  0097               	movwf	23	;volatile
  5192  01F1  3070               	movlw	112
  5193  01F2  2A49               	goto	L4
  5194  01F3                     i1l4413:	
  5195                           ;one_sw_two_dimmmer.c: 418: case '3':
  5196                           
  5197                           
  5198                           ;one_sw_two_dimmmer.c: 419: TMR1H=0xE6; TMR1L=0x38; T1CONbits.TMR1ON = 1; break;
  5199  01F3  30E6               	movlw	230
  5200  01F4  0097               	movwf	23	;volatile
  5201  01F5  3038               	movlw	56
  5202  01F6  2A49               	goto	L4
  5203  01F7                     i1l4417:	
  5204                           ;one_sw_two_dimmmer.c: 420: case '4':
  5205                           
  5206                           
  5207                           ;one_sw_two_dimmmer.c: 421: TMR1H=0xE7; TMR1L=0x00; T1CONbits.TMR1ON = 1; break;
  5208  01F7  30E7               	movlw	231
  5209  01F8                     L38:	
  5210  01F8  0097               	movwf	23	;volatile
  5211  01F9  0196               	clrf	22	;volatile
  5212  01FA  2A4A               	goto	i1l4485
  5213  01FB                     i1l4423:	
  5214                           ;one_sw_two_dimmmer.c: 422: case '5':
  5215                           
  5216                           
  5217                           ;one_sw_two_dimmmer.c: 423: TMR1H=0xE8; TMR1L=0x90; T1CONbits.TMR1ON = 1; break;
  5218  01FB  30E8               	movlw	232
  5219  01FC                     L39:	
  5220  01FC  0097               	movwf	23	;volatile
  5221  01FD  3090               	movlw	144
  5222  01FE  2A49               	goto	L4
  5223  01FF                     i1l4427:	
  5224                           ;one_sw_two_dimmmer.c: 424: case '6':
  5225                           
  5226                           
  5227                           ;one_sw_two_dimmmer.c: 425: TMR1H=0xEA; TMR1L=0x20; T1CONbits.TMR1ON = 1; break;
  5228  01FF  30EA               	movlw	234
  5229  0200                     L40:	
  5230  0200  0097               	movwf	23	;volatile
  5231  0201  3020               	movlw	32
  5232  0202  2A49               	goto	L4
  5233  0203                     i1l4431:	
  5234                           ;one_sw_two_dimmmer.c: 426: case '7':
  5235                           
  5236                           
  5237                           ;one_sw_two_dimmmer.c: 427: TMR1H=0xEB; TMR1L=0xB0; T1CONbits.TMR1ON = 1; break;
  5238  0203  30EB               	movlw	235
  5239  0204                     L41:	
  5240  0204  0097               	movwf	23	;volatile
  5241  0205  30B0               	movlw	176
  5242  0206  2A49               	goto	L4
  5243  0207                     i1l4435:	
  5244                           ;one_sw_two_dimmmer.c: 428: case '8':
  5245                           
  5246                           
  5247                           ;one_sw_two_dimmmer.c: 429: TMR1H=0xEC; TMR1L=0x78; T1CONbits.TMR1ON = 1; break;
  5248  0207  30EC               	movlw	236
  5249  0208                     L102:	
  5250  0208  0097               	movwf	23	;volatile
  5251  0209  3078               	movlw	120
  5252  020A  2A49               	goto	L4
  5253  020B                     i1l4439:	
  5254                           ;one_sw_two_dimmmer.c: 430: case '9':
  5255                           
  5256                           
  5257                           ;one_sw_two_dimmmer.c: 431: TMR1H=0xED; TMR1L=0x40; T1CONbits.TMR1ON = 1; break;
  5258  020B  30ED               	movlw	237
  5259  020C                     L42:	
  5260  020C  0097               	movwf	23	;volatile
  5261  020D  3040               	movlw	64
  5262  020E  2A49               	goto	L4
  5263  020F                     i1l4445:	
  5264                           ;one_sw_two_dimmmer.c: 434: }
  5265                           
  5266                           ;one_sw_two_dimmmer.c: 433: break;
  5267                           
  5268                           ;one_sw_two_dimmmer.c: 432: default:
  5269                           
  5270                           
  5271                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5272                           ; Switch size 1, requested type "space"
  5273                           ; Number of cases is 1, Range of values is 0 to 0
  5274                           ; switch strategies available:
  5275                           ; Name         Instructions Cycles
  5276                           ; simple_byte            4     3 (average)
  5277                           ; direct_byte            8     6 (fixed)
  5278                           ; jumptable            260     6 (fixed)
  5279                           ;	Chosen strategy is simple_byte
  5280  020F  0854               	movf	_FAN_SPEED1_1s+1,w
  5281  0210  3A00               	xorlw	0	; case 0
  5282  0211  1903               	skipnz
  5283  0212  2A14               	goto	i1l7753
  5284  0213  2A71               	goto	i1l257
  5285  0214                     i1l7753:	
  5286                           
  5287                           ; Switch size 1, requested type "space"
  5288                           ; Number of cases is 10, Range of values is 48 to 57
  5289                           ; switch strategies available:
  5290                           ; Name         Instructions Cycles
  5291                           ; direct_byte           29     9 (fixed)
  5292                           ; simple_byte           31    16 (average)
  5293                           ; jumptable            263     9 (fixed)
  5294                           ;	Chosen strategy is direct_byte
  5295  0214  0853               	movf	_FAN_SPEED1_1s,w
  5296  0215  3ED0               	addlw	-48
  5297  0216  1C03               	skipc
  5298  0217  2A71               	goto	i1l257
  5299  0218  0084               	movwf	4
  5300  0219  300A               	movlw	10
  5301  021A  0204               	subwf	4,w
  5302  021B  1803               	skipnc
  5303  021C  2A71               	goto	i1l257
  5304  021D  3188               	movlp	high i1S7755
  5305  021E  3504               	lslf	4,w
  5306  021F  3EA0               	addlw	low i1S7755
  5307  0220  0082               	movwf	2
  5308                           
  5309                           ;one_sw_two_dimmmer.c: 435: break;
  5310  0221  2A71               	goto	i1l257
  5311  0222                     i1l4447:	
  5312                           ;one_sw_two_dimmmer.c: 439: {
  5313                           ;one_sw_two_dimmmer.c: 440: case '0':
  5314                           
  5315                           ;one_sw_two_dimmmer.c: 438: switch(FAN_SPEED1_1s)
  5316                           
  5317                           ;one_sw_two_dimmmer.c: 436: case '9':
  5318                           
  5319                           
  5320                           ;one_sw_two_dimmmer.c: 441: TMR1H=0xEE; TMR1L=0xD0; T1CONbits.TMR1ON = 1; break;
  5321  0222  30EE               	movlw	238
  5322  0223                     L43:	
  5323  0223  0097               	movwf	23	;volatile
  5324  0224  30D0               	movlw	208
  5325  0225  2A49               	goto	L4
  5326  0226                     i1l4451:	
  5327                           ;one_sw_two_dimmmer.c: 442: case '1':
  5328                           
  5329                           
  5330                           ;one_sw_two_dimmmer.c: 443: TMR1H=0xF0; TMR1L=0x60; T1CONbits.TMR1ON = 1; break;
  5331  0226  30F0               	movlw	240
  5332  0227                     L44:	
  5333  0227  0097               	movwf	23	;volatile
  5334  0228  3060               	movlw	96
  5335  0229  2A49               	goto	L4
  5336  022A                     i1l4455:	
  5337                           ;one_sw_two_dimmmer.c: 444: case '2':
  5338                           
  5339                           
  5340                           ;one_sw_two_dimmmer.c: 445: TMR1H=0xF1; TMR1L=0xF0; T1CONbits.TMR1ON = 1; break;
  5341  022A  30F1               	movlw	241
  5342  022B                     L45:	
  5343  022B  0097               	movwf	23	;volatile
  5344  022C  30F0               	movlw	240
  5345  022D  2A49               	goto	L4
  5346  022E                     i1l4459:	
  5347                           ;one_sw_two_dimmmer.c: 446: case '3':
  5348                           
  5349                           
  5350                           ;one_sw_two_dimmmer.c: 447: TMR1H=0xF3; TMR1L=0x80; T1CONbits.TMR1ON = 1; break;
  5351  022E  30F3               	movlw	243
  5352  022F                     L46:	
  5353  022F  0097               	movwf	23	;volatile
  5354  0230  3080               	movlw	128
  5355  0231  2A49               	goto	L4
  5356  0232                     i1l4463:	
  5357                           ;one_sw_two_dimmmer.c: 448: case '4':
  5358                           
  5359                           
  5360                           ;one_sw_two_dimmmer.c: 449: TMR1H=0xF5; TMR1L=0x10; T1CONbits.TMR1ON = 1; break;
  5361  0232  30F5               	movlw	245
  5362  0233                     L47:	
  5363  0233  0097               	movwf	23	;volatile
  5364  0234  3010               	movlw	16
  5365  0235  2A49               	goto	L4
  5366  0236                     i1l4467:	
  5367                           ;one_sw_two_dimmmer.c: 450: case '5':
  5368                           
  5369                           
  5370                           ;one_sw_two_dimmmer.c: 451: TMR1H=0xF6; TMR1L=0xA0; T1CONbits.TMR1ON = 1; break;
  5371  0236  30F6               	movlw	246
  5372  0237                     L48:	
  5373  0237  0097               	movwf	23	;volatile
  5374  0238  30A0               	movlw	160
  5375  0239  2A49               	goto	L4
  5376  023A                     i1l4471:	
  5377                           ;one_sw_two_dimmmer.c: 452: case '6':
  5378                           
  5379                           
  5380                           ;one_sw_two_dimmmer.c: 453: TMR1H=0xF8; TMR1L=0x30; T1CONbits.TMR1ON = 1; break;
  5381  023A  30F8               	movlw	248
  5382  023B                     L49:	
  5383  023B  0097               	movwf	23	;volatile
  5384  023C  3030               	movlw	48
  5385  023D  2A49               	goto	L4
  5386  023E                     i1l4475:	
  5387                           ;one_sw_two_dimmmer.c: 454: case '7':
  5388                           
  5389                           
  5390                           ;one_sw_two_dimmmer.c: 455: TMR1H=0xF9; TMR1L=0xC0; T1CONbits.TMR1ON = 1; break;
  5391  023E  30F9               	movlw	249
  5392  023F                     L50:	
  5393  023F  0097               	movwf	23	;volatile
  5394  0240  30C0               	movlw	192
  5395  0241  2A49               	goto	L4
  5396  0242                     i1l4479:	
  5397                           ;one_sw_two_dimmmer.c: 456: case '8':
  5398                           
  5399                           
  5400                           ;one_sw_two_dimmmer.c: 457: TMR1H=0xFB; TMR1L=0x50; T1CONbits.TMR1ON = 1; break;
  5401  0242  30FB               	movlw	251
  5402  0243                     L51:	
  5403  0243  0097               	movwf	23	;volatile
  5404  0244  3050               	movlw	80
  5405  0245  2A49               	goto	L4
  5406  0246                     i1l4483:	
  5407                           ;one_sw_two_dimmmer.c: 458: case '9':
  5408                           
  5409                           
  5410                           ;one_sw_two_dimmmer.c: 459: TMR1H=0xFC; TMR1L=0xE0; T1CONbits.TMR1ON = 1; break;
  5411  0246  30FC               	movlw	252
  5412  0247                     L21:	
  5413  0247  0097               	movwf	23	;volatile
  5414  0248  30E0               	movlw	224
  5415  0249                     L4:	
  5416  0249  0096               	movwf	22	;volatile
  5417  024A                     i1l4485:	
  5418  024A  1418               	bsf	24,0	;volatile
  5419                           
  5420                           ;one_sw_two_dimmmer.c: 462: }
  5421                           
  5422                           ;one_sw_two_dimmmer.c: 461: break;
  5423                           
  5424                           ;one_sw_two_dimmmer.c: 460: default:
  5425  024B  2A71               	goto	i1l257
  5426  024C                     i1l4489:	
  5427                           
  5428                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5429                           ; Switch size 1, requested type "space"
  5430                           ; Number of cases is 1, Range of values is 0 to 0
  5431                           ; switch strategies available:
  5432                           ; Name         Instructions Cycles
  5433                           ; simple_byte            4     3 (average)
  5434                           ; direct_byte            8     6 (fixed)
  5435                           ; jumptable            260     6 (fixed)
  5436                           ;	Chosen strategy is simple_byte
  5437  024C  0854               	movf	_FAN_SPEED1_1s+1,w
  5438  024D  3A00               	xorlw	0	; case 0
  5439  024E  1903               	skipnz
  5440  024F  2A51               	goto	i1l7757
  5441  0250  2A71               	goto	i1l257
  5442  0251                     i1l7757:	
  5443                           
  5444                           ; Switch size 1, requested type "space"
  5445                           ; Number of cases is 10, Range of values is 48 to 57
  5446                           ; switch strategies available:
  5447                           ; Name         Instructions Cycles
  5448                           ; direct_byte           29     9 (fixed)
  5449                           ; simple_byte           31    16 (average)
  5450                           ; jumptable            263     9 (fixed)
  5451                           ;	Chosen strategy is direct_byte
  5452  0251  0853               	movf	_FAN_SPEED1_1s,w
  5453  0252  3ED0               	addlw	-48
  5454  0253  1C03               	skipc
  5455  0254  2A71               	goto	i1l257
  5456  0255  0084               	movwf	4
  5457  0256  300A               	movlw	10
  5458  0257  0204               	subwf	4,w
  5459  0258  1803               	skipnc
  5460  0259  2A71               	goto	i1l257
  5461  025A  3188               	movlp	high i1S7759
  5462  025B  3504               	lslf	4,w
  5463  025C  3EB4               	addlw	low i1S7759
  5464  025D  0082               	movwf	2
  5465                           
  5466                           ;one_sw_two_dimmmer.c: 466: }
  5467                           
  5468                           ;one_sw_two_dimmmer.c: 465: break;
  5469                           
  5470                           ;one_sw_two_dimmmer.c: 464: default:
  5471                           
  5472                           ;one_sw_two_dimmmer.c: 463: break;
  5473  025E  2A71               	goto	i1l257
  5474  025F                     i1l4493:	
  5475                           
  5476                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5477                           ; Switch size 1, requested type "space"
  5478                           ; Number of cases is 1, Range of values is 0 to 0
  5479                           ; switch strategies available:
  5480                           ; Name         Instructions Cycles
  5481                           ; simple_byte            4     3 (average)
  5482                           ; direct_byte            8     6 (fixed)
  5483                           ; jumptable            260     6 (fixed)
  5484                           ;	Chosen strategy is simple_byte
  5485  025F  0856               	movf	_FAN_SPEED1_10s+1,w
  5486  0260  3A00               	xorlw	0	; case 0
  5487  0261  1903               	skipnz
  5488  0262  2A64               	goto	i1l7761
  5489  0263  2A71               	goto	i1l257
  5490  0264                     i1l7761:	
  5491                           
  5492                           ; Switch size 1, requested type "space"
  5493                           ; Number of cases is 10, Range of values is 48 to 57
  5494                           ; switch strategies available:
  5495                           ; Name         Instructions Cycles
  5496                           ; direct_byte           29     9 (fixed)
  5497                           ; simple_byte           31    16 (average)
  5498                           ; jumptable            263     9 (fixed)
  5499                           ;	Chosen strategy is direct_byte
  5500  0264  0855               	movf	_FAN_SPEED1_10s,w
  5501  0265  3ED0               	addlw	-48
  5502  0266  1C03               	skipc
  5503  0267  2A71               	goto	i1l257
  5504  0268  0084               	movwf	4
  5505  0269  300A               	movlw	10
  5506  026A  0204               	subwf	4,w
  5507  026B  1803               	skipnc
  5508  026C  2A71               	goto	i1l257
  5509  026D  3188               	movlp	high i1S7763
  5510  026E  3504               	lslf	4,w
  5511  026F  3EC8               	addlw	low i1S7763
  5512  0270  0082               	movwf	2
  5513  0271                     i1l257:	
  5514                           
  5515                           ;one_sw_two_dimmmer.c: 467: }
  5516                           ;one_sw_two_dimmmer.c: 468: PIR1bits.CCP1IF = 0;
  5517  0271  0020               	movlb	0	; select bank0
  5518  0272  1111               	bcf	17,2	;volatile
  5519  0273                     i1l256:	
  5520                           
  5521                           ;one_sw_two_dimmmer.c: 469: }
  5522                           ;one_sw_two_dimmmer.c: 470: if(PIR3bits.CCP3IF == 1)
  5523  0273  1E13               	btfss	19,4	;volatile
  5524  0274  2C86               	goto	i1l546
  5525                           
  5526                           ;one_sw_two_dimmmer.c: 471: {
  5527                           ;one_sw_two_dimmmer.c: 472: PIR3bits.CCP3IF=0;
  5528  0275  1213               	bcf	19,4	;volatile
  5529                           
  5530                           ;one_sw_two_dimmmer.c: 474: if(FAN_FLAG2==1 && ak==1)
  5531  0276  0021               	movlb	1	; select bank1
  5532  0277  0354               	decf	_FAN_FLAG2^(0+128),w
  5533  0278  0455               	iorwf	(_FAN_FLAG2+1)^(0+128),w
  5534  0279  1D03               	btfss	3,2
  5535  027A  2C84               	goto	i1l402
  5536  027B  0020               	movlb	0	; select bank0
  5537  027C  0357               	decf	_ak,w
  5538  027D  0458               	iorwf	_ak+1,w
  5539  027E  1903               	btfsc	3,2
  5540  027F  2C72               	goto	i1l4955
  5541  0280  2C84               	goto	i1l402
  5542  0281                     i1l4503:	
  5543                           ;one_sw_two_dimmmer.c: 481: {
  5544                           ;one_sw_two_dimmmer.c: 482: case '0':
  5545                           
  5546                           ;one_sw_two_dimmmer.c: 480: switch(FAN_SPEED2_1s)
  5547                           
  5548                           ;one_sw_two_dimmmer.c: 477: {
  5549                           ;one_sw_two_dimmmer.c: 478: case '0':
  5550                           
  5551                           ;one_sw_two_dimmmer.c: 475: {
  5552                           ;one_sw_two_dimmmer.c: 476: switch(FAN_SPEED2_10s)
  5553                           
  5554                           
  5555                           ;one_sw_two_dimmmer.c: 483: TMR3H=0x7B; TMR3L=0x30; T3CONbits.TMR3ON = 1; break;
  5556  0281  307B               	movlw	123
  5557  0282  2C49               	goto	L95
  5558  0283                     i1l4507:	
  5559                           ;one_sw_two_dimmmer.c: 484: case '1':
  5560                           
  5561                           
  5562                           ;one_sw_two_dimmmer.c: 485: TMR3H=0x7C; TMR3L=0xC0; T3CONbits.TMR3ON = 1; break;
  5563  0283  307C               	movlw	124
  5564  0284  2C4E               	goto	L96
  5565  0285                     i1l4511:	
  5566                           ;one_sw_two_dimmmer.c: 486: case '2':
  5567                           
  5568                           
  5569                           ;one_sw_two_dimmmer.c: 487: TMR3H=0x7D; TMR3L=0x88; T3CONbits.TMR3ON = 1; break;
  5570  0285  307D               	movlw	125
  5571  0286  0028               	movlb	8	; select bank8
  5572  0287  0092               	movwf	18	;volatile
  5573  0288  3088               	movlw	136
  5574  0289  2C5B               	goto	L5
  5575  028A                     i1l4515:	
  5576                           ;one_sw_two_dimmmer.c: 488: case '3':
  5577                           
  5578                           
  5579                           ;one_sw_two_dimmmer.c: 489: TMR3H=0x7F; TMR3L=0x18; T3CONbits.TMR3ON = 1; break;
  5580  028A  307F               	movlw	127
  5581  028B  0028               	movlb	8	; select bank8
  5582  028C  0092               	movwf	18	;volatile
  5583  028D  3018               	movlw	24
  5584  028E  2C5B               	goto	L5
  5585  028F                     i1l4519:	
  5586                           ;one_sw_two_dimmmer.c: 490: case '4':
  5587                           
  5588                           
  5589                           ;one_sw_two_dimmmer.c: 491: TMR3H=0x80; TMR3L=0xA8; T3CONbits.TMR3ON = 1; break;
  5590  028F  3080               	movlw	128
  5591  0290  2BEA               	goto	L105
  5592  0291                     i1l4523:	
  5593                           ;one_sw_two_dimmmer.c: 492: case '5':
  5594                           
  5595                           
  5596                           ;one_sw_two_dimmmer.c: 493: TMR3H=0x81; TMR3L=0x70; T3CONbits.TMR3ON = 1; break;
  5597  0291  3081               	movlw	129
  5598  0292  2BEF               	goto	L83
  5599  0293                     i1l4527:	
  5600                           ;one_sw_two_dimmmer.c: 494: case '6':
  5601                           
  5602                           
  5603                           ;one_sw_two_dimmmer.c: 495: TMR3H=0x83; TMR3L=0x00; T3CONbits.TMR3ON = 1; break;
  5604  0293  3083               	movlw	131
  5605  0294  2BF9               	goto	L84
  5606  0295                     i1l4533:	
  5607                           ;one_sw_two_dimmmer.c: 496: case '7':
  5608                           
  5609                           
  5610                           ;one_sw_two_dimmmer.c: 497: TMR3H=0x83; TMR3L=0xC8; T3CONbits.TMR3ON = 1; break;
  5611  0295  3083               	movlw	131
  5612  0296  0028               	movlb	8	; select bank8
  5613  0297  0092               	movwf	18	;volatile
  5614  0298  30C8               	movlw	200
  5615  0299  2C5B               	goto	L5
  5616  029A                     i1l4537:	
  5617                           ;one_sw_two_dimmmer.c: 498: case '8':
  5618                           
  5619  029A  2ABB               	goto	i1l4557
  5620  029B                     i1l4541:	
  5621                           ;one_sw_two_dimmmer.c: 500: case '9':
  5622                           
  5623                           ;one_sw_two_dimmmer.c: 499: TMR3H=0x87; TMR3L=0xB0; T3CONbits.TMR3ON = 1; break;
  5624                           
  5625                           
  5626                           ;one_sw_two_dimmmer.c: 501: TMR3H=0x85; TMR3L=0x58; T3CONbits.TMR3ON = 1; break;
  5627  029B  3085               	movlw	133
  5628  029C  0028               	movlb	8	; select bank8
  5629  029D  0092               	movwf	18	;volatile
  5630  029E  3058               	movlw	88
  5631  029F  2C5B               	goto	L5
  5632  02A0                     i1l4547:	
  5633                           ;one_sw_two_dimmmer.c: 504: }
  5634                           
  5635                           ;one_sw_two_dimmmer.c: 503: break;
  5636                           
  5637                           ;one_sw_two_dimmmer.c: 502: default:
  5638                           
  5639                           
  5640                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5641                           ; Switch size 1, requested type "space"
  5642                           ; Number of cases is 1, Range of values is 0 to 0
  5643                           ; switch strategies available:
  5644                           ; Name         Instructions Cycles
  5645                           ; simple_byte            4     3 (average)
  5646                           ; direct_byte            8     6 (fixed)
  5647                           ; jumptable            260     6 (fixed)
  5648                           ;	Chosen strategy is simple_byte
  5649  02A0  0020               	movlb	0	; select bank0
  5650  02A1  0850               	movf	_FAN_SPEED2_1s+1,w
  5651  02A2  3A00               	xorlw	0	; case 0
  5652  02A3  1903               	skipnz
  5653  02A4  2AA6               	goto	i1l7765
  5654  02A5  2C84               	goto	i1l402
  5655  02A6                     i1l7765:	
  5656                           
  5657                           ; Switch size 1, requested type "space"
  5658                           ; Number of cases is 10, Range of values is 48 to 57
  5659                           ; switch strategies available:
  5660                           ; Name         Instructions Cycles
  5661                           ; direct_byte           29     9 (fixed)
  5662                           ; simple_byte           31    16 (average)
  5663                           ; jumptable            263     9 (fixed)
  5664                           ;	Chosen strategy is direct_byte
  5665  02A6  084F               	movf	_FAN_SPEED2_1s,w
  5666  02A7  3ED0               	addlw	-48
  5667  02A8  1C03               	skipc
  5668  02A9  2C84               	goto	i1l402
  5669  02AA  0084               	movwf	4
  5670  02AB  300A               	movlw	10
  5671  02AC  0204               	subwf	4,w
  5672  02AD  1803               	skipnc
  5673  02AE  2C84               	goto	i1l402
  5674  02AF  3188               	movlp	high i1S7767
  5675  02B0  3504               	lslf	4,w
  5676  02B1  3EDC               	addlw	low i1S7767
  5677  02B2  0082               	movwf	2
  5678                           
  5679                           ;one_sw_two_dimmmer.c: 505: break;
  5680  02B3  2C84               	goto	i1l402
  5681  02B4                     i1l4549:	
  5682                           ;one_sw_two_dimmmer.c: 509: {
  5683                           ;one_sw_two_dimmmer.c: 510: case '0':
  5684                           
  5685                           ;one_sw_two_dimmmer.c: 508: switch(FAN_SPEED2_1s)
  5686                           
  5687                           ;one_sw_two_dimmmer.c: 506: case '1':
  5688                           
  5689                           
  5690                           ;one_sw_two_dimmmer.c: 511: TMR3H=0x86; TMR3L=0x20; T3CONbits.TMR3ON = 1; break;
  5691  02B4  3086               	movlw	134
  5692  02B5  2C03               	goto	L86
  5693  02B6                     i1l4553:	
  5694                           ;one_sw_two_dimmmer.c: 512: case '1':
  5695                           
  5696                           
  5697                           ;one_sw_two_dimmmer.c: 513: TMR3H=0x86; TMR3L=0xE8; T3CONbits.TMR3ON = 1; break;
  5698  02B6  3086               	movlw	134
  5699  02B7  0028               	movlb	8	; select bank8
  5700  02B8  0092               	movwf	18	;volatile
  5701  02B9  30E8               	movlw	232
  5702  02BA  2C5B               	goto	L5
  5703  02BB                     i1l4557:	
  5704                           ;one_sw_two_dimmmer.c: 514: case '2':
  5705                           
  5706                           
  5707                           ;one_sw_two_dimmmer.c: 515: TMR3H=0x87; TMR3L=0xB0; T3CONbits.TMR3ON = 1; break;
  5708  02BB  3087               	movlw	135
  5709  02BC  2C08               	goto	L87
  5710  02BD                     i1l4561:	
  5711                           ;one_sw_two_dimmmer.c: 516: case '3':
  5712                           
  5713                           
  5714                           ;one_sw_two_dimmmer.c: 517: TMR3H=0x88; TMR3L=0x78; T3CONbits.TMR3ON = 1; break;
  5715  02BD  3088               	movlw	136
  5716  02BE  2C0D               	goto	L107
  5717  02BF                     i1l4565:	
  5718                           ;one_sw_two_dimmmer.c: 518: case '4':
  5719                           
  5720                           
  5721                           ;one_sw_two_dimmmer.c: 519: TMR3H=0x89; TMR3L=0x40; T3CONbits.TMR3ON = 1; break;
  5722  02BF  3089               	movlw	137
  5723  02C0  2C12               	goto	L88
  5724  02C1                     i1l4569:	
  5725                           ;one_sw_two_dimmmer.c: 520: case '5':
  5726                           
  5727                           
  5728                           ;one_sw_two_dimmmer.c: 521: TMR3H=0x8A; TMR3L=0x08; T3CONbits.TMR3ON = 1; break;
  5729  02C1  308A               	movlw	138
  5730  02C2  0028               	movlb	8	; select bank8
  5731  02C3  0092               	movwf	18	;volatile
  5732  02C4  3008               	movlw	8
  5733  02C5  2C5B               	goto	L5
  5734  02C6                     i1l4573:	
  5735                           ;one_sw_two_dimmmer.c: 522: case '6':
  5736                           
  5737                           
  5738                           ;one_sw_two_dimmmer.c: 523: TMR3H=0x8A; TMR3L=0xD0; T3CONbits.TMR3ON = 1; break;
  5739  02C6  308A               	movlw	138
  5740  02C7  2C2B               	goto	L89
  5741  02C8                     i1l4577:	
  5742                           ;one_sw_two_dimmmer.c: 524: case '7':
  5743                           
  5744                           
  5745                           ;one_sw_two_dimmmer.c: 525: TMR3H=0x8B; TMR3L=0x98; T3CONbits.TMR3ON = 1; break;
  5746  02C8  308B               	movlw	139
  5747  02C9  0028               	movlb	8	; select bank8
  5748  02CA  0092               	movwf	18	;volatile
  5749  02CB  3098               	movlw	152
  5750  02CC  2C5B               	goto	L5
  5751  02CD                     i1l4581:	
  5752                           ;one_sw_two_dimmmer.c: 526: case '8':
  5753                           
  5754                           
  5755                           ;one_sw_two_dimmmer.c: 527: TMR3H=0x8C; TMR3L=0x60; T3CONbits.TMR3ON = 1; break;
  5756  02CD  308C               	movlw	140
  5757  02CE  2C30               	goto	L90
  5758  02CF                     i1l4585:	
  5759                           ;one_sw_two_dimmmer.c: 528: case '9':
  5760                           
  5761                           
  5762                           ;one_sw_two_dimmmer.c: 529: TMR3H=0x8D; TMR3L=0x28; T3CONbits.TMR3ON = 1; break;
  5763  02CF  308D               	movlw	141
  5764  02D0  0028               	movlb	8	; select bank8
  5765  02D1  0092               	movwf	18	;volatile
  5766  02D2  3028               	movlw	40
  5767  02D3  2C5B               	goto	L5
  5768  02D4                     i1l4591:	
  5769                           ;one_sw_two_dimmmer.c: 532: }
  5770                           
  5771                           ;one_sw_two_dimmmer.c: 531: break;
  5772                           
  5773                           ;one_sw_two_dimmmer.c: 530: default:
  5774                           
  5775                           
  5776                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5777                           ; Switch size 1, requested type "space"
  5778                           ; Number of cases is 1, Range of values is 0 to 0
  5779                           ; switch strategies available:
  5780                           ; Name         Instructions Cycles
  5781                           ; simple_byte            4     3 (average)
  5782                           ; direct_byte            8     6 (fixed)
  5783                           ; jumptable            260     6 (fixed)
  5784                           ;	Chosen strategy is simple_byte
  5785  02D4  0020               	movlb	0	; select bank0
  5786  02D5  0850               	movf	_FAN_SPEED2_1s+1,w
  5787  02D6  3A00               	xorlw	0	; case 0
  5788  02D7  1903               	skipnz
  5789  02D8  2ADA               	goto	i1l7769
  5790  02D9  2C84               	goto	i1l402
  5791  02DA                     i1l7769:	
  5792                           
  5793                           ; Switch size 1, requested type "space"
  5794                           ; Number of cases is 10, Range of values is 48 to 57
  5795                           ; switch strategies available:
  5796                           ; Name         Instructions Cycles
  5797                           ; direct_byte           29     9 (fixed)
  5798                           ; simple_byte           31    16 (average)
  5799                           ; jumptable            263     9 (fixed)
  5800                           ;	Chosen strategy is direct_byte
  5801  02DA  084F               	movf	_FAN_SPEED2_1s,w
  5802  02DB  3ED0               	addlw	-48
  5803  02DC  1C03               	skipc
  5804  02DD  2C84               	goto	i1l402
  5805  02DE  0084               	movwf	4
  5806  02DF  300A               	movlw	10
  5807  02E0  0204               	subwf	4,w
  5808  02E1  1803               	skipnc
  5809  02E2  2C84               	goto	i1l402
  5810  02E3  3189               	movlp	high i1S7771
  5811  02E4  3504               	lslf	4,w
  5812  02E5  3E00               	addlw	low i1S7771
  5813  02E6  0082               	movwf	2
  5814                           
  5815                           ;one_sw_two_dimmmer.c: 533: break;
  5816  02E7  2C84               	goto	i1l402
  5817  02E8                     i1l4593:	
  5818                           ;one_sw_two_dimmmer.c: 537: {
  5819                           ;one_sw_two_dimmmer.c: 538: case '0':
  5820                           
  5821                           ;one_sw_two_dimmmer.c: 536: switch(FAN_SPEED2_1s)
  5822                           
  5823                           ;one_sw_two_dimmmer.c: 534: case '2':
  5824                           
  5825                           
  5826                           ;one_sw_two_dimmmer.c: 539: TMR3H=0x8D; TMR3L=0xF0; T3CONbits.TMR3ON = 1; break;
  5827  02E8  308D               	movlw	141
  5828  02E9  2C35               	goto	L91
  5829  02EA                     i1l4597:	
  5830                           ;one_sw_two_dimmmer.c: 540: case '1':
  5831                           
  5832                           
  5833                           ;one_sw_two_dimmmer.c: 541: TMR3H=0x8E; TMR3L=0xB8; T3CONbits.TMR3ON = 1; break;
  5834  02EA  308E               	movlw	142
  5835  02EB  0028               	movlb	8	; select bank8
  5836  02EC  0092               	movwf	18	;volatile
  5837  02ED  30B8               	movlw	184
  5838  02EE  2C5B               	goto	L5
  5839  02EF                     i1l4601:	
  5840                           ;one_sw_two_dimmmer.c: 542: case '2':
  5841                           
  5842                           
  5843                           ;one_sw_two_dimmmer.c: 543: TMR3H=0x8F; TMR3L=0x80; T3CONbits.TMR3ON = 1; break;
  5844  02EF  308F               	movlw	143
  5845  02F0  2C3A               	goto	L92
  5846  02F1                     i1l4605:	
  5847                           ;one_sw_two_dimmmer.c: 544: case '3':
  5848                           
  5849                           
  5850                           ;one_sw_two_dimmmer.c: 545: TMR3H=0x90; TMR3L=0x48; T3CONbits.TMR3ON = 1; break;
  5851  02F1  3090               	movlw	144
  5852  02F2  0028               	movlb	8	; select bank8
  5853  02F3  0092               	movwf	18	;volatile
  5854  02F4  3048               	movlw	72
  5855  02F5  2C5B               	goto	L5
  5856  02F6                     i1l4609:	
  5857                           ;one_sw_two_dimmmer.c: 546: case '4':
  5858                           
  5859                           
  5860                           ;one_sw_two_dimmmer.c: 547: TMR3H=0x91; TMR3L=0x10; T3CONbits.TMR3ON = 1; break;
  5861  02F6  3091               	movlw	145
  5862  02F7  2C3F               	goto	L93
  5863  02F8                     i1l4613:	
  5864                           ;one_sw_two_dimmmer.c: 548: case '5':
  5865                           
  5866                           
  5867                           ;one_sw_two_dimmmer.c: 549: TMR3H=0x91; TMR3L=0xD8; T3CONbits.TMR3ON = 1; break;
  5868  02F8  3091               	movlw	145
  5869  02F9  0028               	movlb	8	; select bank8
  5870  02FA  0092               	movwf	18	;volatile
  5871  02FB  30D8               	movlw	216
  5872  02FC  2C5B               	goto	L5
  5873  02FD                     i1l4617:	
  5874                           ;one_sw_two_dimmmer.c: 550: case '6':
  5875                           
  5876                           
  5877                           ;one_sw_two_dimmmer.c: 551: TMR3H=0x92; TMR3L=0xA0; T3CONbits.TMR3ON = 1; break;
  5878  02FD  3092               	movlw	146
  5879  02FE  2C44               	goto	L94
  5880  02FF                     i1l4621:	
  5881                           ;one_sw_two_dimmmer.c: 552: case '7':
  5882                           
  5883                           
  5884                           ;one_sw_two_dimmmer.c: 553: TMR3H=0x93; TMR3L=0x68; T3CONbits.TMR3ON = 1; break;
  5885  02FF  3093               	movlw	147
  5886  0300  0028               	movlb	8	; select bank8
  5887  0301  0092               	movwf	18	;volatile
  5888  0302  3068               	movlw	104
  5889  0303  2C5B               	goto	L5
  5890  0304                     i1l4625:	
  5891                           ;one_sw_two_dimmmer.c: 554: case '8':
  5892                           
  5893                           
  5894                           ;one_sw_two_dimmmer.c: 555: TMR3H=0x94; TMR3L=0x30; T3CONbits.TMR3ON = 1; break;
  5895  0304  3094               	movlw	148
  5896  0305  2C49               	goto	L95
  5897  0306                     i1l4629:	
  5898                           ;one_sw_two_dimmmer.c: 556: case '9':
  5899                           
  5900                           
  5901                           ;one_sw_two_dimmmer.c: 557: TMR3H=0x94; TMR3L=0xF8; T3CONbits.TMR3ON = 1; break;
  5902  0306  3094               	movlw	148
  5903  0307  0028               	movlb	8	; select bank8
  5904  0308  0092               	movwf	18	;volatile
  5905  0309  30F8               	movlw	248
  5906  030A  2C5B               	goto	L5
  5907  030B                     i1l4635:	
  5908                           ;one_sw_two_dimmmer.c: 560: }
  5909                           
  5910                           ;one_sw_two_dimmmer.c: 559: break;
  5911                           
  5912                           ;one_sw_two_dimmmer.c: 558: default:
  5913                           
  5914                           
  5915                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5916                           ; Switch size 1, requested type "space"
  5917                           ; Number of cases is 1, Range of values is 0 to 0
  5918                           ; switch strategies available:
  5919                           ; Name         Instructions Cycles
  5920                           ; simple_byte            4     3 (average)
  5921                           ; direct_byte            8     6 (fixed)
  5922                           ; jumptable            260     6 (fixed)
  5923                           ;	Chosen strategy is simple_byte
  5924  030B  0020               	movlb	0	; select bank0
  5925  030C  0850               	movf	_FAN_SPEED2_1s+1,w
  5926  030D  3A00               	xorlw	0	; case 0
  5927  030E  1903               	skipnz
  5928  030F  2B11               	goto	i1l7773
  5929  0310  2C84               	goto	i1l402
  5930  0311                     i1l7773:	
  5931                           
  5932                           ; Switch size 1, requested type "space"
  5933                           ; Number of cases is 10, Range of values is 48 to 57
  5934                           ; switch strategies available:
  5935                           ; Name         Instructions Cycles
  5936                           ; direct_byte           29     9 (fixed)
  5937                           ; simple_byte           31    16 (average)
  5938                           ; jumptable            263     9 (fixed)
  5939                           ;	Chosen strategy is direct_byte
  5940  0311  084F               	movf	_FAN_SPEED2_1s,w
  5941  0312  3ED0               	addlw	-48
  5942  0313  1C03               	skipc
  5943  0314  2C84               	goto	i1l402
  5944  0315  0084               	movwf	4
  5945  0316  300A               	movlw	10
  5946  0317  0204               	subwf	4,w
  5947  0318  1803               	skipnc
  5948  0319  2C84               	goto	i1l402
  5949  031A  3189               	movlp	high i1S7775
  5950  031B  3504               	lslf	4,w
  5951  031C  3E14               	addlw	low i1S7775
  5952  031D  0082               	movwf	2
  5953                           
  5954                           ;one_sw_two_dimmmer.c: 561: break;
  5955  031E  2C84               	goto	i1l402
  5956  031F                     i1l4637:	
  5957                           ;one_sw_two_dimmmer.c: 565: {
  5958                           ;one_sw_two_dimmmer.c: 566: case '0':
  5959                           
  5960                           ;one_sw_two_dimmmer.c: 564: switch(FAN_SPEED2_1s)
  5961                           
  5962                           ;one_sw_two_dimmmer.c: 562: case '3':
  5963                           
  5964                           
  5965                           ;one_sw_two_dimmmer.c: 567: TMR3H=0x95; TMR3L=0xC0; T3CONbits.TMR3ON = 1; break;
  5966  031F  3095               	movlw	149
  5967  0320  2C4E               	goto	L96
  5968  0321                     i1l4641:	
  5969                           ;one_sw_two_dimmmer.c: 568: case '1':
  5970                           
  5971                           
  5972                           ;one_sw_two_dimmmer.c: 569: TMR3H=0x97; TMR3L=0x50; T3CONbits.TMR3ON = 1; break;
  5973  0321  3097               	movlw	151
  5974  0322  2C53               	goto	L97
  5975  0323                     i1l4645:	
  5976                           ;one_sw_two_dimmmer.c: 570: case '2':
  5977                           
  5978                           
  5979                           ;one_sw_two_dimmmer.c: 571: TMR3H=0x98; TMR3L=0xE0; T3CONbits.TMR3ON = 1; break;
  5980  0323  3098               	movlw	152
  5981  0324  2C58               	goto	L67
  5982  0325                     i1l4649:	
  5983                           ;one_sw_two_dimmmer.c: 572: case '3':
  5984                           
  5985                           
  5986                           ;one_sw_two_dimmmer.c: 573: TMR3H=0x9A; TMR3L=0x70; T3CONbits.TMR3ON = 1; break;
  5987  0325  309A               	movlw	154
  5988  0326  2BEF               	goto	L83
  5989  0327                     i1l4653:	
  5990                           ;one_sw_two_dimmmer.c: 574: case '4':
  5991                           
  5992                           
  5993                           ;one_sw_two_dimmmer.c: 575: TMR3H=0x9C; TMR3L=0x00; T3CONbits.TMR3ON = 1; break;
  5994  0327  309C               	movlw	156
  5995  0328  2BF9               	goto	L84
  5996  0329                     i1l4659:	
  5997                           ;one_sw_two_dimmmer.c: 576: case '5':
  5998                           
  5999                           
  6000                           ;one_sw_two_dimmmer.c: 577: TMR3H=0x9D; TMR3L=0x90; T3CONbits.TMR3ON = 1; break;
  6001  0329  309D               	movlw	157
  6002  032A  2BFE               	goto	L85
  6003  032B                     i1l4663:	
  6004                           ;one_sw_two_dimmmer.c: 578: case '6':
  6005                           
  6006                           
  6007                           ;one_sw_two_dimmmer.c: 579: TMR3H=0x9F; TMR3L=0x20; T3CONbits.TMR3ON = 1; break;
  6008  032B  309F               	movlw	159
  6009  032C  2C03               	goto	L86
  6010  032D                     i1l4667:	
  6011                           ;one_sw_two_dimmmer.c: 580: case '7':
  6012                           
  6013                           
  6014                           ;one_sw_two_dimmmer.c: 581: TMR3H=0xA0; TMR3L=0xB0; T3CONbits.TMR3ON = 1; break;
  6015  032D  30A0               	movlw	160
  6016  032E  2C08               	goto	L87
  6017  032F                     i1l4671:	
  6018                           ;one_sw_two_dimmmer.c: 582: case '8':
  6019                           
  6020                           
  6021                           ;one_sw_two_dimmmer.c: 583: TMR3H=0xA2; TMR3L=0x40; T3CONbits.TMR3ON = 1; break;
  6022  032F  30A2               	movlw	162
  6023  0330  2C12               	goto	L88
  6024  0331                     i1l4675:	
  6025                           ;one_sw_two_dimmmer.c: 584: case '9':
  6026                           
  6027                           
  6028                           ;one_sw_two_dimmmer.c: 585: TMR3H=0xA3; TMR3L=0xD0; T3CONbits.TMR3ON = 1; break;
  6029  0331  30A3               	movlw	163
  6030  0332  2C2B               	goto	L89
  6031  0333                     i1l4681:	
  6032                           ;one_sw_two_dimmmer.c: 588: }
  6033                           
  6034                           ;one_sw_two_dimmmer.c: 587: break;
  6035                           
  6036                           ;one_sw_two_dimmmer.c: 586: default:
  6037                           
  6038                           
  6039                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6040                           ; Switch size 1, requested type "space"
  6041                           ; Number of cases is 1, Range of values is 0 to 0
  6042                           ; switch strategies available:
  6043                           ; Name         Instructions Cycles
  6044                           ; simple_byte            4     3 (average)
  6045                           ; direct_byte            8     6 (fixed)
  6046                           ; jumptable            260     6 (fixed)
  6047                           ;	Chosen strategy is simple_byte
  6048  0333  0020               	movlb	0	; select bank0
  6049  0334  0850               	movf	_FAN_SPEED2_1s+1,w
  6050  0335  3A00               	xorlw	0	; case 0
  6051  0336  1903               	skipnz
  6052  0337  2B39               	goto	i1l7777
  6053  0338  2C84               	goto	i1l402
  6054  0339                     i1l7777:	
  6055                           
  6056                           ; Switch size 1, requested type "space"
  6057                           ; Number of cases is 10, Range of values is 48 to 57
  6058                           ; switch strategies available:
  6059                           ; Name         Instructions Cycles
  6060                           ; direct_byte           29     9 (fixed)
  6061                           ; simple_byte           31    16 (average)
  6062                           ; jumptable            263     9 (fixed)
  6063                           ;	Chosen strategy is direct_byte
  6064  0339  084F               	movf	_FAN_SPEED2_1s,w
  6065  033A  3ED0               	addlw	-48
  6066  033B  1C03               	skipc
  6067  033C  2C84               	goto	i1l402
  6068  033D  0084               	movwf	4
  6069  033E  300A               	movlw	10
  6070  033F  0204               	subwf	4,w
  6071  0340  1803               	skipnc
  6072  0341  2C84               	goto	i1l402
  6073  0342  3189               	movlp	high i1S7779
  6074  0343  3504               	lslf	4,w
  6075  0344  3E28               	addlw	low i1S7779
  6076  0345  0082               	movwf	2
  6077                           
  6078                           ;one_sw_two_dimmmer.c: 589: break;
  6079  0346  2C84               	goto	i1l402
  6080  0347                     i1l4683:	
  6081                           ;one_sw_two_dimmmer.c: 593: {
  6082                           ;one_sw_two_dimmmer.c: 594: case '0':
  6083                           
  6084                           ;one_sw_two_dimmmer.c: 592: switch(FAN_SPEED2_1s)
  6085                           
  6086                           ;one_sw_two_dimmmer.c: 590: case '4':
  6087                           
  6088                           
  6089                           ;one_sw_two_dimmmer.c: 595: TMR3H=0xA5; TMR3L=0x60; T3CONbits.TMR3ON = 1; break;
  6090  0347  30A5               	movlw	165
  6091  0348  2C30               	goto	L90
  6092  0349                     i1l4687:	
  6093                           ;one_sw_two_dimmmer.c: 596: case '1':
  6094                           
  6095                           
  6096                           ;one_sw_two_dimmmer.c: 597: TMR3H=0xA6; TMR3L=0xF0; T3CONbits.TMR3ON = 1; break;
  6097  0349  30A6               	movlw	166
  6098  034A  2C35               	goto	L91
  6099  034B                     i1l4691:	
  6100                           ;one_sw_two_dimmmer.c: 598: case '2':
  6101                           
  6102                           
  6103                           ;one_sw_two_dimmmer.c: 599: TMR3H=0xA8; TMR3L=0x80; T3CONbits.TMR3ON = 1; break;
  6104  034B  30A8               	movlw	168
  6105  034C  2C3A               	goto	L92
  6106  034D                     i1l4695:	
  6107                           ;one_sw_two_dimmmer.c: 600: case '3':
  6108                           
  6109                           
  6110                           ;one_sw_two_dimmmer.c: 601: TMR3H=0xAA; TMR3L=0x10; T3CONbits.TMR3ON = 1; break;
  6111  034D  30AA               	movlw	170
  6112  034E  2C3F               	goto	L93
  6113  034F                     i1l4699:	
  6114                           ;one_sw_two_dimmmer.c: 602: case '4':
  6115                           
  6116                           
  6117                           ;one_sw_two_dimmmer.c: 603: TMR3H=0xAB; TMR3L=0xA0; T3CONbits.TMR3ON = 1; break;
  6118  034F  30AB               	movlw	171
  6119  0350  2C44               	goto	L94
  6120  0351                     i1l4703:	
  6121                           ;one_sw_two_dimmmer.c: 604: case '5':
  6122                           
  6123                           
  6124                           ;one_sw_two_dimmmer.c: 605: TMR3H=0xAD; TMR3L=0x30; T3CONbits.TMR3ON = 1; break;
  6125  0351  30AD               	movlw	173
  6126  0352  2C49               	goto	L95
  6127  0353                     i1l4707:	
  6128                           ;one_sw_two_dimmmer.c: 606: case '6':
  6129                           
  6130                           
  6131                           ;one_sw_two_dimmmer.c: 607: TMR3H=0xAE; TMR3L=0xC0; T3CONbits.TMR3ON = 1; break;
  6132  0353  30AE               	movlw	174
  6133  0354  2C4E               	goto	L96
  6134  0355                     i1l4711:	
  6135                           ;one_sw_two_dimmmer.c: 608: case '7':
  6136                           
  6137                           
  6138                           ;one_sw_two_dimmmer.c: 609: TMR3H=0xB0; TMR3L=0x50; T3CONbits.TMR3ON = 1; break;
  6139  0355  30B0               	movlw	176
  6140  0356  2C53               	goto	L97
  6141  0357                     i1l4715:	
  6142                           ;one_sw_two_dimmmer.c: 610: case '8':
  6143                           
  6144                           
  6145                           ;one_sw_two_dimmmer.c: 611: TMR3H=0xB1; TMR3L=0xE0; T3CONbits.TMR3ON = 1; break;
  6146  0357  30B1               	movlw	177
  6147  0358  2C58               	goto	L67
  6148  0359                     i1l4719:	
  6149                           ;one_sw_two_dimmmer.c: 612: case '9':
  6150                           
  6151                           
  6152                           ;one_sw_two_dimmmer.c: 613: TMR3H=0xB3; TMR3L=0x70; T3CONbits.TMR3ON = 1; break;
  6153  0359  30B3               	movlw	179
  6154  035A  2BEF               	goto	L83
  6155  035B                     i1l4725:	
  6156                           ;one_sw_two_dimmmer.c: 616: }
  6157                           
  6158                           ;one_sw_two_dimmmer.c: 615: break;
  6159                           
  6160                           ;one_sw_two_dimmmer.c: 614: default:
  6161                           
  6162                           
  6163                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6164                           ; Switch size 1, requested type "space"
  6165                           ; Number of cases is 1, Range of values is 0 to 0
  6166                           ; switch strategies available:
  6167                           ; Name         Instructions Cycles
  6168                           ; simple_byte            4     3 (average)
  6169                           ; direct_byte            8     6 (fixed)
  6170                           ; jumptable            260     6 (fixed)
  6171                           ;	Chosen strategy is simple_byte
  6172  035B  0020               	movlb	0	; select bank0
  6173  035C  0850               	movf	_FAN_SPEED2_1s+1,w
  6174  035D  3A00               	xorlw	0	; case 0
  6175  035E  1903               	skipnz
  6176  035F  2B61               	goto	i1l7781
  6177  0360  2C84               	goto	i1l402
  6178  0361                     i1l7781:	
  6179                           
  6180                           ; Switch size 1, requested type "space"
  6181                           ; Number of cases is 10, Range of values is 48 to 57
  6182                           ; switch strategies available:
  6183                           ; Name         Instructions Cycles
  6184                           ; direct_byte           29     9 (fixed)
  6185                           ; simple_byte           31    16 (average)
  6186                           ; jumptable            263     9 (fixed)
  6187                           ;	Chosen strategy is direct_byte
  6188  0361  084F               	movf	_FAN_SPEED2_1s,w
  6189  0362  3ED0               	addlw	-48
  6190  0363  1C03               	skipc
  6191  0364  2C84               	goto	i1l402
  6192  0365  0084               	movwf	4
  6193  0366  300A               	movlw	10
  6194  0367  0204               	subwf	4,w
  6195  0368  1803               	skipnc
  6196  0369  2C84               	goto	i1l402
  6197  036A  3189               	movlp	high i1S7783
  6198  036B  3504               	lslf	4,w
  6199  036C  3E3C               	addlw	low i1S7783
  6200  036D  0082               	movwf	2
  6201                           
  6202                           ;one_sw_two_dimmmer.c: 617: break;
  6203  036E  2C84               	goto	i1l402
  6204  036F                     i1l4727:	
  6205                           ;one_sw_two_dimmmer.c: 621: {
  6206                           ;one_sw_two_dimmmer.c: 622: case '0':
  6207                           
  6208                           ;one_sw_two_dimmmer.c: 620: switch(FAN_SPEED2_1s)
  6209                           
  6210                           ;one_sw_two_dimmmer.c: 618: case '5':
  6211                           
  6212                           
  6213                           ;one_sw_two_dimmmer.c: 623: TMR3H=0xB5; TMR3L=0x00; T3CONbits.TMR3ON = 1; break;
  6214  036F  30B5               	movlw	181
  6215  0370  2BF9               	goto	L84
  6216  0371                     i1l4733:	
  6217                           ;one_sw_two_dimmmer.c: 624: case '1':
  6218                           
  6219                           
  6220                           ;one_sw_two_dimmmer.c: 625: TMR3H=0xB6; TMR3L=0x90; T3CONbits.TMR3ON = 1; break;
  6221  0371  30B6               	movlw	182
  6222  0372  2BFE               	goto	L85
  6223  0373                     i1l4737:	
  6224                           ;one_sw_two_dimmmer.c: 626: case '2':
  6225                           
  6226                           
  6227                           ;one_sw_two_dimmmer.c: 627: TMR3H=0xB8; TMR3L=0x20; T3CONbits.TMR3ON = 1; break;
  6228  0373  30B8               	movlw	184
  6229  0374  2C03               	goto	L86
  6230  0375                     i1l4741:	
  6231                           ;one_sw_two_dimmmer.c: 628: case '3':
  6232                           
  6233                           
  6234                           ;one_sw_two_dimmmer.c: 629: TMR3H=0xB9; TMR3L=0xB0; T3CONbits.TMR3ON = 1; break;
  6235  0375  30B9               	movlw	185
  6236  0376  2C08               	goto	L87
  6237  0377                     i1l4745:	
  6238                           ;one_sw_two_dimmmer.c: 630: case '4':
  6239                           
  6240                           
  6241                           ;one_sw_two_dimmmer.c: 631: TMR3H=0xBB; TMR3L=0x40; T3CONbits.TMR3ON = 1; break;
  6242  0377  30BB               	movlw	187
  6243  0378  2C12               	goto	L88
  6244  0379                     i1l4749:	
  6245                           ;one_sw_two_dimmmer.c: 632: case '5':
  6246                           
  6247                           
  6248                           ;one_sw_two_dimmmer.c: 633: TMR3H=0xBC; TMR3L=0xD0; T3CONbits.TMR3ON = 1; break;
  6249  0379  30BC               	movlw	188
  6250  037A  2C2B               	goto	L89
  6251  037B                     i1l4753:	
  6252                           ;one_sw_two_dimmmer.c: 634: case '6':
  6253                           
  6254                           
  6255                           ;one_sw_two_dimmmer.c: 635: TMR3H=0xBE; TMR3L=0x60; T3CONbits.TMR3ON = 1; break;
  6256  037B  30BE               	movlw	190
  6257  037C  2C30               	goto	L90
  6258  037D                     i1l4757:	
  6259                           ;one_sw_two_dimmmer.c: 636: case '7':
  6260                           
  6261                           
  6262                           ;one_sw_two_dimmmer.c: 637: TMR3H=0xBF; TMR3L=0xF0; T3CONbits.TMR3ON = 1; break;
  6263  037D  30BF               	movlw	191
  6264  037E  2C35               	goto	L91
  6265  037F                     i1l4761:	
  6266                           ;one_sw_two_dimmmer.c: 638: case '8':
  6267                           
  6268                           
  6269                           ;one_sw_two_dimmmer.c: 639: TMR3H=0xC1; TMR3L=0x80; T3CONbits.TMR3ON = 1; break;
  6270  037F  30C1               	movlw	193
  6271  0380  2C3A               	goto	L92
  6272  0381                     i1l4765:	
  6273                           ;one_sw_two_dimmmer.c: 640: case '9':
  6274                           
  6275                           
  6276                           ;one_sw_two_dimmmer.c: 641: TMR3H=0xC3; TMR3L=0x10; T3CONbits.TMR3ON = 1; break;
  6277  0381  30C3               	movlw	195
  6278  0382  2C3F               	goto	L93
  6279  0383                     i1l4771:	
  6280                           ;one_sw_two_dimmmer.c: 644: }
  6281                           
  6282                           ;one_sw_two_dimmmer.c: 643: break;
  6283                           
  6284                           ;one_sw_two_dimmmer.c: 642: default:
  6285                           
  6286                           
  6287                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6288                           ; Switch size 1, requested type "space"
  6289                           ; Number of cases is 1, Range of values is 0 to 0
  6290                           ; switch strategies available:
  6291                           ; Name         Instructions Cycles
  6292                           ; simple_byte            4     3 (average)
  6293                           ; direct_byte            8     6 (fixed)
  6294                           ; jumptable            260     6 (fixed)
  6295                           ;	Chosen strategy is simple_byte
  6296  0383  0020               	movlb	0	; select bank0
  6297  0384  0850               	movf	_FAN_SPEED2_1s+1,w
  6298  0385  3A00               	xorlw	0	; case 0
  6299  0386  1903               	skipnz
  6300  0387  2B89               	goto	i1l7785
  6301  0388  2C84               	goto	i1l402
  6302  0389                     i1l7785:	
  6303                           
  6304                           ; Switch size 1, requested type "space"
  6305                           ; Number of cases is 10, Range of values is 48 to 57
  6306                           ; switch strategies available:
  6307                           ; Name         Instructions Cycles
  6308                           ; direct_byte           29     9 (fixed)
  6309                           ; simple_byte           31    16 (average)
  6310                           ; jumptable            263     9 (fixed)
  6311                           ;	Chosen strategy is direct_byte
  6312  0389  084F               	movf	_FAN_SPEED2_1s,w
  6313  038A  3ED0               	addlw	-48
  6314  038B  1C03               	skipc
  6315  038C  2C84               	goto	i1l402
  6316  038D  0084               	movwf	4
  6317  038E  300A               	movlw	10
  6318  038F  0204               	subwf	4,w
  6319  0390  1803               	skipnc
  6320  0391  2C84               	goto	i1l402
  6321  0392  3189               	movlp	high i1S7787
  6322  0393  3504               	lslf	4,w
  6323  0394  3E50               	addlw	low i1S7787
  6324  0395  0082               	movwf	2
  6325                           
  6326                           ;one_sw_two_dimmmer.c: 645: break;
  6327  0396  2C84               	goto	i1l402
  6328  0397                     i1l4773:	
  6329                           ;one_sw_two_dimmmer.c: 649: {
  6330                           ;one_sw_two_dimmmer.c: 650: case '0':
  6331                           
  6332                           ;one_sw_two_dimmmer.c: 648: switch(FAN_SPEED2_1s)
  6333                           
  6334                           ;one_sw_two_dimmmer.c: 646: case '6':
  6335                           
  6336                           
  6337                           ;one_sw_two_dimmmer.c: 651: TMR3H=0xC4; TMR3L=0xA0; T3CONbits.TMR3ON = 1; break;
  6338  0397  30C4               	movlw	196
  6339  0398  2C44               	goto	L94
  6340  0399                     i1l4777:	
  6341                           ;one_sw_two_dimmmer.c: 652: case '1':
  6342                           
  6343                           
  6344                           ;one_sw_two_dimmmer.c: 653: TMR3H=0xC6; TMR3L=0x30; T3CONbits.TMR3ON = 1; break;
  6345  0399  30C6               	movlw	198
  6346  039A  2C49               	goto	L95
  6347  039B                     i1l4781:	
  6348                           ;one_sw_two_dimmmer.c: 654: case '2':
  6349                           
  6350                           
  6351                           ;one_sw_two_dimmmer.c: 655: TMR3H=0xC7; TMR3L=0xC0; T3CONbits.TMR3ON = 1; break;
  6352  039B  30C7               	movlw	199
  6353  039C  2C4E               	goto	L96
  6354  039D                     i1l4785:	
  6355                           ;one_sw_two_dimmmer.c: 656: case '3':
  6356                           
  6357                           
  6358                           ;one_sw_two_dimmmer.c: 657: TMR3H=0xC9; TMR3L=0x50; T3CONbits.TMR3ON = 1; break;
  6359  039D  30C9               	movlw	201
  6360  039E  2C53               	goto	L97
  6361  039F                     i1l4789:	
  6362                           ;one_sw_two_dimmmer.c: 658: case '4':
  6363                           
  6364                           
  6365                           ;one_sw_two_dimmmer.c: 659: TMR3H=0xCA; TMR3L=0xE0; T3CONbits.TMR3ON = 1; break;
  6366  039F  30CA               	movlw	202
  6367  03A0  2C58               	goto	L67
  6368  03A1                     i1l4793:	
  6369                           ;one_sw_two_dimmmer.c: 660: case '5':
  6370                           
  6371                           
  6372                           ;one_sw_two_dimmmer.c: 661: TMR3H=0xCC; TMR3L=0x70; T3CONbits.TMR3ON = 1; break;
  6373  03A1  30CC               	movlw	204
  6374  03A2  2BEF               	goto	L83
  6375  03A3                     i1l4797:	
  6376                           ;one_sw_two_dimmmer.c: 662: case '6':
  6377                           
  6378                           
  6379                           ;one_sw_two_dimmmer.c: 663: TMR3H=0xCE; TMR3L=0x00; T3CONbits.TMR3ON = 1; break;
  6380  03A3  30CE               	movlw	206
  6381  03A4  2BF9               	goto	L84
  6382  03A5                     i1l4803:	
  6383                           ;one_sw_two_dimmmer.c: 664: case '7':
  6384                           
  6385                           
  6386                           ;one_sw_two_dimmmer.c: 665: TMR3H=0xCF; TMR3L=0x90; T3CONbits.TMR3ON = 1; break;
  6387  03A5  30CF               	movlw	207
  6388  03A6  2BFE               	goto	L85
  6389  03A7                     i1l4807:	
  6390                           ;one_sw_two_dimmmer.c: 666: case '8':
  6391                           
  6392                           
  6393                           ;one_sw_two_dimmmer.c: 667: TMR3H=0xD1; TMR3L=0x20; T3CONbits.TMR3ON = 1; break;
  6394  03A7  30D1               	movlw	209
  6395  03A8  2C03               	goto	L86
  6396  03A9                     i1l4811:	
  6397                           ;one_sw_two_dimmmer.c: 668: case '9':
  6398                           
  6399                           
  6400                           ;one_sw_two_dimmmer.c: 669: TMR3H=0xD2; TMR3L=0xB0; T3CONbits.TMR3ON = 1; break;
  6401  03A9  30D2               	movlw	210
  6402  03AA  2C08               	goto	L87
  6403  03AB                     i1l4817:	
  6404                           ;one_sw_two_dimmmer.c: 672: }
  6405                           
  6406                           ;one_sw_two_dimmmer.c: 671: break;
  6407                           
  6408                           ;one_sw_two_dimmmer.c: 670: default:
  6409                           
  6410                           
  6411                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6412                           ; Switch size 1, requested type "space"
  6413                           ; Number of cases is 1, Range of values is 0 to 0
  6414                           ; switch strategies available:
  6415                           ; Name         Instructions Cycles
  6416                           ; simple_byte            4     3 (average)
  6417                           ; direct_byte            8     6 (fixed)
  6418                           ; jumptable            260     6 (fixed)
  6419                           ;	Chosen strategy is simple_byte
  6420  03AB  0020               	movlb	0	; select bank0
  6421  03AC  0850               	movf	_FAN_SPEED2_1s+1,w
  6422  03AD  3A00               	xorlw	0	; case 0
  6423  03AE  1903               	skipnz
  6424  03AF  2BB1               	goto	i1l7789
  6425  03B0  2C84               	goto	i1l402
  6426  03B1                     i1l7789:	
  6427                           
  6428                           ; Switch size 1, requested type "space"
  6429                           ; Number of cases is 10, Range of values is 48 to 57
  6430                           ; switch strategies available:
  6431                           ; Name         Instructions Cycles
  6432                           ; direct_byte           29     9 (fixed)
  6433                           ; simple_byte           31    16 (average)
  6434                           ; jumptable            263     9 (fixed)
  6435                           ;	Chosen strategy is direct_byte
  6436  03B1  084F               	movf	_FAN_SPEED2_1s,w
  6437  03B2  3ED0               	addlw	-48
  6438  03B3  1C03               	skipc
  6439  03B4  2C84               	goto	i1l402
  6440  03B5  0084               	movwf	4
  6441  03B6  300A               	movlw	10
  6442  03B7  0204               	subwf	4,w
  6443  03B8  1803               	skipnc
  6444  03B9  2C84               	goto	i1l402
  6445  03BA  3189               	movlp	high i1S7791
  6446  03BB  3504               	lslf	4,w
  6447  03BC  3E64               	addlw	low i1S7791
  6448  03BD  0082               	movwf	2
  6449                           
  6450                           ;one_sw_two_dimmmer.c: 673: break;
  6451  03BE  2C84               	goto	i1l402
  6452  03BF                     i1l4819:	
  6453                           ;one_sw_two_dimmmer.c: 677: {
  6454                           ;one_sw_two_dimmmer.c: 678: case '0':
  6455                           
  6456                           ;one_sw_two_dimmmer.c: 676: switch(FAN_SPEED2_1s)
  6457                           
  6458                           ;one_sw_two_dimmmer.c: 674: case '7':
  6459                           
  6460                           
  6461                           ;one_sw_two_dimmmer.c: 679: TMR3H=0xD4; TMR3L=0x40; T3CONbits.TMR3ON = 1; break;
  6462  03BF  30D4               	movlw	212
  6463  03C0  2C12               	goto	L88
  6464  03C1                     i1l4823:	
  6465                           ;one_sw_two_dimmmer.c: 680: case '1':
  6466                           
  6467                           
  6468                           ;one_sw_two_dimmmer.c: 681: TMR3H=0xD5; TMR3L=0xD0; T3CONbits.TMR3ON = 1; break;
  6469  03C1  30D5               	movlw	213
  6470  03C2  2C2B               	goto	L89
  6471  03C3                     i1l4827:	
  6472                           ;one_sw_two_dimmmer.c: 682: case '2':
  6473                           
  6474                           
  6475                           ;one_sw_two_dimmmer.c: 683: TMR3H=0xD7; TMR3L=0x60; T3CONbits.TMR3ON = 1; break;
  6476  03C3  30D7               	movlw	215
  6477  03C4  2C30               	goto	L90
  6478  03C5                     i1l4831:	
  6479                           ;one_sw_two_dimmmer.c: 684: case '3':
  6480                           
  6481                           
  6482                           ;one_sw_two_dimmmer.c: 685: TMR3H=0xD8; TMR3L=0xF0; T3CONbits.TMR3ON = 1; break;
  6483  03C5  30D8               	movlw	216
  6484  03C6  2C35               	goto	L91
  6485  03C7                     i1l4835:	
  6486                           ;one_sw_two_dimmmer.c: 686: case '4':
  6487                           
  6488                           
  6489                           ;one_sw_two_dimmmer.c: 687: TMR3H=0xDA; TMR3L=0x80; T3CONbits.TMR3ON = 1; break;
  6490  03C7  30DA               	movlw	218
  6491  03C8  2C3A               	goto	L92
  6492  03C9                     i1l4839:	
  6493                           ;one_sw_two_dimmmer.c: 688: case '5':
  6494                           
  6495                           
  6496                           ;one_sw_two_dimmmer.c: 689: TMR3H=0xDC; TMR3L=0x10; T3CONbits.TMR3ON = 1; break;
  6497  03C9  30DC               	movlw	220
  6498  03CA  2C3F               	goto	L93
  6499  03CB                     i1l4843:	
  6500                           ;one_sw_two_dimmmer.c: 690: case '6':
  6501                           
  6502                           
  6503                           ;one_sw_two_dimmmer.c: 691: TMR3H=0xDD; TMR3L=0xA0; T3CONbits.TMR3ON = 1; break;
  6504  03CB  30DD               	movlw	221
  6505  03CC  2C44               	goto	L94
  6506  03CD                     i1l4847:	
  6507                           ;one_sw_two_dimmmer.c: 692: case '7':
  6508                           
  6509                           
  6510                           ;one_sw_two_dimmmer.c: 693: TMR3H=0xDF; TMR3L=0x30; T3CONbits.TMR3ON = 1; break;
  6511  03CD  30DF               	movlw	223
  6512  03CE  2C49               	goto	L95
  6513  03CF                     i1l4851:	
  6514                           ;one_sw_two_dimmmer.c: 694: case '8':
  6515                           
  6516                           
  6517                           ;one_sw_two_dimmmer.c: 695: TMR3H=0xE0; TMR3L=0xC0; T3CONbits.TMR3ON = 1; break;
  6518  03CF  30E0               	movlw	224
  6519  03D0  2C4E               	goto	L96
  6520  03D1                     i1l4855:	
  6521                           ;one_sw_two_dimmmer.c: 696: case '9':
  6522                           
  6523                           
  6524                           ;one_sw_two_dimmmer.c: 697: TMR3H=0xE2; TMR3L=0x50; T3CONbits.TMR3ON = 1; break;
  6525  03D1  30E2               	movlw	226
  6526  03D2  2C53               	goto	L97
  6527  03D3                     i1l4861:	
  6528                           ;one_sw_two_dimmmer.c: 700: }
  6529                           
  6530                           ;one_sw_two_dimmmer.c: 699: break;
  6531                           
  6532                           ;one_sw_two_dimmmer.c: 698: default:
  6533                           
  6534                           
  6535                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6536                           ; Switch size 1, requested type "space"
  6537                           ; Number of cases is 1, Range of values is 0 to 0
  6538                           ; switch strategies available:
  6539                           ; Name         Instructions Cycles
  6540                           ; simple_byte            4     3 (average)
  6541                           ; direct_byte            8     6 (fixed)
  6542                           ; jumptable            260     6 (fixed)
  6543                           ;	Chosen strategy is simple_byte
  6544  03D3  0020               	movlb	0	; select bank0
  6545  03D4  0850               	movf	_FAN_SPEED2_1s+1,w
  6546  03D5  3A00               	xorlw	0	; case 0
  6547  03D6  1903               	skipnz
  6548  03D7  2BD9               	goto	i1l7793
  6549  03D8  2C84               	goto	i1l402
  6550  03D9                     i1l7793:	
  6551                           
  6552                           ; Switch size 1, requested type "space"
  6553                           ; Number of cases is 10, Range of values is 48 to 57
  6554                           ; switch strategies available:
  6555                           ; Name         Instructions Cycles
  6556                           ; direct_byte           29     9 (fixed)
  6557                           ; simple_byte           31    16 (average)
  6558                           ; jumptable            263     9 (fixed)
  6559                           ;	Chosen strategy is direct_byte
  6560  03D9  084F               	movf	_FAN_SPEED2_1s,w
  6561  03DA  3ED0               	addlw	-48
  6562  03DB  1C03               	skipc
  6563  03DC  2C84               	goto	i1l402
  6564  03DD  0084               	movwf	4
  6565  03DE  300A               	movlw	10
  6566  03DF  0204               	subwf	4,w
  6567  03E0  1803               	skipnc
  6568  03E1  2C84               	goto	i1l402
  6569  03E2  3189               	movlp	high i1S7795
  6570  03E3  3504               	lslf	4,w
  6571  03E4  3E78               	addlw	low i1S7795
  6572  03E5  0082               	movwf	2
  6573                           
  6574                           ;one_sw_two_dimmmer.c: 701: break;
  6575  03E6  2C84               	goto	i1l402
  6576  03E7                     i1l4863:	
  6577                           ;one_sw_two_dimmmer.c: 705: {
  6578                           ;one_sw_two_dimmmer.c: 706: case '0':
  6579                           
  6580                           ;one_sw_two_dimmmer.c: 704: switch(FAN_SPEED2_1s)
  6581                           
  6582                           ;one_sw_two_dimmmer.c: 702: case '8':
  6583                           
  6584                           
  6585                           ;one_sw_two_dimmmer.c: 707: TMR3H=0xE3; TMR3L=0xE0; T3CONbits.TMR3ON = 1; break;
  6586  03E7  30E3               	movlw	227
  6587  03E8  2C58               	goto	L67
  6588  03E9                     i1l4867:	
  6589                           ;one_sw_two_dimmmer.c: 708: case '1':
  6590                           
  6591                           
  6592                           ;one_sw_two_dimmmer.c: 709: TMR3H=0xE4; TMR3L=0xA8; T3CONbits.TMR3ON = 1; break;
  6593  03E9  30E4               	movlw	228
  6594  03EA                     L105:	
  6595  03EA  0028               	movlb	8	; select bank8
  6596  03EB  0092               	movwf	18	;volatile
  6597  03EC  30A8               	movlw	168
  6598  03ED  2C5B               	goto	L5
  6599  03EE                     i1l4871:	
  6600                           ;one_sw_two_dimmmer.c: 710: case '2':
  6601                           
  6602                           
  6603                           ;one_sw_two_dimmmer.c: 711: TMR3H=0xE5; TMR3L=0x70; T3CONbits.TMR3ON = 1; break;
  6604  03EE  30E5               	movlw	229
  6605  03EF                     L83:	
  6606  03EF  0028               	movlb	8	; select bank8
  6607  03F0  0092               	movwf	18	;volatile
  6608  03F1  3070               	movlw	112
  6609  03F2  2C5B               	goto	L5
  6610  03F3                     i1l4875:	
  6611                           ;one_sw_two_dimmmer.c: 712: case '3':
  6612                           
  6613                           
  6614                           ;one_sw_two_dimmmer.c: 713: TMR3H=0xE6; TMR3L=0x38; T3CONbits.TMR3ON = 1; break;
  6615  03F3  30E6               	movlw	230
  6616  03F4  0028               	movlb	8	; select bank8
  6617  03F5  0092               	movwf	18	;volatile
  6618  03F6  3038               	movlw	56
  6619  03F7  2C5B               	goto	L5
  6620  03F8                     i1l4879:	
  6621                           ;one_sw_two_dimmmer.c: 714: case '4':
  6622                           
  6623                           
  6624                           ;one_sw_two_dimmmer.c: 715: TMR3H=0xE7; TMR3L=0x00; T3CONbits.TMR3ON = 1; break;
  6625  03F8  30E7               	movlw	231
  6626  03F9                     L84:	
  6627  03F9  0028               	movlb	8	; select bank8
  6628  03FA  0092               	movwf	18	;volatile
  6629  03FB  0191               	clrf	17	;volatile
  6630  03FC  2C5C               	goto	i1l4947
  6631  03FD                     i1l4885:	
  6632                           ;one_sw_two_dimmmer.c: 716: case '5':
  6633                           
  6634                           
  6635                           ;one_sw_two_dimmmer.c: 717: TMR3H=0xE8; TMR3L=0x90; T3CONbits.TMR3ON = 1; break;
  6636  03FD  30E8               	movlw	232
  6637  03FE                     L85:	
  6638  03FE  0028               	movlb	8	; select bank8
  6639  03FF  0092               	movwf	18	;volatile
  6640  0400  3090               	movlw	144
  6641  0401  2C5B               	goto	L5
  6642  0402                     i1l4889:	
  6643                           ;one_sw_two_dimmmer.c: 718: case '6':
  6644                           
  6645                           
  6646                           ;one_sw_two_dimmmer.c: 719: TMR3H=0xEA; TMR3L=0x20; T3CONbits.TMR3ON = 1; break;
  6647  0402  30EA               	movlw	234
  6648  0403                     L86:	
  6649  0403  0028               	movlb	8	; select bank8
  6650  0404  0092               	movwf	18	;volatile
  6651  0405  3020               	movlw	32
  6652  0406  2C5B               	goto	L5
  6653  0407                     i1l4893:	
  6654                           ;one_sw_two_dimmmer.c: 720: case '7':
  6655                           
  6656                           
  6657                           ;one_sw_two_dimmmer.c: 721: TMR3H=0xEB; TMR3L=0xB0; T3CONbits.TMR3ON = 1; break;
  6658  0407  30EB               	movlw	235
  6659  0408                     L87:	
  6660  0408  0028               	movlb	8	; select bank8
  6661  0409  0092               	movwf	18	;volatile
  6662  040A  30B0               	movlw	176
  6663  040B  2C5B               	goto	L5
  6664  040C                     i1l4897:	
  6665                           ;one_sw_two_dimmmer.c: 722: case '8':
  6666                           
  6667                           
  6668                           ;one_sw_two_dimmmer.c: 723: TMR3H=0xEC; TMR3L=0x78; T3CONbits.TMR3ON = 1; break;
  6669  040C  30EC               	movlw	236
  6670  040D                     L107:	
  6671  040D  0028               	movlb	8	; select bank8
  6672  040E  0092               	movwf	18	;volatile
  6673  040F  3078               	movlw	120
  6674  0410  2C5B               	goto	L5
  6675  0411                     i1l4901:	
  6676                           ;one_sw_two_dimmmer.c: 724: case '9':
  6677                           
  6678                           
  6679                           ;one_sw_two_dimmmer.c: 725: TMR3H=0xED; TMR3L=0x40; T3CONbits.TMR3ON = 1; break;
  6680  0411  30ED               	movlw	237
  6681  0412                     L88:	
  6682  0412  0028               	movlb	8	; select bank8
  6683  0413  0092               	movwf	18	;volatile
  6684  0414  3040               	movlw	64
  6685  0415  2C5B               	goto	L5
  6686  0416                     i1l4907:	
  6687                           ;one_sw_two_dimmmer.c: 728: }
  6688                           
  6689                           ;one_sw_two_dimmmer.c: 727: break;
  6690                           
  6691                           ;one_sw_two_dimmmer.c: 726: default:
  6692                           
  6693                           
  6694                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6695                           ; Switch size 1, requested type "space"
  6696                           ; Number of cases is 1, Range of values is 0 to 0
  6697                           ; switch strategies available:
  6698                           ; Name         Instructions Cycles
  6699                           ; simple_byte            4     3 (average)
  6700                           ; direct_byte            8     6 (fixed)
  6701                           ; jumptable            260     6 (fixed)
  6702                           ;	Chosen strategy is simple_byte
  6703  0416  0020               	movlb	0	; select bank0
  6704  0417  0850               	movf	_FAN_SPEED2_1s+1,w
  6705  0418  3A00               	xorlw	0	; case 0
  6706  0419  1903               	skipnz
  6707  041A  2C1C               	goto	i1l7797
  6708  041B  2C84               	goto	i1l402
  6709  041C                     i1l7797:	
  6710                           
  6711                           ; Switch size 1, requested type "space"
  6712                           ; Number of cases is 10, Range of values is 48 to 57
  6713                           ; switch strategies available:
  6714                           ; Name         Instructions Cycles
  6715                           ; direct_byte           29     9 (fixed)
  6716                           ; simple_byte           31    16 (average)
  6717                           ; jumptable            263     9 (fixed)
  6718                           ;	Chosen strategy is direct_byte
  6719  041C  084F               	movf	_FAN_SPEED2_1s,w
  6720  041D  3ED0               	addlw	-48
  6721  041E  1C03               	skipc
  6722  041F  2C84               	goto	i1l402
  6723  0420  0084               	movwf	4
  6724  0421  300A               	movlw	10
  6725  0422  0204               	subwf	4,w
  6726  0423  1803               	skipnc
  6727  0424  2C84               	goto	i1l402
  6728  0425  3189               	movlp	high i1S7799
  6729  0426  3504               	lslf	4,w
  6730  0427  3E8C               	addlw	low i1S7799
  6731  0428  0082               	movwf	2
  6732                           
  6733                           ;one_sw_two_dimmmer.c: 729: break;
  6734  0429  2C84               	goto	i1l402
  6735  042A                     i1l4909:	
  6736                           ;one_sw_two_dimmmer.c: 733: {
  6737                           ;one_sw_two_dimmmer.c: 734: case '0':
  6738                           
  6739                           ;one_sw_two_dimmmer.c: 732: switch(FAN_SPEED2_1s)
  6740                           
  6741                           ;one_sw_two_dimmmer.c: 730: case '9':
  6742                           
  6743                           
  6744                           ;one_sw_two_dimmmer.c: 735: TMR3H=0xEE; TMR3L=0xD0; T3CONbits.TMR3ON = 1; break;
  6745  042A  30EE               	movlw	238
  6746  042B                     L89:	
  6747  042B  0028               	movlb	8	; select bank8
  6748  042C  0092               	movwf	18	;volatile
  6749  042D  30D0               	movlw	208
  6750  042E  2C5B               	goto	L5
  6751  042F                     i1l4913:	
  6752                           ;one_sw_two_dimmmer.c: 736: case '1':
  6753                           
  6754                           
  6755                           ;one_sw_two_dimmmer.c: 737: TMR3H=0xF0; TMR3L=0x60; T3CONbits.TMR3ON = 1; break;
  6756  042F  30F0               	movlw	240
  6757  0430                     L90:	
  6758  0430  0028               	movlb	8	; select bank8
  6759  0431  0092               	movwf	18	;volatile
  6760  0432  3060               	movlw	96
  6761  0433  2C5B               	goto	L5
  6762  0434                     i1l4917:	
  6763                           ;one_sw_two_dimmmer.c: 738: case '2':
  6764                           
  6765                           
  6766                           ;one_sw_two_dimmmer.c: 739: TMR3H=0xF1; TMR3L=0xF0; T3CONbits.TMR3ON = 1; break;
  6767  0434  30F1               	movlw	241
  6768  0435                     L91:	
  6769  0435  0028               	movlb	8	; select bank8
  6770  0436  0092               	movwf	18	;volatile
  6771  0437  30F0               	movlw	240
  6772  0438  2C5B               	goto	L5
  6773  0439                     i1l4921:	
  6774                           ;one_sw_two_dimmmer.c: 740: case '3':
  6775                           
  6776                           
  6777                           ;one_sw_two_dimmmer.c: 741: TMR3H=0xF3; TMR3L=0x80; T3CONbits.TMR3ON = 1; break;
  6778  0439  30F3               	movlw	243
  6779  043A                     L92:	
  6780  043A  0028               	movlb	8	; select bank8
  6781  043B  0092               	movwf	18	;volatile
  6782  043C  3080               	movlw	128
  6783  043D  2C5B               	goto	L5
  6784  043E                     i1l4925:	
  6785                           ;one_sw_two_dimmmer.c: 742: case '4':
  6786                           
  6787                           
  6788                           ;one_sw_two_dimmmer.c: 743: TMR3H=0xF5; TMR3L=0x10; T3CONbits.TMR3ON = 1; break;
  6789  043E  30F5               	movlw	245
  6790  043F                     L93:	
  6791  043F  0028               	movlb	8	; select bank8
  6792  0440  0092               	movwf	18	;volatile
  6793  0441  3010               	movlw	16
  6794  0442  2C5B               	goto	L5
  6795  0443                     i1l4929:	
  6796                           ;one_sw_two_dimmmer.c: 744: case '5':
  6797                           
  6798                           
  6799                           ;one_sw_two_dimmmer.c: 745: TMR3H=0xF6; TMR3L=0xA0; T3CONbits.TMR3ON = 1; break;
  6800  0443  30F6               	movlw	246
  6801  0444                     L94:	
  6802  0444  0028               	movlb	8	; select bank8
  6803  0445  0092               	movwf	18	;volatile
  6804  0446  30A0               	movlw	160
  6805  0447  2C5B               	goto	L5
  6806  0448                     i1l4933:	
  6807                           ;one_sw_two_dimmmer.c: 746: case '6':
  6808                           
  6809                           
  6810                           ;one_sw_two_dimmmer.c: 747: TMR3H=0xF8; TMR3L=0x30; T3CONbits.TMR3ON = 1; break;
  6811  0448  30F8               	movlw	248
  6812  0449                     L95:	
  6813  0449  0028               	movlb	8	; select bank8
  6814  044A  0092               	movwf	18	;volatile
  6815  044B  3030               	movlw	48
  6816  044C  2C5B               	goto	L5
  6817  044D                     i1l4937:	
  6818                           ;one_sw_two_dimmmer.c: 748: case '7':
  6819                           
  6820                           
  6821                           ;one_sw_two_dimmmer.c: 749: TMR3H=0xF9; TMR3L=0xC0; T3CONbits.TMR3ON = 1; break;
  6822  044D  30F9               	movlw	249
  6823  044E                     L96:	
  6824  044E  0028               	movlb	8	; select bank8
  6825  044F  0092               	movwf	18	;volatile
  6826  0450  30C0               	movlw	192
  6827  0451  2C5B               	goto	L5
  6828  0452                     i1l4941:	
  6829                           ;one_sw_two_dimmmer.c: 750: case '8':
  6830                           
  6831                           
  6832                           ;one_sw_two_dimmmer.c: 751: TMR3H=0xFB; TMR3L=0x50; T3CONbits.TMR3ON = 1; break;
  6833  0452  30FB               	movlw	251
  6834  0453                     L97:	
  6835  0453  0028               	movlb	8	; select bank8
  6836  0454  0092               	movwf	18	;volatile
  6837  0455  3050               	movlw	80
  6838  0456  2C5B               	goto	L5
  6839  0457                     i1l4945:	
  6840                           ;one_sw_two_dimmmer.c: 752: case '9':
  6841                           
  6842                           
  6843                           ;one_sw_two_dimmmer.c: 753: TMR3H=0xFC; TMR3L=0xE0; T3CONbits.TMR3ON = 1; break;
  6844  0457  30FC               	movlw	252
  6845  0458                     L67:	
  6846  0458  0028               	movlb	8	; select bank8
  6847  0459  0092               	movwf	18	;volatile
  6848  045A  30E0               	movlw	224
  6849  045B                     L5:	
  6850  045B  0091               	movwf	17	;volatile
  6851  045C                     i1l4947:	
  6852  045C  1413               	bsf	19,0	;volatile
  6853                           
  6854                           ;one_sw_two_dimmmer.c: 756: }
  6855                           
  6856                           ;one_sw_two_dimmmer.c: 755: break;
  6857                           
  6858                           ;one_sw_two_dimmmer.c: 754: default:
  6859  045D  2C84               	goto	i1l402
  6860  045E                     i1l4951:	
  6861                           
  6862                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6863                           ; Switch size 1, requested type "space"
  6864                           ; Number of cases is 1, Range of values is 0 to 0
  6865                           ; switch strategies available:
  6866                           ; Name         Instructions Cycles
  6867                           ; simple_byte            4     3 (average)
  6868                           ; direct_byte            8     6 (fixed)
  6869                           ; jumptable            260     6 (fixed)
  6870                           ;	Chosen strategy is simple_byte
  6871  045E  0020               	movlb	0	; select bank0
  6872  045F  0850               	movf	_FAN_SPEED2_1s+1,w
  6873  0460  3A00               	xorlw	0	; case 0
  6874  0461  1903               	skipnz
  6875  0462  2C64               	goto	i1l7801
  6876  0463  2C84               	goto	i1l402
  6877  0464                     i1l7801:	
  6878                           
  6879                           ; Switch size 1, requested type "space"
  6880                           ; Number of cases is 10, Range of values is 48 to 57
  6881                           ; switch strategies available:
  6882                           ; Name         Instructions Cycles
  6883                           ; direct_byte           29     9 (fixed)
  6884                           ; simple_byte           31    16 (average)
  6885                           ; jumptable            263     9 (fixed)
  6886                           ;	Chosen strategy is direct_byte
  6887  0464  084F               	movf	_FAN_SPEED2_1s,w
  6888  0465  3ED0               	addlw	-48
  6889  0466  1C03               	skipc
  6890  0467  2C84               	goto	i1l402
  6891  0468  0084               	movwf	4
  6892  0469  300A               	movlw	10
  6893  046A  0204               	subwf	4,w
  6894  046B  1803               	skipnc
  6895  046C  2C84               	goto	i1l402
  6896  046D  3189               	movlp	high i1S7803
  6897  046E  3504               	lslf	4,w
  6898  046F  3EA0               	addlw	low i1S7803
  6899  0470  0082               	movwf	2
  6900                           
  6901                           ;one_sw_two_dimmmer.c: 760: }
  6902                           
  6903                           ;one_sw_two_dimmmer.c: 759: break;
  6904                           
  6905                           ;one_sw_two_dimmmer.c: 758: default:
  6906                           
  6907                           ;one_sw_two_dimmmer.c: 757: break;
  6908  0471  2C84               	goto	i1l402
  6909  0472                     i1l4955:	
  6910                           
  6911                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6912                           ; Switch size 1, requested type "space"
  6913                           ; Number of cases is 1, Range of values is 0 to 0
  6914                           ; switch strategies available:
  6915                           ; Name         Instructions Cycles
  6916                           ; simple_byte            4     3 (average)
  6917                           ; direct_byte            8     6 (fixed)
  6918                           ; jumptable            260     6 (fixed)
  6919                           ;	Chosen strategy is simple_byte
  6920  0472  0852               	movf	_FAN_SPEED2_10s+1,w
  6921  0473  3A00               	xorlw	0	; case 0
  6922  0474  1903               	skipnz
  6923  0475  2C77               	goto	i1l7805
  6924  0476  2C84               	goto	i1l402
  6925  0477                     i1l7805:	
  6926                           
  6927                           ; Switch size 1, requested type "space"
  6928                           ; Number of cases is 10, Range of values is 48 to 57
  6929                           ; switch strategies available:
  6930                           ; Name         Instructions Cycles
  6931                           ; direct_byte           29     9 (fixed)
  6932                           ; simple_byte           31    16 (average)
  6933                           ; jumptable            263     9 (fixed)
  6934                           ;	Chosen strategy is direct_byte
  6935  0477  0851               	movf	_FAN_SPEED2_10s,w
  6936  0478  3ED0               	addlw	-48
  6937  0479  1C03               	skipc
  6938  047A  2C84               	goto	i1l402
  6939  047B  0084               	movwf	4
  6940  047C  300A               	movlw	10
  6941  047D  0204               	subwf	4,w
  6942  047E  1803               	skipnc
  6943  047F  2C84               	goto	i1l402
  6944  0480  3189               	movlp	high i1S7807
  6945  0481  3504               	lslf	4,w
  6946  0482  3EB4               	addlw	low i1S7807
  6947  0483  0082               	movwf	2
  6948  0484                     i1l402:	
  6949                           
  6950                           ;one_sw_two_dimmmer.c: 761: }
  6951                           ;one_sw_two_dimmmer.c: 762: PIR3bits.CCP3IF = 0;
  6952  0484  0020               	movlb	0	; select bank0
  6953  0485  1213               	bcf	19,4	;volatile
  6954  0486                     i1l546:	
  6955  0486  0871               	movf	??_isr+1,w
  6956  0487  00FF               	movwf	127
  6957  0488  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6958  0489  0009               	retfie
  6959  048A                     __end_of_isr:	
  6960  007E                     btemp	set	126	;btemp
  6961  007E                     int$flags	set	126
  6962  007E                     wtemp0	set	126
  6963                           
  6964                           	psect	swtext1
  6965  0800                     __pswtext1:	
  6966  0800                     i1S7723:	
  6967  0800  3180  2898         	ljmp	i1l4041
  6968  0802  3180  289A         	ljmp	i1l4045
  6969  0804  3180  289C         	ljmp	i1l4049
  6970  0806  3180  28A0         	ljmp	i1l4053
  6971  0808  3180  28A4         	ljmp	i1l4057
  6972  080A  3180  28A6         	ljmp	i1l4061
  6973  080C  3180  28A8         	ljmp	i1l4065
  6974  080E  3180  28AA         	ljmp	i1l4071
  6975  0810  3180  28AE         	ljmp	i1l4075
  6976  0812  3180  28AF         	ljmp	i1l4079
  6977                           
  6978                           	psect	swtext2
  6979  0814                     __pswtext2:	
  6980  0814                     i1S7727:	
  6981  0814  3180  28C6         	ljmp	i1l4087
  6982  0816  3180  28C8         	ljmp	i1l4091
  6983  0818  3180  28CC         	ljmp	i1l4095
  6984  081A  3180  28CE         	ljmp	i1l4099
  6985  081C  3180  28D0         	ljmp	i1l4103
  6986  081E  3180  28D2         	ljmp	i1l4107
  6987  0820  3180  28D6         	ljmp	i1l4111
  6988  0822  3180  28D8         	ljmp	i1l4115
  6989  0824  3180  28DC         	ljmp	i1l4119
  6990  0826  3180  28DE         	ljmp	i1l4123
  6991                           
  6992                           	psect	swtext3
  6993  0828                     __pswtext3:	
  6994  0828                     i1S7731:	
  6995  0828  3180  28F5         	ljmp	i1l4131
  6996  082A  3180  28F7         	ljmp	i1l4135
  6997  082C  3180  28FB         	ljmp	i1l4139
  6998  082E  3180  28FD         	ljmp	i1l4143
  6999  0830  3181  2901         	ljmp	i1l4147
  7000  0832  3181  2903         	ljmp	i1l4151
  7001  0834  3181  2907         	ljmp	i1l4155
  7002  0836  3181  2909         	ljmp	i1l4159
  7003  0838  3181  290D         	ljmp	i1l4163
  7004  083A  3181  290F         	ljmp	i1l4167
  7005                           
  7006                           	psect	swtext4
  7007  083C                     __pswtext4:	
  7008  083C                     i1S7735:	
  7009  083C  3181  2926         	ljmp	i1l4175
  7010  083E  3181  2928         	ljmp	i1l4179
  7011  0840  3181  292A         	ljmp	i1l4183
  7012  0842  3181  292C         	ljmp	i1l4187
  7013  0844  3181  292E         	ljmp	i1l4191
  7014  0846  3181  2930         	ljmp	i1l4197
  7015  0848  3181  2932         	ljmp	i1l4201
  7016  084A  3181  2934         	ljmp	i1l4205
  7017  084C  3181  2936         	ljmp	i1l4209
  7018  084E  3181  2938         	ljmp	i1l4213
  7019                           
  7020                           	psect	swtext5
  7021  0850                     __pswtext5:	
  7022  0850                     i1S7739:	
  7023  0850  3181  294D         	ljmp	i1l4221
  7024  0852  3181  294F         	ljmp	i1l4225
  7025  0854  3181  2951         	ljmp	i1l4229
  7026  0856  3181  2953         	ljmp	i1l4233
  7027  0858  3181  2955         	ljmp	i1l4237
  7028  085A  3181  2957         	ljmp	i1l4241
  7029  085C  3181  2959         	ljmp	i1l4245
  7030  085E  3181  295B         	ljmp	i1l4249
  7031  0860  3181  295D         	ljmp	i1l4253
  7032  0862  3181  295F         	ljmp	i1l4257
  7033                           
  7034                           	psect	swtext6
  7035  0864                     __pswtext6:	
  7036  0864                     i1S7743:	
  7037  0864  3181  2974         	ljmp	i1l4265
  7038  0866  3181  2976         	ljmp	i1l4271
  7039  0868  3181  2978         	ljmp	i1l4275
  7040  086A  3181  297A         	ljmp	i1l4279
  7041  086C  3181  297C         	ljmp	i1l4283
  7042  086E  3181  297E         	ljmp	i1l4287
  7043  0870  3181  2980         	ljmp	i1l4291
  7044  0872  3181  2982         	ljmp	i1l4295
  7045  0874  3181  2984         	ljmp	i1l4299
  7046  0876  3181  2986         	ljmp	i1l4303
  7047                           
  7048                           	psect	swtext7
  7049  0878                     __pswtext7:	
  7050  0878                     i1S7747:	
  7051  0878  3181  299B         	ljmp	i1l4311
  7052  087A  3181  299D         	ljmp	i1l4315
  7053  087C  3181  299F         	ljmp	i1l4319
  7054  087E  3181  29A1         	ljmp	i1l4323
  7055  0880  3181  29A3         	ljmp	i1l4327
  7056  0882  3181  29A5         	ljmp	i1l4331
  7057  0884  3181  29A7         	ljmp	i1l4335
  7058  0886  3181  29A9         	ljmp	i1l4341
  7059  0888  3181  29AB         	ljmp	i1l4345
  7060  088A  3181  29AD         	ljmp	i1l4349
  7061                           
  7062                           	psect	swtext8
  7063  088C                     __pswtext8:	
  7064  088C                     i1S7751:	
  7065  088C  3181  29C2         	ljmp	i1l4357
  7066  088E  3181  29C4         	ljmp	i1l4361
  7067  0890  3181  29C6         	ljmp	i1l4365
  7068  0892  3181  29C8         	ljmp	i1l4369
  7069  0894  3181  29CA         	ljmp	i1l4373
  7070  0896  3181  29CC         	ljmp	i1l4377
  7071  0898  3181  29CE         	ljmp	i1l4381
  7072  089A  3181  29D0         	ljmp	i1l4385
  7073  089C  3181  29D2         	ljmp	i1l4389
  7074  089E  3181  29D4         	ljmp	i1l4393
  7075                           
  7076                           	psect	swtext9
  7077  08A0                     __pswtext9:	
  7078  08A0                     i1S7755:	
  7079  08A0  3181  29E9         	ljmp	i1l4401
  7080  08A2  3181  29EB         	ljmp	i1l4405
  7081  08A4  3181  29EF         	ljmp	i1l4409
  7082  08A6  3181  29F3         	ljmp	i1l4413
  7083  08A8  3181  29F7         	ljmp	i1l4417
  7084  08AA  3181  29FB         	ljmp	i1l4423
  7085  08AC  3181  29FF         	ljmp	i1l4427
  7086  08AE  3182  2A03         	ljmp	i1l4431
  7087  08B0  3182  2A07         	ljmp	i1l4435
  7088  08B2  3182  2A0B         	ljmp	i1l4439
  7089                           
  7090                           	psect	swtext10
  7091  08B4                     __pswtext10:	
  7092  08B4                     i1S7759:	
  7093  08B4  3182  2A22         	ljmp	i1l4447
  7094  08B6  3182  2A26         	ljmp	i1l4451
  7095  08B8  3182  2A2A         	ljmp	i1l4455
  7096  08BA  3182  2A2E         	ljmp	i1l4459
  7097  08BC  3182  2A32         	ljmp	i1l4463
  7098  08BE  3182  2A36         	ljmp	i1l4467
  7099  08C0  3182  2A3A         	ljmp	i1l4471
  7100  08C2  3182  2A3E         	ljmp	i1l4475
  7101  08C4  3182  2A42         	ljmp	i1l4479
  7102  08C6  3182  2A46         	ljmp	i1l4483
  7103                           
  7104                           	psect	swtext11
  7105  08C8                     __pswtext11:	
  7106  08C8                     i1S7763:	
  7107  08C8  3180  28B3         	ljmp	i1l4085
  7108  08CA  3180  28E2         	ljmp	i1l4129
  7109  08CC  3181  2913         	ljmp	i1l4173
  7110  08CE  3181  293A         	ljmp	i1l4219
  7111  08D0  3181  2961         	ljmp	i1l4263
  7112  08D2  3181  2988         	ljmp	i1l4309
  7113  08D4  3181  29AF         	ljmp	i1l4355
  7114  08D6  3181  29D6         	ljmp	i1l4399
  7115  08D8  3182  2A0F         	ljmp	i1l4445
  7116  08DA  3182  2A4C         	ljmp	i1l4489
  7117                           
  7118                           	psect	swtext12
  7119  08DC                     __pswtext12:	
  7120  08DC                     i1S7767:	
  7121  08DC  3182  2A81         	ljmp	i1l4503
  7122  08DE  3182  2A83         	ljmp	i1l4507
  7123  08E0  3182  2A85         	ljmp	i1l4511
  7124  08E2  3182  2A8A         	ljmp	i1l4515
  7125  08E4  3182  2A8F         	ljmp	i1l4519
  7126  08E6  3182  2A91         	ljmp	i1l4523
  7127  08E8  3182  2A93         	ljmp	i1l4527
  7128  08EA  3182  2A95         	ljmp	i1l4533
  7129  08EC  3182  2A9A         	ljmp	i1l4537
  7130  08EE  3182  2A9B         	ljmp	i1l4541
  7131                           
  7132                           	psect	swtext13
  7133  0900                     __pswtext13:	
  7134  0900                     i1S7771:	
  7135  0900  3182  2AB4         	ljmp	i1l4549
  7136  0902  3182  2AB6         	ljmp	i1l4553
  7137  0904  3182  2ABB         	ljmp	i1l4557
  7138  0906  3182  2ABD         	ljmp	i1l4561
  7139  0908  3182  2ABF         	ljmp	i1l4565
  7140  090A  3182  2AC1         	ljmp	i1l4569
  7141  090C  3182  2AC6         	ljmp	i1l4573
  7142  090E  3182  2AC8         	ljmp	i1l4577
  7143  0910  3182  2ACD         	ljmp	i1l4581
  7144  0912  3182  2ACF         	ljmp	i1l4585
  7145                           
  7146                           	psect	swtext14
  7147  0914                     __pswtext14:	
  7148  0914                     i1S7775:	
  7149  0914  3182  2AE8         	ljmp	i1l4593
  7150  0916  3182  2AEA         	ljmp	i1l4597
  7151  0918  3182  2AEF         	ljmp	i1l4601
  7152  091A  3182  2AF1         	ljmp	i1l4605
  7153  091C  3182  2AF6         	ljmp	i1l4609
  7154  091E  3182  2AF8         	ljmp	i1l4613
  7155  0920  3182  2AFD         	ljmp	i1l4617
  7156  0922  3182  2AFF         	ljmp	i1l4621
  7157  0924  3183  2B04         	ljmp	i1l4625
  7158  0926  3183  2B06         	ljmp	i1l4629
  7159                           
  7160                           	psect	swtext15
  7161  0928                     __pswtext15:	
  7162  0928                     i1S7779:	
  7163  0928  3183  2B1F         	ljmp	i1l4637
  7164  092A  3183  2B21         	ljmp	i1l4641
  7165  092C  3183  2B23         	ljmp	i1l4645
  7166  092E  3183  2B25         	ljmp	i1l4649
  7167  0930  3183  2B27         	ljmp	i1l4653
  7168  0932  3183  2B29         	ljmp	i1l4659
  7169  0934  3183  2B2B         	ljmp	i1l4663
  7170  0936  3183  2B2D         	ljmp	i1l4667
  7171  0938  3183  2B2F         	ljmp	i1l4671
  7172  093A  3183  2B31         	ljmp	i1l4675
  7173                           
  7174                           	psect	swtext16
  7175  093C                     __pswtext16:	
  7176  093C                     i1S7783:	
  7177  093C  3183  2B47         	ljmp	i1l4683
  7178  093E  3183  2B49         	ljmp	i1l4687
  7179  0940  3183  2B4B         	ljmp	i1l4691
  7180  0942  3183  2B4D         	ljmp	i1l4695
  7181  0944  3183  2B4F         	ljmp	i1l4699
  7182  0946  3183  2B51         	ljmp	i1l4703
  7183  0948  3183  2B53         	ljmp	i1l4707
  7184  094A  3183  2B55         	ljmp	i1l4711
  7185  094C  3183  2B57         	ljmp	i1l4715
  7186  094E  3183  2B59         	ljmp	i1l4719
  7187                           
  7188                           	psect	swtext17
  7189  0950                     __pswtext17:	
  7190  0950                     i1S7787:	
  7191  0950  3183  2B6F         	ljmp	i1l4727
  7192  0952  3183  2B71         	ljmp	i1l4733
  7193  0954  3183  2B73         	ljmp	i1l4737
  7194  0956  3183  2B75         	ljmp	i1l4741
  7195  0958  3183  2B77         	ljmp	i1l4745
  7196  095A  3183  2B79         	ljmp	i1l4749
  7197  095C  3183  2B7B         	ljmp	i1l4753
  7198  095E  3183  2B7D         	ljmp	i1l4757
  7199  0960  3183  2B7F         	ljmp	i1l4761
  7200  0962  3183  2B81         	ljmp	i1l4765
  7201                           
  7202                           	psect	swtext18
  7203  0964                     __pswtext18:	
  7204  0964                     i1S7791:	
  7205  0964  3183  2B97         	ljmp	i1l4773
  7206  0966  3183  2B99         	ljmp	i1l4777
  7207  0968  3183  2B9B         	ljmp	i1l4781
  7208  096A  3183  2B9D         	ljmp	i1l4785
  7209  096C  3183  2B9F         	ljmp	i1l4789
  7210  096E  3183  2BA1         	ljmp	i1l4793
  7211  0970  3183  2BA3         	ljmp	i1l4797
  7212  0972  3183  2BA5         	ljmp	i1l4803
  7213  0974  3183  2BA7         	ljmp	i1l4807
  7214  0976  3183  2BA9         	ljmp	i1l4811
  7215                           
  7216                           	psect	swtext19
  7217  0978                     __pswtext19:	
  7218  0978                     i1S7795:	
  7219  0978  3183  2BBF         	ljmp	i1l4819
  7220  097A  3183  2BC1         	ljmp	i1l4823
  7221  097C  3183  2BC3         	ljmp	i1l4827
  7222  097E  3183  2BC5         	ljmp	i1l4831
  7223  0980  3183  2BC7         	ljmp	i1l4835
  7224  0982  3183  2BC9         	ljmp	i1l4839
  7225  0984  3183  2BCB         	ljmp	i1l4843
  7226  0986  3183  2BCD         	ljmp	i1l4847
  7227  0988  3183  2BCF         	ljmp	i1l4851
  7228  098A  3183  2BD1         	ljmp	i1l4855
  7229                           
  7230                           	psect	swtext20
  7231  098C                     __pswtext20:	
  7232  098C                     i1S7799:	
  7233  098C  3183  2BE7         	ljmp	i1l4863
  7234  098E  3183  2BE9         	ljmp	i1l4867
  7235  0990  3183  2BEE         	ljmp	i1l4871
  7236  0992  3183  2BF3         	ljmp	i1l4875
  7237  0994  3183  2BF8         	ljmp	i1l4879
  7238  0996  3183  2BFD         	ljmp	i1l4885
  7239  0998  3184  2C02         	ljmp	i1l4889
  7240  099A  3184  2C07         	ljmp	i1l4893
  7241  099C  3184  2C0C         	ljmp	i1l4897
  7242  099E  3184  2C11         	ljmp	i1l4901
  7243                           
  7244                           	psect	swtext21
  7245  09A0                     __pswtext21:	
  7246  09A0                     i1S7803:	
  7247  09A0  3184  2C2A         	ljmp	i1l4909
  7248  09A2  3184  2C2F         	ljmp	i1l4913
  7249  09A4  3184  2C34         	ljmp	i1l4917
  7250  09A6  3184  2C39         	ljmp	i1l4921
  7251  09A8  3184  2C3E         	ljmp	i1l4925
  7252  09AA  3184  2C43         	ljmp	i1l4929
  7253  09AC  3184  2C48         	ljmp	i1l4933
  7254  09AE  3184  2C4D         	ljmp	i1l4937
  7255  09B0  3184  2C52         	ljmp	i1l4941
  7256  09B2  3184  2C57         	ljmp	i1l4945
  7257                           
  7258                           	psect	swtext22
  7259  09B4                     __pswtext22:	
  7260  09B4                     i1S7807:	
  7261  09B4  3182  2AA0         	ljmp	i1l4547
  7262  09B6  3182  2AD4         	ljmp	i1l4591
  7263  09B8  3183  2B0B         	ljmp	i1l4635
  7264  09BA  3183  2B33         	ljmp	i1l4681
  7265  09BC  3183  2B5B         	ljmp	i1l4725
  7266  09BE  3183  2B83         	ljmp	i1l4771
  7267  09C0  3183  2BAB         	ljmp	i1l4817
  7268  09C2  3183  2BD3         	ljmp	i1l4861
  7269  09C4  3184  2C16         	ljmp	i1l4907
  7270  09C6  3184  2C5E         	ljmp	i1l4951


Data Sizes:
    Strings     12
    Constant    0
    Data        120
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     37      65
    BANK1            80     16      78
    BANK2            80      0      72
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            32      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(1) Largest target is 2
		 -> ACTION@FanSpeedString(BANK0[2]), ACTION@SwNumString(BANK0[2]), 

    writeUART@str2Write	PTR unsigned char  size(1) Largest target is 26
		 -> st(BANK1[26]), 


Critical Paths under _main in COMMON

    _main->_copy_frame
    _ACTION->_atoi
    _atoi->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ACTION
    _ACTION->_atoi

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    4820
                                             31 BANK0      6     6      0
                                              0 BANK1     16    16      0
                             _ACTION
                         _copy_frame
                     _periperal_init
                        _pin_manager
                          _writeUART
 ---------------------------------------------------------------------------------
 (1) _pin_manager                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _periperal_init                                       0     0      0       0
                    _CCP1_Initialize
                    _CCP3_Initialize
                    _CCP9_Initialize
                  _EUSART_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP9_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _copy_frame                                           9     5      4     461
                                              2 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _ACTION                                              25    19      6    3249
                                              6 BANK0     25    19      6
                               _atoi
                          _writeUART
 ---------------------------------------------------------------------------------
 (1) _writeUART                                            4     4      0     281
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2     759
                                              8 COMMON     2     0      2
                                              0 BANK0      6     6      0
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     266
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ACTION
     _atoi
       ___wmul
       _isdigit
     _writeUART
   _copy_frame
   _periperal_init
     _CCP1_Initialize
     _CCP3_Initialize
     _CCP9_Initialize
     _EUSART_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
     _TMR5_Initialize
     _TMR6_Initialize
   _pin_manager
   _writeUART

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      E3       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     25      41       6       81.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     10      4E       8       97.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      48      10       90.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            20      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               20      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
DATA                 0      0      E3      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Oct 05 13:27:17 2018

   __size_of_periperal_init 001E                           _i 005B                           pc 0002  
               __CFG_CP$OFF 0000                          _M1 0049                          _M2 00D0  
                        _M3 0047                          _M4 0045                          _M5 00CE  
                        _ak 0057                          _pk 0059                          _tk 00DC  
                        _st 00B4         ___wmul@multiplicand 0074     __end_of_CCP1_Initialize 09D4  
                       l602 0FAF                         l614 0D92                         l606 0FEA  
                       l609 0FFF                         l655 0DAB                         l589 0E32  
                       l598 0F6A                         _GIE 005F                         _RA2 0062  
                       _RA3 0063                         _RA5 0065                         _RF0 1460  
                       _RF3 1463                         _RF5 1465                         _PR2 001B  
                       _PR4 0416                         _man 005F                         _isr 0004  
           _TMR2_Initialize 09F3                __CFG_BORV$LO 0000                         wreg 0009  
              __CFG_FOSC$HS 0000                __CFG_LVP$OFF 0000                        l6411 0E70  
                      l6403 0D8D                        l6407 0E6B                        l6273 0DA5  
                      l6425 0E8D                        l6409 0E64                        l6435 0EC8  
                      l6427 0E91                        l6419 0E86                        l6293 07FA  
                      l6429 0EB8                        l6541 0F66                        l6551 0F8F  
                      l6543 0F71                        l6703 065B                        l6553 0F92  
                      l6545 0F77                        l6721 0691                        l6617 0507  
                      l6491 0E5E                        l6651 0571                        l6643 0555  
                      ?_isr 0070                        l6565 0FCA                        l6717 0688  
                      l6661 0592                        l6567 0FCD                        l6559 0FB4  
                      l6575 0FEF                        l6815 079F                        l6735 06BE  
                      l6671 05BA                        l6755 06F6                        l6739 06C5  
                      l6683 05F1                        l6691 0612                        l6669 05B4  
                      l7719 0FF4                        l6775 072F                        l6759 06FE  
                      l6697 0620                        l6689 060F                        l6795 0766  
                      l6779 0735                        l6799 076E                        STR_1 1000  
                      u2005 0DAC                        u2015 0DB1                        u2230 0FC8  
                      u2135 0E3C                        u2160 0F6F                        u2315 0532  
                      u2190 0F8D                        u2455 05EF                        u2465 060D  
                      u2737 04C6                        u2747 05BE                        _PEIE 005E  
                      u2757 05CA                        u2767 05D6                        _RCIF 008D  
                      _TMR2 001A                        _TMR4 0415                        _TMR6 041C  
                      _WPUE 0210                        _WPUG 048D                __CFG_WRT$OFF 0000  
         ACTION@SwNumString 0037                        _atoi 0E62           writeUART@Tx_count 0073  
                      _main 04C0                        _copy 0120                        _name 0144  
                      fsr0h 0005                        fsr1h 0007                        indf0 0000  
                      fsr0l 0004                        indf1 0001                        fsr1l 0006  
                      btemp 007E                        start 048A               __CFG_IESO$OFF 0000  
           _TMR3_Initialize 09E9                       ??_isr 0070                main@end_flag 00E8  
                     ?_atoi 0078     __end_of_CCP3_Initialize 0A11                       ?_main 0070  
             __CFG_WDTE$OFF 0000                       _T1CON 0018                       _T2CON 001C  
                     _T3CON 0413                       _T4CON 0417                       _T5CON 041A  
                     _T6CON 041E                       i1l231 0010                       i1l240 0048  
                     i1l402 0484                       i1l234 0016                       i1l251 0078  
                     i1l243 004D                       i1l237 0042                       i1l246 0053  
                     i1l255 008A                       i1l256 0273                       i1l257 0271  
                     i1l249 0062                       i1l546 0486                       _TMR1H 0017  
                     _TMR3H 0412                       _TMR1L 0016                       _TMR3L 0411  
                     _TMR5H 0419                       _TMR5L 0418             _TMR4_Initialize 0A1A  
            __CFG_FCMEN$OFF 0000             __end_of_isdigit 07FC                       atoi@a 0023  
                     atoi@s 0025                       main@k 00EC                 copy_frame@k 0079  
   __end_of_TMR1_Initialize 09DF              __CFG_BOREN$OFF 0000                       status 0003  
                     wtemp0 007E             _TMR5_Initialize 09DF              __CFG_MCLRE$OFF 0000  
           __initialization 048C                __end_of_atoi 0ECD                __end_of_main 07A6  
   __end_of_TMR2_Initialize 09FD              __CFG_LPBOR$OFF 0000                      ??_atoi 0020  
                    ??_main 003F            ?_CCP1_Initialize 0070                ?_pin_manager 0070  
           _TMR6_Initialize 0A11             ACTION@sw_status 0027             _CCP9_Initialize 09FD  
                    i1S7803 09A0                      i1S7731 0828                      i1S7723 0800  
                    i1S7807 09B4                      i1S7751 088C                      i1S7743 0864  
                    i1S7735 083C                      i1S7727 0814                      _ACTION 0ECD  
                    _CCPR1H 0292                      i1S7771 0900                      i1S7763 08C8  
                    i1S7755 08A0                      i1S7747 0878                      i1S7739 0850  
                    _CCPR3H 0312                      _CCPR1L 0291                      i1S7791 0964  
                    i1S7783 093C                      i1S7775 0914                      i1S7767 08DC  
                    i1S7759 08B4                      _CCPR3L 0311                      i1S7795 0978  
                    i1S7787 0950                      i1S7779 0928                      i1S7799 098C  
                    _CCPR9H 061B                      _CCPR9L 061A          ACTION@speed_bitLow 0029  
                    _ANSELA 018C                      _ANSELE 0190                      _ANSELF 040C  
                    _ANSELG 040D                      _T1GCON 0019                      _T3GCON 0414  
                    _T5GCON 041B                      _RC1REG 0199                      _RC1STA 019D  
                    i1l4013 006E                      i1l4111 00D6                      i1l4103 00D0  
                    i1l4201 0132                      i1l4041 0098                      i1l4131 00F5  
                    i1l4123 00DE                      i1l4115 00D8                      i1l4107 00D2  
                    i1l4221 014D                      i1l4213 0138                      i1l4205 0134  
                    i1l4061 00A6                      i1l4053 00A0                      i1l4045 009A  
                    i1l4029 0085                      i1l4311 019B                      i1l4303 0186  
                    i1l4151 0103                      i1l4143 00FD                      i1l4135 00F7  
                    i1l4119 00DC                      i1l4071 00AA                      i1l4401 01E9  
                    i1l4241 0157                      i1l4233 0153                      i1l4225 014F  
                    i1l4209 0136                      i1l4129 00E2                      i1l4065 00A8  
                    i1l4057 00A4                      i1l4049 009C                      i1l4331 01A5  
                    i1l4323 01A1                      i1l4315 019D                      i1l4219 013A  
                    i1l4163 010D                      i1l4155 0107                      i1l4147 0101  
                    i1l4139 00FB                      i1l4091 00C8                      i1l4075 00AE  
   __end_of_TMR3_Initialize 09F3                      i1l4413 01F3                      i1l4405 01EB  
                    i1l4341 01A9                      i1l4309 0188                      i1l4253 015D  
                    i1l4245 0159                      i1l4237 0155                      i1l4229 0151  
                    i1l4173 0113                      i1l4085 00B3                      i1l4511 0285  
                    i1l4503 0281                      i1l4431 0203                      i1l4423 01FB  
                    i1l4335 01A7                      i1l4327 01A3                      i1l4319 019F  
                    i1l4271 0176                      i1l4263 0161                      i1l4191 012E  
                    i1l4183 012A                      i1l4175 0126                      i1l4167 010F  
                    i1l4159 0109                      i1l4095 00CC                      i1l4087 00C6  
                    i1l4079 00AF                      i1l4601 02EF                      i1l4417 01F7  
                    i1l4409 01EF                      i1l4361 01C4                      i1l4345 01AB  
                    i1l4265 0174                      i1l4257 015F                      i1l4249 015B  
                    i1l4523 0291                      i1l4515 028A                      i1l4507 0283  
                    i1l4451 0226                      i1l4435 0207                      i1l4427 01FF  
                    i1l4355 01AF                      i1l4291 0180                      i1l4283 017C  
                    i1l4275 0178                      i1l4187 012C                      i1l4179 0128  
                    i1l4099 00CE                      i1l4621 02FF                      i1l4613 02F8  
                    i1l4605 02F1                      i1l4541 029B                      i1l4533 0295  
                    i1l4445 020F                      i1l4381 01CE                      i1l4373 01CA  
                    i1l4365 01C6                      i1l4357 01C2                      i1l4349 01AD  
                    i1l4197 0130                      i1l4711 0355                      i1l4703 0351  
                    i1l4527 0293                      i1l4519 028F                      i1l4471 023A  
                    i1l4463 0232                      i1l4455 022A                      i1l4447 0222  
                    i1l4439 020B                      i1l4295 0182                      i1l4287 017E  
                    i1l4279 017A                      i1l4641 0321                      i1l4625 0304  
                    i1l4617 02FD                      i1l4609 02F6                      i1l4561 02BD  
                    i1l4553 02B6                      i1l4537 029A                      i1l4393 01D4  
                    i1l4385 01D0                      i1l4377 01CC                      i1l4369 01C8  
                    i1l4811 03A9                      i1l4803 03A5                      i1l4715 0357  
                    i1l4707 0353                      i1l4635 030B                      i1l4547 02A0  
                    i1l4483 0246                      i1l4475 023E                      i1l4467 0236  
                    i1l4459 022E                      i1l4299 0184                      i1l4901 0411  
                    i1l4741 0375                      i1l4733 0371                      i1l4725 035B  
                    i1l4653 0327                      i1l4645 0323                      i1l4637 031F  
                    i1l4629 0306                      i1l4581 02CD                      i1l4573 02C6  
                    i1l4565 02BF                      i1l4557 02BB                      i1l4549 02B4  
                    i1l4485 024A                      i1l4389 01D2                      i1l4493 025F  
                    u132_25 0037                      i1l4831 03C5                      i1l4823 03C1  
                    i1l4807 03A7                      i1l4727 036F                      i1l4719 0359  
                    i1l4671 032F                      i1l4663 032B                      i1l4591 02D4  
                    i1l4479 0242                      i1l4399 01D6                      i1l4921 0439  
                    i1l4913 042F                      i1l4817 03AB                      i1l4761 037F  
                    i1l4753 037B                      i1l4745 0377                      i1l4737 0373  
                    i1l4649 0325                      i1l4681 0333                      i1l4593 02E8  
                    i1l4585 02CF                      i1l4577 02C8                      i1l4569 02C1  
                    i1l4489 024C                      i1l4907 0416                      i1l4851 03CF  
                    i1l4843 03CB                      i1l4835 03C7                      i1l4827 03C3  
                    i1l4819 03BF                      i1l4771 0383                      i1l4691 034B  
                    i1l4683 0347                      i1l4675 0331                      i1l4667 032D  
                    i1l4659 0329                      i1l4941 0452                      i1l4933 0448  
                    i1l4925 043E                      i1l4917 0434                      i1l4909 042A  
                    i1l4861 03D3                      i1l4781 039B                      i1l4773 0397  
                    i1l4765 0381                      i1l4757 037D                      i1l4749 0379  
                    i1l4597 02EA                      i1l4951 045E                      i1l4871 03EE  
                    i1l4863 03E7                      i1l4855 03D1                      i1l4847 03CD  
                    i1l4839 03C9                      i1l4695 034D                      i1l4687 0349  
                    i1l4945 0457                      i1l4937 044D                      i1l4929 0443  
                    i1l4793 03A1                      i1l4785 039D                      i1l4777 0399  
                    i1l4947 045C                      i1l4875 03F3                      i1l4867 03E9  
                    i1l4699 034F                      i1l4955 0472                      i1l3979 0019  
                    i1l4893 0407                      i1l4885 03FD                      i1l4797 03A3  
                    i1l4789 039F                      i1l4879 03F8                      i1l3999 0059  
                    i1l7801 0464                      i1l4897 040C                      i1l4889 0402  
                    i1l7721 00B8                      i1l7805 0477                      i1l7741 018D  
                    i1l7733 013F                      i1l7725 00E7                      i1l7761 0264  
                    i1l7753 0214                      i1l7745 01B4                      i1l7737 0166  
                    i1l7729 0118                      i1l7781 0361                      i1l7773 0311  
                    i1l7765 02A6                      i1l7757 0251                      i1l7749 01DB  
                    i1l7793 03D9                      i1l7785 0389                      i1l7777 0339  
                    i1l7769 02DA                      i1l7797 041C                      i1l7789 03B1  
                    _TX1REG 019A                      _TX1STA 019E              _FAN_SPEED1_10s 0055  
            _FAN_SPEED2_10s 0051              _FAN_SPEED3_10s 00DA              __CFG_PWRTE$OFF 0000  
            _periperal_init 0DBE                      ___wmul 0DA3      main@RX_CHK_FLAG_start1 00DE  
    main@RX_CHK_FLAG_start2 00E0     __end_of_TMR4_Initialize 0A23          writeUART@str2Write 0075  
          ?_CCP3_Initialize 0070                copy_frame@sw 0077        ACTION@Switch_Num_10s 0034  
                 ??_isdigit 0072            ?_TMR1_Initialize 0070     __end_of_TMR5_Initialize 09E9  
   __end_of__initialization 04BC      __end_of_periperal_init 0DDC              __pcstackCOMMON 0070  
      ACTION@child_lock_num 0032                __pidataBANK0 07FC                __pidataBANK1 0DFC  
              __pidataBANK2 07A6            ?_TMR2_Initialize 0070     __end_of_TMR6_Initialize 0A1A  
   __end_of_CCP9_Initialize 0A07                     ?_ACTION 0026                  __pbssBANK0 0045  
                __pbssBANK1 00CE            ?_TMR3_Initialize 0070             __CFG_VCAPEN$OFF 0000  
                _child_LOCK 00A0             ?_periperal_init 0070                  __pmaintext 04C0  
     ACTION@response_starts 003B                     ?___wmul 0072                  __pintentry 0004  
                   _CCP1CON 0293                     _CCP3CON 0313                     _CCP9CON 061C  
       ACTION@speed_bitHigh 0028            ?_TMR4_Initialize 0070                     _SP1BRGH 019C  
                   _SP1BRGL 019B        __size_of_pin_manager 0020                  __pswtext10 08B4  
                __pswtext11 08C8                  __pswtext20 098C                  __pswtext12 08DC  
                __pswtext21 09A0                  __pswtext13 0900                  __pswtext22 09B4  
                __pswtext14 0914                  __pswtext15 0928                  __pswtext16 093C  
                __pswtext17 0950                  __pswtext18 0964                  __pswtext19 0978  
           __size_of_ACTION 0133                     _TX_FLAG 004D            ?_TMR5_Initialize 0070  
                _copy_frame 0E2A          __size_of_writeUART 0019                ACTION@parent 002A  
                 _FAN_FLAG1 00D6                   _FAN_FLAG2 00D4                   _FAN_FLAG3 00D2  
           __size_of___wmul 001B             __CFG_STVREN$OFF 0000            ?_TMR6_Initialize 0070  
                   _dimmer1 005E                     _dimmer2 005D                     _dimmer3 007B  
                   __ptext1 0DDC                     __ptext2 0DBE                     __ptext3 0A11  
                   __ptext4 09DF                     __ptext5 0A1A                     __ptext6 09E9  
                   __ptext7 09F3                     __ptext8 09D4                     __ptext9 0D74  
                 _T1CONbits 0018            ?_CCP9_Initialize 0070                   _T2CONbits 001C  
                   _isdigit 07EE                __size_of_isr 0486                   _T3CONbits 0413  
                 _T4CONbits 0417                   _COPY_FLAG 004B                     clrloop0 0A2A  
      end_of_initialization 04BC               copy_frame@end 0074                     init_ram 0A23  
                   initloop 0A24           _EUSART_Initialize 0D74              ACTION@FanSpeed 002E  
        ?_EUSART_Initialize 0070              main@start_flag 00E6         ??_EUSART_Initialize 0072  
         __end_of_writeUART 0DA3                   _TRISAbits 008C                   _TRISCbits 008E  
                 _TRISEbits 0090                   _TRISFbits 030C                   _TRISGbits 030D  
  __size_of_CCP1_Initialize 000C              __end_of_ACTION 1000   __end_of_EUSART_Initialize 0D8A  
               ?_copy_frame 0072              ACTION@children 0030              __end_of___wmul 0DBE  
      main@RX_CHK_FLAG_end1 00E2        main@RX_CHK_FLAG_end2 00E4         start_initialization 048C  
               __end_of_isr 048A                    ??_ACTION 002C    __size_of_CCP3_Initialize 000A  
          ??_periperal_init 0072               _FAN_SPEED1_1s 0053               _FAN_SPEED2_1s 004F  
             _FAN_SPEED3_1s 00D8    __size_of_TMR1_Initialize 000B                    ??___wmul 0076  
               __pdataBANK0 005F                 __pdataBANK1 00A0                 __pdataBANK2 0120  
       ACTION@Switch_Num_1s 0026         __size_of_copy_frame 0038                 __pbssCOMMON 007B  
                 ___latbits 0002               __pcstackBANK0 0020               __pcstackBANK1 00DE  
  __size_of_TMR2_Initialize 000A  __size_of_EUSART_Initialize 0016           ??_CCP1_Initialize 0072  
  __size_of_TMR3_Initialize 000A                   __pswtext1 0800                   __pswtext2 0814  
                 __pswtext3 0828                   __pswtext4 083C                   __pswtext5 0850  
                 __pswtext6 0864                   __pswtext7 0878                   __pswtext8 088C  
                 __pswtext9 08A0               ??_pin_manager 0072                 ACTION@SwNum 0039  
      ACTION@finalFrameStat 002B                    _BAUD1CON 019F                    ?_isdigit 0070  
  __size_of_TMR4_Initialize 0009        ACTION@FanSpeedString 0035              ___wmul@product 0076  
                 clear_ram0 0A29           ??_CCP3_Initialize 0072                    _PIE1bits 0091  
                  _PIE3bits 0093                    _PIE4bits 0094                    _PIR1bits 0011  
                  _PIR3bits 0013                    _PIR4bits 0014    __size_of_TMR5_Initialize 000A  
         ??_TMR1_Initialize 0072           ___wmul@multiplier 0072                   main@k_667 00EA  
                 _writeUART 0D8A    __size_of_TMR6_Initialize 0009         __end_of_pin_manager 0DFC  
  __size_of_CCP9_Initialize 000A                ??_copy_frame 0076           ??_TMR2_Initialize 0072  
           copy_frame@start 0072         ACTION@switch_status 003D           ??_TMR3_Initialize 0072  
               _isdigit$901 0072          __end_of_copy_frame 0E62            __size_of_isdigit 000E  
                ?_writeUART 0070                    __ptext10 09FD                    __ptext11 0A07  
                  __ptext12 09C8                    __ptext13 0E2A                    __ptext14 0ECD  
                  __ptext15 0D8A                    __ptext16 0E62                    __ptext17 07EE  
                  __ptext18 0DA3           ??_TMR4_Initialize 0072               __size_of_atoi 006B  
             __size_of_main 02E6                  _RC1STAbits 019D                    int$flags 007E  
                  atoi@sign 0022           ??_TMR5_Initialize 0072                 _pin_manager 0DDC  
           _CCP1_Initialize 09C8                    isdigit@c 0073                    intlevel1 0000  
         ??_TMR6_Initialize 0072           __CFG_CLKOUTEN$OFF 0000           ??_CCP9_Initialize 0072  
             __pstringtext1 1000               __pstringtext2 0000                 ??_writeUART 0072  
           _CCP3_Initialize 0A07                  _TX1STAbits 019E             _TMR1_Initialize 09D4  
